IQ-TREE multicore version 2.2.0.3 COVID-edition for Linux 64-bit built Aug  2 2022
Developed by Bui Quang Minh, James Barbetti, Nguyen Lam Tung,
Olga Chernomor, Heiko Schmidt, Dominik Schrempf, Michael Woodhams, Ly Trong Nhan.

Host:    baross.its.carleton.edu (AVX2, FMA3, 755 GB RAM)
Command: iqtree -s gene_alignments/trimv2_COG2924.afa -m MFP -bb 1000 -wbtl -ntmax 10 -nt AUTO -T 10 --prefix iqtree_gene_trees/COG2924 -madd C10,C20,C30,C40,C50,C60,EX2,EX3,EHO,UL2,UL3,EX_EHO,LG4M,LG4X,CF4,LG+C10,LG+C20,LG+C30,LG+C40,LG+C50,LG+C60 -mrate E,I,G,I+G,R
Seed:    98730 (Using SPRNG - Scalable Parallel Random Number Generator)
Time:    Fri Apr  7 17:51:59 2023
Kernel:  AVX+FMA - 10 threads (96 CPU cores detected)

Reading alignment file gene_alignments/trimv2_COG2924.afa ... Fasta format detected
Reading fasta file: done in 0.000815032 secs using 63.68% CPU
Alignment most likely contains protein sequences
Constructing alignment: done in 0.000776637 secs using 988% CPU
Alignment has 109 sequences with 94 columns, 94 distinct patterns
89 parsimony-informative, 4 singleton sites, 1 constant sites
                                                               Gap/Ambiguity  Composition  p-value
Analyzing sequences: done in 6.74229e-05 secs using 809.8% CPU
   1  GCF.001697225.1.Bacteria.Proteobacteria_NZ_CP014671.1_1701       5.32%    passed     99.83%
   2  GCA.002841945.1.Bacteria.Myxococcota_PHBI01000115.1_22           1.06%    passed     43.32%
   3  GCA.002255365.1.Bacteria.Proteobacteria_NCBI01000048.1_11        3.19%    passed     88.92%
   4  GCA.002699025.1.Bacteria.Myxococcota_PABA01000086.1_15           1.06%    passed     96.51%
   5  GCA.003158365.1.Bacteria.Bacteroidota_PMIW01000228.1_5           4.26%    passed     59.80%
   6  GCA.002699105.1.Bacteria.Bacteroidota_PABJ01000205.1_5           3.19%    passed     41.22%
   7  GCA.002707205.1.Bacteria.Proteobacteria_PAMH01000009.1_47        6.38%    passed     97.82%
   8  GCA.002429595.1.Bacteria.Proteobacteria_DJAM01000069.1_1         6.38%    passed     97.31%
   9  GCA.002405475.1.Bacteria.Proteobacteria_DHLX01000034.1_16        4.26%    passed     98.06%
  10  GCA.002746645.1.Bacteria.Proteobacteria_PDPU01000004.1_35        3.19%    passed     99.78%
  11  GCA.003140235.1.Bacteria.Acidobacteriota_PLJN01000124.1_10      17.02%    passed     86.55%
  12  GCA.002404295.1.Bacteria.Proteobacteria_DHJK01000038.1_1         5.32%    passed     97.86%
  13  GCA.003170275.1.Bacteria.Myxococcota_PNAM01000081.1_50           3.19%    passed     98.38%
  14  GCA.001750645.1.Bacteria.Proteobacteria_MEIF01000228.1_32        2.13%    passed     98.29%
  15  GCA.001510295.1.Archaea.Thermoproteota_LFEZ01000015.1_18        13.83%    passed     26.33%
  16  GCA.002796245.1.Bacteria.Proteobacteria_PCWT01000008.1_9         4.26%    passed     99.31%
  17  GCF.001399755.1.Bacteria.Proteobacteria_NZ_LJCP01000008.1_89     2.13%    passed     89.22%
  18  GCA.002732805.1.Bacteria.Proteobacteria_NVSS01000067.1_7        14.89%    passed     98.12%
  19  GCA.002868855.1.Bacteria.Proteobacteria_PKUM01000178.1_4         5.32%    passed     98.60%
  20  GCA.003137095.1.Bacteria.Proteobacteria_PLET01000115.1_12        6.38%    passed     99.97%
  21  GCF.001431315.1.Bacteria.Proteobacteria_NZ_LKHV01000005.1_25     4.26%    passed     73.00%
  22  GCA.002338605.1.Bacteria.Proteobacteria_DDIP01000186.1_10        4.26%    passed     99.95%
  23  GCF.000300295.4.Bacteria.Proteobacteria_WP_017376990.1           4.26%    passed     87.90%
  24  GCF.000025005.1.Bacteria.Chloroflexota_NC_013525.1_1169          4.26%    passed     98.22%
  25  GCF.900111015.1.Bacteria.Proteobacteria_NZ_FOFS01000007.1_99     2.13%    passed     99.13%
  26  GCF.002020875.1.Bacteria.Proteobacteria_WP_078484808.1           4.26%    passed     98.42%
  27  GCA.002712885.1.Bacteria.Acidobacteriota_PAUN01000013.1_25       1.06%    passed     99.50%
  28  GCA.001768075.1.Bacteria.Myxococcota_MEMX01000045.1_49           2.13%    passed     89.32%
  29  GCA.002840095.1.Bacteria.Proteobacteria_PGZL01000006.1_114       4.26%    passed     88.48%
  30  GCF.900066015.1.Bacteria.Chloroflexota_NZ_LN890655.1_833         3.19%    passed     84.73%
  31  GCA.002007405.1.Bacteria.Proteobacteria_JYIN01000002.1_68        6.38%    passed     22.16%
  32  GCA.002347925.1.Bacteria.Chloroflexota_DDYL01000130.1_47        17.02%    passed     41.06%
  33  GCA.002338715.1.Bacteria.Planctomycetota_DDIR01000016.1_11      17.02%    passed     60.50%
  34  GCF.000737335.2.Bacteria.Proteobacteria_NZ_JMCC02000054.1_39     2.13%    passed     99.61%
  35  GCF.000374645.1.Bacteria.Proteobacteria_NZ_KB894800.1_374        5.32%    passed     99.53%
  36  GCA.002631715.1.Bacteria.Proteobacteria_MRSX01000002.1_169       7.45%    passed     95.86%
  37  GCA.001735895.1.Bacteria.Proteobacteria_DS021198.1_1357          2.13%    passed     99.46%
  38  GCA.002348465.1.Bacteria.Gemmatimonadota_DEBI01000094.1_7        2.13%    passed     19.95%
  39  GCA.003155415.1.Bacteria.Proteobacteria_PMCP01000169.1_2         6.38%    passed     96.12%
  40  GCF.003967555.1.Bacteria.Chloroflexota_NZ_BIFS01000001.1_305     2.13%    passed     98.88%
  41  GCA.003509045.1.Bacteria.Planctomycetota_DODI01000002.1_7       18.09%    passed     33.14%
  42  GCA.003228965.1.Bacteria.Proteobacteria_QIGP01000040.1_9         4.26%    passed     99.91%
  43  GCA.003223995.1.Bacteria.Acidobacteriota_QHYA01000051.1_3        5.32%    passed     96.78%
  44  GCF.000284615.1.Bacteria.Proteobacteria_NC_017067.1_2956         4.26%    passed     75.28%
  45  GCF.002940605.1.Bacteria.Proteobacteria_WP_128420306.1           2.13%    passed     97.20%
  46  GCA.001873295.1.Bacteria.CG2.30.70.394_MNYW01000092.1_26        18.09%    failed      2.18%
  47  GCA.002292925.1.Bacteria.Chloroflexota_DBCF01000228.1_13         1.06%    passed     61.70%
  48  GCA.002404095.1.Bacteria.Planctomycetota_DHJA01000007.1_5       18.09%    passed     87.62%
  49  GCA.002451085.1.Bacteria.Proteobacteria_DKBE01000011.1_9         2.13%    passed     87.43%
  50  GCA.002722435.1.Bacteria.Proteobacteria_PBLX01000008.1_23        8.51%    passed     23.97%
  51  GCA.002686915.1.Bacteria.ARS69_NYYY01000002.1_9                  5.32%    passed     80.08%
  52  GCA.001567115.1.Bacteria.OLB16_LMZT01000019.1_6                  4.26%    passed     42.55%
  53  GCA.002311745.1.Bacteria.Planctomycetota_DBZL01000024.1_11      18.09%    passed     67.19%
  54  GCA.002007425.1.Bacteria.Proteobacteria_MUGK01000053.1_14        5.32%    passed     99.99%
  55  GCA.003230085.1.Bacteria.Proteobacteria_QIGV01000231.1_6         3.19%    passed     98.65%
  56  GCA.002688175.1.Bacteria.Proteobacteria_NZCC01000016.1_18        6.38%    passed     99.85%
  57  GCA.002440805.1.Bacteria.Chloroflexota_DJVD01000263.1_5          2.13%    passed     87.31%
  58  GCA.002728355.1.Bacteria.Proteobacteria_PBXG01000001.1_60        6.38%    passed     94.80%
  59  GCA.002683115.1.Bacteria.Proteobacteria_NYSP01000033.1_14       10.64%    passed     41.04%
  60  GCA.002863065.1.Bacteria.Myxococcota_PKDL01000442.1_5            3.19%    passed     97.10%
  61  GCA.002469885.1.Bacteria.Proteobacteria_DKOI01000020.1_4         2.13%    passed     91.43%
  62  GCA.001464965.1.Bacteria.Proteobacteria_LNEJ01000045.1_129       4.26%    passed     99.99%
  63  GCA.003133645.1.Bacteria.Acidobacteriota_PKYI01000187.1_4       14.89%    passed     10.11%
  64  GCA.002170535.1.Bacteria.Proteobacteria_NHDW01000001.1_33        5.32%    passed     69.96%
  65  GCF.000815225.1.Bacteria.Proteobacteria_NZ_CP010427.1_1426      17.02%    passed     33.76%
  66  GCA.002726535.1.Bacteria.Myxococcota_PBTG01000006.1_3            1.06%    passed     44.56%
  67  GCF.001051235.1.Bacteria.Proteobacteria_NZ_CBTJ020000042.1_18    4.26%    passed     99.16%
  68  GCA.002389045.1.Bacteria.Proteobacteria_DGNS01000006.1_106       4.26%    passed     99.23%
  69  GCF.900112605.1.Bacteria.Proteobacteria_NZ_FOMJ01000004.1_30     4.26%    passed     95.00%
  70  GCA.001767075.1.Bacteria.Acidobacteriota_MEKX01000139.1_33       2.13%    passed     94.41%
  71  GCA.003140235.1.Bacteria.Acidobacteriota_PLJN01000133.1_41       4.26%    passed     69.48%
  72  GCA.002292285.1.Bacteria.Proteobacteria_DBBP01000014.1_3         4.26%    passed     99.84%
  73  GCA.002420425.1.Bacteria.Proteobacteria_DIIC01000017.1_64        8.51%    passed     84.97%
  74  GCF.000021985.1.Bacteria.Proteobacteria_NC_011901.1_2940         4.26%    passed     92.57%
  75  GCA.002862435.1.Bacteria.Proteobacteria_PKDC01000032.1_1         2.13%    passed     99.85%
  76  GCA.002352565.1.Bacteria.Proteobacteria_DEIQ01000043.1_18       10.64%    passed     97.37%
  77  GCF.001306175.1.Bacteria.Chloroflexota_NZ_LGKN01000003.1_594     2.13%    passed     68.21%
  78  GCA.002085445.1.Bacteria.Proteobacteria_NBMI01000054.1_12        5.32%    passed     98.10%
  79  GCA.002704825.1.Bacteria.Planctomycetota_PAIY01000014.1_8        6.38%    passed     78.85%
  80  GCA.001664505.1.Bacteria.Acidobacteriota_CP011806.1_226         12.77%    passed      6.74%
  81  GCA.002747435.1.Bacteria.Proteobacteria_PDPH01000047.1_72        6.38%    passed     97.55%
  82  GCA.001801745.1.Bacteria.Proteobacteria_MGYM01000062.1_15       17.02%    passed     99.48%
  83  GCA.002343185.1.Bacteria.Bdellovibrionota.C_DDRT01000009.1_9     3.19%    passed     43.83%
  84  GCA.002420425.1.Bacteria.Proteobacteria_DIIC01000044.1_87        2.13%    passed     70.65%
  85  GCF.000024725.1.Bacteria.Proteobacteria_NC_013960.1_912          4.26%    passed     97.99%
  86  GCF.003097315.1.Bacteria.Proteobacteria_NZ_QDDL01000015.1_11     4.26%    passed     96.06%
  87  GCF.000427095.1.Bacteria.Armatimonadota_NC_021487.1_31          17.02%    passed     66.77%
  88  GCA.001803875.1.Bacteria.Nitrospirota_MHEO01000026.1_14         15.96%    passed     40.43%
  89  GCA.002500605.1.Bacteria.Nitrospinota_DLRR01000010.1_5           3.19%    passed     98.94%
  90  GCA.002404055.1.Bacteria.Chloroflexota_DHIZ01000326.1_7          3.19%    passed     97.77%
  91  GCA.002400775.1.Bacteria.Proteobacteria_NVRF01000018.1_20        5.32%    passed     94.39%
  92  GCA.003152325.1.Bacteria.Acidobacteriota_PLZX01000052.1_9        1.06%    passed     99.32%
  93  GCA.001750625.1.Bacteria.Proteobacteria_MEIE01000073.1_5         3.19%    passed     99.07%
  94  GCA.002721815.1.Bacteria.Myxococcota_PBLQ01000014.1_48           4.26%    passed     99.12%
  95  GCA.003224665.1.Bacteria.Acidobacteriota_QHZM01000198.1_12       1.06%    passed     88.94%
  96  GCA.002386945.1.Bacteria.Proteobacteria_DGKH01000041.1_20        4.26%    passed     93.64%
  97  GCF.002020875.1.Bacteria.Proteobacteria_WP_078483642.1           2.13%    passed     96.60%
  98  GCA.003223975.1.Bacteria.Acidobacteriota_QHXS01000029.1_9        1.06%    passed     46.70%
  99  GCF.003052605.1.Bacteria.Proteobacteria_NZ_QASO01000014.1_4      4.26%    passed     99.87%
 100  GCA.001798075.1.Bacteria.UBA10199_MGRG01000005.1_208            18.09%    passed     79.76%
 101  GCF.001641825.1.Bacteria.Proteobacteria_NZ_LRFH01000014.1_377    3.19%    passed     99.61%
 102  GCA.001447805.1.Bacteria.Proteobacteria_CP013099.1_19            4.26%    passed     88.91%
 103  GCA.002255365.1.Bacteria.Proteobacteria_NCBI01000010.1_61        2.13%    passed     94.57%
 104  GCA.003230795.1.Bacteria.Bdellovibrionota.C_QIGM01000435.1_4     1.06%    passed     85.78%
 105  GCF.001720165.1.Bacteria.Proteobacteria_NZ_MCRI01000010.1_47     6.38%    passed     94.27%
 106  GCA.002432655.1.Bacteria.Proteobacteria_DJFZ01000044.1_30        4.26%    passed     99.78%
 107  GCF.001614315.2.Bacteria.Proteobacteria_NZ_LVEG02000001.1_252    2.13%    passed     99.69%
 108  GCF.003612015.1.Bacteria.Proteobacteria_NZ_RARB01000003.1_221    4.26%    passed     98.89%
 109  GCA.002364485.1.Bacteria.Planctomycetota_DEYK01000030.1_8       10.64%    passed     15.84%
****  TOTAL                                                            5.89%  1 sequences failed composition chi2 test (p-value<5%; df=19)
Checking for duplicate sequences: done in 0.00123082 secs using 992.3% CPU


Create initial parsimony tree by phylogenetic likelihood library (PLL)... 0.029 seconds
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
Perform fast likelihood tree search using LG+I+G model...
Estimate model parameters (epsilon = 5.000)
Perform nearest neighbor interchange...
Optimizing NNI: done in 0.79293 secs using 990.8% CPU
Estimate model parameters (epsilon = 1.000)
1. Initial log-likelihood: -13742.122
Optimal log-likelihood: -13741.491
Proportion of invariable sites: 0.011
Gamma shape alpha: 1.111
Parameters optimization took 1 rounds (0.103 sec)
Time for fast ML tree search: 1.161 seconds

NOTE: ModelFinder requires 19 MB RAM!
ModelFinder will test up to 749 protein models (sample size: 94) ...
 No. Model         -LnL         df  AIC          AICc         BIC
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  1  LG            14364.249    215 29158.499    122038.499   29705.307
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  2  LG+I          14312.084    216 29056.168    122800.168   29605.520
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  3  LG+G4         13747.736    216 27927.472    121671.472   28476.824
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  4  LG+I+G4       13741.481    217 27916.962    122528.962   28468.857
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  5  LG+R2         13855.898    217 28145.797    122757.797   28697.692
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  6  LG+R3         13782.042    219 28002.084    124362.084   28559.066
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  7  LG+R4         13726.170    221 27894.341    126018.341   28456.409
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  8  LG+R5         13722.215    223 27890.429    127794.429   28457.584
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 14  LG+F          14333.201    234 29134.402    139114.402   29729.533
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 15  LG+F+I        14285.663    235 29041.326    139961.326   29639.000
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 16  LG+F+G4       13753.736    235 27977.471    138897.471   28575.145
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 17  LG+F+I+G4     13748.392    236 27968.783    139832.783   28569.001
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 18  LG+F+R2       13852.515    236 28177.030    140041.030   28777.247
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 19  LG+F+R3       13785.123    238 28046.247    141810.247   28651.551
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 20  LG+F+R4       13733.643    240 27947.285    143627.285   28557.676
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 21  LG+F+R5       13730.522    242 27945.043    145557.043   28560.520
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 27  WAG           14224.617    215 28879.234    121759.234   29426.042
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 28  WAG+I         14165.871    216 28763.742    122507.742   29313.094
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 29  WAG+G4        13774.348    216 27980.695    121724.695   28530.047
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 30  WAG+I+G4      13765.030    217 27964.060    122576.060   28515.955
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 31  WAG+R2        13862.928    217 28159.857    122771.857   28711.752
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 32  WAG+R3        13786.032    219 28010.063    124370.063   28567.045
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 33  WAG+R4        13753.674    221 27949.348    126073.348   28511.416
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 34  WAG+R5        13745.865    223 27937.730    127841.730   28504.885
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 35  WAG+R6        13741.574    225 27933.149    129633.149   28505.390
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 40  WAG+F         14236.499    234 28940.999    138920.999   29536.130
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 41  WAG+F+I       14186.841    235 28843.681    139763.681   29441.355
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 42  WAG+F+G4      13787.887    235 28045.774    138965.774   28643.449
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 43  WAG+F+I+G4    13780.954    236 28033.908    139897.908   28634.125
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 44  WAG+F+R2      13873.860    236 28219.720    140083.720   28819.937
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 45  WAG+F+R3      13809.993    238 28095.986    141859.986   28701.290
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 46  WAG+F+R4      13770.281    240 28020.561    143700.561   28630.952
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 47  WAG+F+R5      13766.943    242 28017.887    145629.887   28633.364
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 53  JTT           14512.583    215 29455.166    122335.166   30001.974
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 54  JTT+I         14455.851    216 29343.702    123087.702   29893.054
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 55  JTT+G4        13976.532    216 28385.064    122129.064   28934.416
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 56  JTT+I+G4      13969.400    217 28372.800    122984.800   28924.695
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 57  JTT+R2        14088.224    217 28610.448    123222.448   29162.343
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 58  JTT+R3        14018.806    219 28475.612    124835.612   29032.593
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 59  JTT+R4        13957.245    221 28356.489    126480.489   28918.558
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 60  JTT+R5        13952.572    223 28351.144    128255.144   28918.299
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 61  JTT+R6        13948.368    225 28346.735    130046.735   28918.977
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 66  JTT+F         14420.162    234 29308.324    139288.324   29903.455
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 67  JTT+F+I       14372.060    235 29214.121    140134.121   29811.795
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 68  JTT+F+G4      13909.021    235 28288.042    139208.042   28885.716
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 69  JTT+F+I+G4    13902.903    236 28277.806    140141.806   28878.024
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 70  JTT+F+R2      14008.768    236 28489.536    140353.536   29089.754
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 71  JTT+F+R3      13943.090    238 28362.180    142126.180   28967.485
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 72  JTT+F+R4      13892.270    240 28264.539    143944.539   28874.930
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 73  JTT+F+R5      13888.780    242 28261.559    145873.559   28877.037
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 79  Q.pfam        14358.411    215 29146.822    122026.822   29693.630
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 80  Q.pfam+I      14310.084    216 29052.168    122796.168   29601.520
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 81  Q.pfam+G4     13737.942    216 27907.884    121651.884   28457.236
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 82  Q.pfam+I+G4   13732.336    217 27898.672    122510.672   28450.567
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 83  Q.pfam+R2     13842.096    217 28118.191    122730.191   28670.086
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 84  Q.pfam+R3     13774.852    219 27987.703    124347.703   28544.685
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 85  Q.pfam+R4     13711.631    221 27865.261    125989.261   28427.329
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 86  Q.pfam+R5     13707.651    223 27861.301    127765.301   28428.456
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 92  Q.pfam+F      14342.172    234 29152.345    139132.345   29747.476
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 93  Q.pfam+F+I    14299.043    235 29068.085    139988.085   29665.759
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 94  Q.pfam+F+G4   13751.196    235 27972.391    138892.391   28570.065
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 95  Q.pfam+F+I+G4 13746.292    236 27964.585    139828.585   28564.802
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 96  Q.pfam+F+R2   13843.779    236 28159.557    140023.557   28759.775
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 97  Q.pfam+F+R3   13782.422    238 28040.843    141804.843   28646.148
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 98  Q.pfam+F+R4   13726.677    240 27933.354    143613.354   28543.745
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 99  Q.pfam+F+R5   13723.628    242 27931.255    145543.255   28546.732
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
105  Q.bird        15207.940    215 30845.880    123725.880   31392.688
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
106  Q.bird+I      15152.424    216 30736.848    124480.848   31286.200
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
107  Q.bird+G4     14386.013    216 29204.027    122948.027   29753.379
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
108  Q.bird+I+G4   14380.860    217 29195.720    123807.720   29747.615
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
109  Q.bird+R2     14554.669    217 29543.339    124155.339   30095.234
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
110  Q.bird+R3     14430.051    219 29298.103    125658.103   29855.084
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
111  Q.bird+R4     14369.437    221 29180.873    127304.873   29742.941
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
112  Q.bird+R5     14350.022    223 29146.045    129050.045   29713.200
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
113  Q.bird+R6     14339.850    225 29129.699    130829.699   29701.940
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
114  Q.bird+R7     14339.089    227 29132.178    132644.178   29709.506
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
118  Q.bird+F      15032.009    234 30532.017    140512.017   31127.148
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
119  Q.bird+F+I    14992.956    235 30455.913    141375.913   31053.587
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
120  Q.bird+F+G4   14274.077    235 29018.154    139938.154   29615.829
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
121  Q.bird+F+I+G4 14269.730    236 29011.460    140875.460   29611.678
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
122  Q.bird+F+R2   14412.584    236 29297.168    141161.168   29897.386
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
123  Q.bird+F+R3   14317.500    238 29111.000    142875.000   29716.304
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
124  Q.bird+F+R4   14258.792    240 28997.583    144677.583   29607.974
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
125  Q.bird+F+R5   14241.405    242 28966.810    146578.810   29582.287
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
126  Q.bird+F+R6   14232.325    244 28952.649    148512.649   29573.213
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
127  Q.bird+F+R7   14231.012    246 28954.025    150478.025   29579.675
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
131  Q.mammal      15006.082    215 30442.164    123322.164   30988.973
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
132  Q.mammal+I    14950.063    216 30332.125    124076.125   30881.477
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
133  Q.mammal+G4   14237.618    216 28907.235    122651.235   29456.587
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
134  Q.mammal+I+G4 14232.270    217 28898.539    123510.539   29450.434
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
135  Q.mammal+R2   14401.831    217 29237.662    123849.662   29789.557
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
136  Q.mammal+R3   14283.397    219 29004.794    125364.794   29561.776
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
137  Q.mammal+R4   14223.068    221 28888.135    127012.135   29450.203
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
138  Q.mammal+R5   14206.077    223 28858.154    128762.154   29425.309
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
139  Q.mammal+R6   14198.098    225 28846.196    130546.196   29418.437
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
140  Q.mammal+R7   14192.128    227 28838.257    132350.257   29415.585
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
141  Q.mammal+R8   14191.291    229 28840.581    134180.581   29422.996
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
144  Q.mammal+F    14846.785    234 30161.570    140141.570   30756.701
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
145  Q.mammal+F+I  14807.303    235 30084.605    141004.605   30682.279
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
146  Q.mammal+F+G4 14134.386    235 28738.771    139658.771   29336.446
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
147  Q.mammal+F+I+G4 14131.770    236 28735.539    140599.539   29335.757
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
148  Q.mammal+F+R2 14264.432    236 29000.864    140864.864   29601.081
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
149  Q.mammal+F+R3 14176.447    238 28828.894    142592.894   29434.199
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
150  Q.mammal+F+R4 14116.193    240 28712.386    144392.386   29322.777
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
151  Q.mammal+F+R5 14103.704    242 28691.408    146303.408   29306.885
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
152  Q.mammal+F+R6 14095.836    244 28679.672    148239.672   29300.236
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
153  Q.mammal+F+R7 14094.575    246 28681.150    150205.150   29306.800
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
157  Q.insect      14535.873    215 29501.745    122381.745   30048.554
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
158  Q.insect+I    14484.157    216 29400.313    123144.313   29949.665
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
159  Q.insect+G4   13856.442    216 28144.884    121888.884   28694.236
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
160  Q.insect+I+G4 13852.678    217 28139.355    122751.355   28691.250
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
161  Q.insect+R2   14001.676    217 28437.352    123049.352   28989.247
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
162  Q.insect+R3   13912.292    219 28262.583    124622.583   28819.565
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
163  Q.insect+R4   13840.029    221 28122.058    126246.058   28684.126
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
164  Q.insect+R5   13836.474    223 28118.948    128022.948   28686.103
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
170  Q.insect+F    14406.446    234 29280.892    139260.892   29876.023
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
171  Q.insect+F+I  14360.203    235 29190.407    140110.407   29788.081
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
172  Q.insect+F+G4 13788.414    235 28046.829    138966.829   28644.503
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
173  Q.insect+F+I+G4 13784.867    236 28041.735    139905.735   28641.952
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
174  Q.insect+F+R2 13917.253    236 28306.507    140170.507   28906.724
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
175  Q.insect+F+R3 13838.654    238 28153.307    141917.307   28758.611
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
176  Q.insect+F+R4 13772.942    240 28025.883    143705.883   28636.274
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
177  Q.insect+F+R5 13769.896    242 28023.791    145635.791   28639.268
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
183  Q.plant       14857.552    215 30145.104    123025.104   30691.912
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
184  Q.plant+I     14792.326    216 30016.652    123760.652   30566.003
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
185  Q.plant+G4    14081.305    216 28594.609    122338.609   29143.961
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
186  Q.plant+I+G4  14075.643    217 28585.287    123197.287   29137.182
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
187  Q.plant+R2    14236.128    217 28906.256    123518.256   29458.151
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
188  Q.plant+R3    14145.684    219 28729.367    125089.367   29286.349
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
189  Q.plant+R4    14062.303    221 28566.606    126690.606   29128.674
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
190  Q.plant+R5    14051.770    223 28549.540    128453.540   29116.695
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
191  Q.plant+R6    14046.503    225 28543.006    130243.006   29115.247
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
192  Q.plant+R7    14043.463    227 28540.927    132052.927   29118.255
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
196  Q.plant+F     14704.644    234 29877.288    139857.288   30472.419
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
197  Q.plant+F+I   14652.210    235 29774.420    140694.420   30372.095
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
198  Q.plant+F+G4  14006.687    235 28483.374    139403.374   29081.048
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
199  Q.plant+F+I+G4 14002.889    236 28477.777    140341.777   29077.995
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
200  Q.plant+F+R2  14133.971    236 28739.942    140603.942   29340.160
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
201  Q.plant+F+R3  14060.227    238 28596.453    142360.453   29201.757
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
202  Q.plant+F+R4  13987.864    240 28455.728    144135.728   29066.119
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
203  Q.plant+F+R5  13978.277    242 28440.554    146052.554   29056.032
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
204  Q.plant+F+R6  13973.830    244 28435.659    147995.659   29056.223
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
209  Q.yeast       14487.420    215 29404.841    122284.841   29951.649
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
210  Q.yeast+I     14436.445    216 29304.889    123048.889   29854.241
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
211  Q.yeast+G4    13831.831    216 28095.662    121839.662   28645.014
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
212  Q.yeast+I+G4  13827.584    217 28089.169    122701.169   28641.064
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
213  Q.yeast+R2    13962.307    217 28358.614    122970.614   28910.509
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
214  Q.yeast+R3    13887.763    219 28213.525    124573.525   28770.507
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
215  Q.yeast+R4    13809.921    221 28061.842    126185.842   28623.910
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
216  Q.yeast+R5    13808.135    223 28062.271    127966.271   28629.425
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
222  Q.yeast+F     14350.511    234 29169.021    139149.021   29764.152
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
223  Q.yeast+F+I   14304.366    235 29078.732    139998.732   29676.407
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
224  Q.yeast+F+G4  13754.727    235 27979.455    138899.455   28577.129
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
225  Q.yeast+F+I+G4 13750.786    236 27973.572    139837.572   28573.789
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
226  Q.yeast+F+R2  13866.397    236 28204.793    140068.793   28805.011
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
227  Q.yeast+F+R3  13802.914    238 28081.828    141845.828   28687.132
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
228  Q.yeast+F+R4  13734.078    240 27948.157    143628.157   28558.548
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
229  Q.yeast+F+R5  13731.771    242 27947.542    145559.542   28563.020
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
235  JTTDCMut      14498.933    215 29427.867    122307.867   29974.675
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
236  JTTDCMut+I    14441.537    216 29315.074    123059.074   29864.426
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
237  JTTDCMut+G4   13969.758    216 28371.516    122115.516   28920.867
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
238  JTTDCMut+I+G4 13962.098    217 28358.196    122970.196   28910.091
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
239  JTTDCMut+R2   14079.480    217 28592.960    123204.960   29144.855
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
240  JTTDCMut+R3   14009.044    219 28456.089    124816.089   29013.070
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
241  JTTDCMut+R4   13949.920    221 28341.840    126465.840   28903.908
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
242  JTTDCMut+R5   13945.016    223 28336.031    128240.031   28903.186
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
243  JTTDCMut+R6   13940.515    225 28331.029    130031.029   28903.271
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
248  JTTDCMut+F    14410.806    234 29289.613    139269.613   29884.744
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
249  JTTDCMut+F+I  14362.531    235 29195.062    140115.062   29792.736
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
250  JTTDCMut+F+G4 13904.758    235 28279.516    139199.516   28877.191
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
251  JTTDCMut+F+I+G4 13898.462    236 28268.924    140132.924   28869.142
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
252  JTTDCMut+F+R2 14002.358    236 28476.717    140340.717   29076.934
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
253  JTTDCMut+F+R3 13944.322    238 28364.645    142128.645   28969.949
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
254  JTTDCMut+F+R4 13887.376    240 28254.751    143934.751   28865.142
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
255  JTTDCMut+F+R5 13884.006    242 28252.012    145864.012   28867.489
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
261  DCMut         14466.983    215 29363.965    122243.965   29910.774
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
262  DCMut+I       14389.517    216 29211.033    122955.033   29760.385
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
263  DCMut+G4      13974.652    216 28381.305    122125.305   28930.656
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
264  DCMut+I+G4    13961.420    217 28356.839    122968.839   28908.734
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
265  DCMut+R2      14113.836    217 28661.673    123273.673   29213.568
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
266  DCMut+R3      14000.373    219 28438.747    124798.747   28995.728
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
267  DCMut+R4      13953.578    221 28349.155    126473.155   28911.223
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
268  DCMut+R5      13942.475    223 28330.950    128234.950   28898.105
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
269  DCMut+R6      13937.702    225 28325.404    130025.404   28897.645
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
270  DCMut+R7      13936.736    227 28327.472    131839.472   28904.799
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
274  DCMut+F       14387.410    234 29242.819    139222.819   29837.950
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
275  DCMut+F+I     14322.053    235 29114.106    140034.106   29711.781
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
276  DCMut+F+G4    13901.974    235 28273.948    139193.948   28871.622
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
277  DCMut+F+I+G4  13892.099    236 28256.198    140120.198   28856.415
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
278  DCMut+F+R2    14021.093    236 28514.187    140378.187   29114.404
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
279  DCMut+F+R3    13934.207    238 28344.413    142108.413   28949.717
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
280  DCMut+F+R4    13885.251    240 28250.502    143930.502   28860.892
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
281  DCMut+F+R5    13877.724    242 28239.449    145851.449   28854.926
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
282  DCMut+F+R6    13872.955    244 28233.911    147793.911   28854.475
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
283  DCMut+F+R7    13871.654    246 28235.307    149759.307   28860.958
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
287  VT            14278.668    215 28987.336    121867.336   29534.145
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
288  VT+I          14232.320    216 28896.641    122640.641   29445.992
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
289  VT+G4         13822.798    216 28077.596    121821.596   28626.948
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
290  VT+I+G4       13815.980    217 28065.961    122677.961   28617.856
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
291  VT+R2         13897.966    217 28229.932    122841.932   28781.827
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
292  VT+R3         13834.137    219 28106.274    124466.274   28663.256
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
293  VT+R4         13796.574    221 28035.148    126159.148   28597.216
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
294  VT+R5         13792.071    223 28030.143    127934.143   28597.297
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
300  VT+F          14268.479    234 29004.958    138984.958   29600.089
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
301  VT+F+I        14225.546    235 28921.092    139841.092   29518.766
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
302  VT+F+G4       13826.101    235 28122.201    139042.201   28719.876
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
303  VT+F+I+G4     13819.848    236 28111.696    139975.696   28711.914
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
304  VT+F+R2       13899.382    236 28270.763    140134.763   28870.981
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
305  VT+F+R3       13850.393    238 28176.785    141940.785   28782.090
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
306  VT+F+R4       13803.521    240 28087.042    143767.042   28697.433
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
307  VT+F+R5       13802.181    242 28088.362    145700.362   28703.840
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
313  PMB           14430.488    215 29290.975    122170.975   29837.784
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
314  PMB+I         14387.175    216 29206.349    122950.349   29755.701
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
315  PMB+G4        13951.109    216 28334.218    122078.218   28883.570
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
316  PMB+I+G4      13944.322    217 28322.645    122934.645   28874.540
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
317  PMB+R2        14012.374    217 28458.748    123070.748   29010.643
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
318  PMB+R3        13972.112    219 28382.224    124742.224   28939.205
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
319  PMB+R4        13921.336    221 28284.671    126408.671   28846.739
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
320  PMB+R5        13916.880    223 28279.760    128183.760   28846.915
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
326  PMB+F         14392.476    234 29252.952    139232.952   29848.083
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
327  PMB+F+I       14349.466    235 29168.933    140088.933   29766.607
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
328  PMB+F+G4      13931.295    235 28332.590    139252.590   28930.264
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
329  PMB+F+I+G4    13925.017    236 28322.034    140186.034   28922.251
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
330  PMB+F+R2      13995.312    236 28462.625    140326.625   29062.842
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
331  PMB+F+R3      13950.200    238 28376.400    142140.400   28981.704
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
332  PMB+F+R4      13905.017    240 28290.035    143970.035   28900.426
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
333  PMB+F+R5      13901.375    242 28286.749    145898.749   28902.227
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
339  Blosum62      14369.954    215 29169.908    122049.908   29716.717
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
340  Blosum62+I    14334.067    216 29100.135    122844.135   29649.487
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
341  Blosum62+G4   13900.281    216 28232.563    121976.563   28781.914
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
342  Blosum62+I+G4 13895.644    217 28225.289    122837.289   28777.184
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
343  Blosum62+R2   13966.670    217 28367.339    122979.339   28919.234
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
344  Blosum62+R3   13923.733    219 28285.466    124645.466   28842.448
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
345  Blosum62+R4   13873.963    221 28189.925    126313.925   28751.993
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
346  Blosum62+R5   13869.657    223 28185.315    128089.315   28752.469
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
352  Blosum62+F    14358.081    234 29184.161    139164.161   29779.292
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
353  Blosum62+F+I  14322.631    235 29115.262    140035.262   29712.937
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
354  Blosum62+F+G4 13906.366    235 28282.732    139202.732   28880.406
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
355  Blosum62+F+I+G4 13901.987    236 28275.974    140139.974   28876.191
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
356  Blosum62+F+R2 13976.872    236 28425.743    140289.743   29025.961
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
357  Blosum62+F+R3 13923.562    238 28323.124    142087.124   28928.428
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
358  Blosum62+F+R4 13885.452    240 28250.903    143930.903   28861.294
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
359  Blosum62+F+R5 13880.886    242 28245.771    145857.771   28861.248
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
360  Blosum62+F+R6 13877.209    244 28242.418    147802.418   28862.982
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
365  Dayhoff       14467.993    215 29365.985    122245.985   29912.794
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
366  Dayhoff+I     14390.267    216 29212.535    122956.535   29761.887
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
367  Dayhoff+G4    13974.534    216 28381.067    122125.067   28930.419
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
368  Dayhoff+I+G4  13961.278    217 28356.557    122968.557   28908.451
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
369  Dayhoff+R2    14114.395    217 28662.791    123274.791   29214.686
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
370  Dayhoff+R3    14000.287    219 28438.574    124798.574   28995.556
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
371  Dayhoff+R4    13953.450    221 28348.900    126472.900   28910.968
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
372  Dayhoff+R5    13942.349    223 28330.697    128234.697   28897.852
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
373  Dayhoff+R6    13937.597    225 28325.193    130025.193   28897.435
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
374  Dayhoff+R7    13936.602    227 28327.203    131839.203   28904.531
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
378  Dayhoff+F     14388.205    234 29244.409    139224.409   29839.540
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
379  Dayhoff+F+I   14322.714    235 29115.428    140035.428   29713.102
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
380  Dayhoff+F+G4  13902.004    235 28274.009    139194.009   28871.683
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
381  Dayhoff+F+I+G4 13892.110    236 28256.220    140120.220   28856.437
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
382  Dayhoff+F+R2  14021.484    236 28514.968    140378.968   29115.185
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
383  Dayhoff+F+R3  13934.134    238 28344.268    142108.268   28949.572
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
384  Dayhoff+F+R4  13885.272    240 28250.543    143930.543   28860.934
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
385  Dayhoff+F+R5  13877.646    242 28239.292    145851.292   28854.769
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
386  Dayhoff+F+R6  13872.868    244 28233.735    147793.735   28854.299
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
387  Dayhoff+F+R7  13871.549    246 28235.099    149759.099   28860.749
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
391  mtREV         15727.792    215 31885.584    124765.584   32432.392
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
392  mtREV+I       15658.516    216 31749.033    125493.033   32298.384
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
393  mtREV+G4      14732.833    216 29897.667    123641.667   30447.018
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
394  mtREV+I+G4    14730.351    217 29894.701    124506.701   30446.596
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
395  mtREV+R2      14905.474    217 30244.948    124856.948   30796.843
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
396  mtREV+R3      14752.881    219 29943.762    126303.762   30500.744
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
397  mtREV+R4      14715.781    221 29873.562    127997.562   30435.630
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
398  mtREV+R5      14678.749    223 29803.499    129707.499   30370.654
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
399  mtREV+R6      14677.037    225 29804.074    131504.074   30376.315
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
404  mtREV+F       14914.402    234 30296.803    140276.803   30891.934
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
405  mtREV+F+I     14832.223    235 30134.447    141054.447   30732.121
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
406  mtREV+F+G4    14227.799    235 28925.598    139845.598   29523.272
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
407  mtREV+F+I+G4  14215.542    236 28903.083    140767.083   29503.301
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
408  mtREV+F+R2    14358.349    236 29188.698    141052.698   29788.916
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
409  mtREV+F+R3    14261.799    238 28999.597    142763.597   29604.901
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
410  mtREV+F+R4    14210.649    240 28901.298    144581.298   29511.689
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
411  mtREV+F+R5    14190.110    242 28864.220    146476.220   29479.697
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
412  mtREV+F+R6    14185.296    244 28858.592    148418.592   29479.156
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
413  mtREV+F+R7    14176.743    246 28845.487    150369.487   29471.137
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
414  mtREV+F+R8    14175.329    248 28846.658    152350.658   29477.395
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
417  mtART         16477.657    215 33385.314    126265.314   33932.123
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
418  mtART+I       16411.949    216 33255.898    126999.898   33805.250
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
419  mtART+G4      14966.169    216 30364.338    124108.338   30913.689
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
420  mtART+I+G4    14959.811    217 30353.622    124965.622   30905.516
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
421  mtART+R2      15193.781    217 30821.562    125433.562   31373.457
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
422  mtART+R3      15002.127    219 30442.253    126802.253   30999.235
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
423  mtART+R4      14934.564    221 30311.128    128435.128   30873.196
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
424  mtART+R5      14897.651    223 30241.302    130145.302   30808.457
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
425  mtART+R6      14891.163    225 30232.325    131932.325   30804.566
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
426  mtART+R7      14889.451    227 30232.903    133744.903   30810.230
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
430  mtART+F       15382.136    234 31232.272    141212.272   31827.403
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
431  mtART+F+I     15297.678    235 31065.356    141985.356   31663.031
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
432  mtART+F+G4    14316.346    235 29102.692    140022.692   29700.366
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
433  mtART+F+I+G4  14288.382    236 29048.765    140912.765   29648.982
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
434  mtART+F+R2    14505.469    236 29482.938    141346.938   30083.155
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
435  mtART+F+R3    14354.729    238 29185.458    142949.458   29790.762
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
436  mtART+F+R4    14296.509    240 29073.019    144753.019   29683.410
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
437  mtART+F+R5    14258.314    242 29000.628    146612.628   29616.105
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
438  mtART+F+R6    14252.713    244 28993.426    148553.426   29613.990
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
439  mtART+F+R7    14246.586    246 28985.172    150509.172   29610.822
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
440  mtART+F+R8    14246.283    248 28988.565    152492.565   29619.302
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
443  mtZOA         15826.507    215 32083.015    124963.015   32629.823
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
444  mtZOA+I       15769.562    216 31971.123    125715.123   32520.475
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
445  mtZOA+G4      14583.635    216 29599.271    123343.271   30148.623
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
446  mtZOA+I+G4    14570.060    217 29574.120    124186.120   30126.015
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
447  mtZOA+R2      14768.502    217 29971.003    124583.003   30522.898
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
448  mtZOA+R3      14608.234    219 29654.468    126014.468   30211.450
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
449  mtZOA+R4      14569.577    221 29581.154    127705.154   30143.222
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
450  mtZOA+R5      14521.003    223 29488.006    129392.006   30055.161
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
451  mtZOA+R6      14516.274    225 29482.549    131182.549   30054.790
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
452  mtZOA+R7      14515.731    227 29485.462    132997.462   30062.790
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
456  mtZOA+F       14970.834    234 30409.668    140389.668   31004.799
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
457  mtZOA+F+I     14897.984    235 30265.967    141185.967   30863.642
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
458  mtZOA+F+G4    14133.699    235 28737.398    139657.398   29335.072
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
459  mtZOA+F+I+G4  14127.580    236 28727.161    140591.161   29327.378
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
460  mtZOA+F+R2    14305.217    236 29082.434    140946.434   29682.652
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
461  mtZOA+F+R3    14186.011    238 28848.021    142612.021   29453.325
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
462  mtZOA+F+R4    14120.448    240 28720.897    144400.897   29331.287
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
463  mtZOA+F+R5    14098.603    242 28681.207    146293.207   29296.684
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
464  mtZOA+F+R6    14093.826    244 28675.653    148235.653   29296.217
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
465  mtZOA+F+R7    14089.901    246 28671.802    150195.802   29297.453
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
469  mtMet         15881.687    215 32193.373    125073.373   32740.181
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
470  mtMet+I       15830.979    216 32093.957    125837.957   32643.309
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
471  mtMet+G4      14872.531    216 30177.062    123921.062   30726.414
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
472  mtMet+I+G4    14867.769    217 30169.539    124781.539   30721.434
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
473  mtMet+R2      15027.663    217 30489.327    125101.327   31041.222
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
474  mtMet+R3      14885.351    219 30208.701    126568.701   30765.683
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
475  mtMet+R4      14856.084    221 30154.167    128278.167   30716.235
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
476  mtMet+R5      14817.095    223 30080.189    129984.189   30647.344
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
477  mtMet+R6      14811.839    225 30073.678    131773.678   30645.920
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
478  mtMet+R7      14810.272    227 30074.544    133586.544   30651.872
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
482  mtMet+F       14907.934    234 30283.868    140263.868   30878.999
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
483  mtMet+F+I     14847.244    235 30164.488    141084.488   30762.163
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
484  mtMet+F+G4    14194.199    235 28858.397    139778.397   29456.072
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
485  mtMet+F+I+G4  14184.042    236 28840.084    140704.084   29440.302
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
486  mtMet+F+R2    14346.195    236 29164.390    141028.390   29764.607
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
487  mtMet+F+R3    14230.483    238 28936.967    142700.967   29542.271
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
488  mtMet+F+R4    14181.231    240 28842.461    144522.461   29452.852
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
489  mtMet+F+R5    14157.043    242 28798.086    146410.086   29413.564
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
490  mtMet+F+R6    14153.240    244 28794.479    148354.479   29415.043
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
495  mtVer         16028.345    215 32486.690    125366.690   33033.498
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
496  mtVer+I       15972.509    216 32377.018    126121.018   32926.370
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
497  mtVer+G4      14911.863    216 30255.726    123999.726   30805.078
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
498  mtVer+I+G4    14894.847    217 30223.694    124835.694   30775.589
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
499  mtVer+R2      15122.110    217 30678.219    125290.219   31230.114
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
500  mtVer+R3      14950.837    219 30339.673    126699.673   30896.655
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
501  mtVer+R4      14887.252    221 30216.504    128340.504   30778.572
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
502  mtVer+R5      14860.811    223 30167.622    130071.622   30734.777
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
503  mtVer+R6      14856.723    225 30163.445    131863.445   30735.687
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
508  mtVer+F       15216.043    234 30900.086    140880.086   31495.217
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
509  mtVer+F+I     15148.239    235 30766.478    141686.478   31364.152
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
510  mtVer+F+G4    14454.383    235 29378.766    140298.766   29976.441
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
511  mtVer+F+I+G4  14443.540    236 29359.080    141223.080   29959.298
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
512  mtVer+F+R2    14620.110    236 29712.220    141576.220   30312.438
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
513  mtVer+F+R3    14497.617    238 29471.234    143235.234   30076.538
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
514  mtVer+F+R4    14441.511    240 29363.021    145043.021   29973.412
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
515  mtVer+F+R5    14413.740    242 29311.479    146923.479   29926.957
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
516  mtVer+F+R6    14404.458    244 29296.917    148856.917   29917.481
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
517  mtVer+F+R7    14404.052    246 29300.105    150824.105   29925.755
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
521  mtInv         15874.428    215 32178.856    125058.856   32725.664
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
522  mtInv+I       15826.484    216 32084.968    125828.968   32634.320
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
523  mtInv+G4      14968.322    216 30368.645    124112.645   30917.997
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
524  mtInv+I+G4    14965.980    217 30365.961    124977.961   30917.856
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
525  mtInv+R2      15093.886    217 30621.772    125233.772   31173.667
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
526  mtInv+R3      14980.844    219 30399.688    126759.688   30956.669
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
527  mtInv+R4      14947.802    221 30337.603    128461.603   30899.672
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
528  mtInv+R5      14915.527    223 30277.054    130181.054   30844.209
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
529  mtInv+R6      14907.610    225 30265.220    131965.220   30837.461
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
530  mtInv+R7      14905.812    227 30265.623    133777.623   30842.951
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
534  mtInv+F       14726.296    234 29920.591    139900.591   30515.722
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
535  mtInv+F+I     14665.760    235 29801.521    140721.521   30399.195
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
536  mtInv+F+G4    14075.272    235 28620.544    139540.544   29218.218
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
537  mtInv+F+I+G4  14068.761    236 28609.522    140473.522   29209.740
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
538  mtInv+F+R2    14213.065    236 28898.130    140762.130   29498.348
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
539  mtInv+F+R3    14120.312    238 28716.625    142480.625   29321.929
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
540  mtInv+F+R4    14058.611    240 28597.223    144277.223   29207.614
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
541  mtInv+F+R5    14043.633    242 28571.265    146183.265   29186.742
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
542  mtInv+F+R6    14040.054    244 28568.107    148128.107   29188.671
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
547  mtMAM         16679.675    215 33789.350    126669.350   34336.158
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
548  mtMAM+I       16609.661    216 33651.323    127395.323   34200.675
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
549  mtMAM+G4      15130.888    216 30693.776    124437.776   31243.127
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
550  mtMAM+I+G4    15122.070    217 30678.140    125290.140   31230.035
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
551  mtMAM+R2      15437.614    217 31309.228    125921.228   31861.123
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
552  mtMAM+R3      15189.560    219 30817.119    127177.119   31374.101
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
553  mtMAM+R4      15116.320    221 30674.640    128798.640   31236.708
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
554  mtMAM+R5      15088.583    223 30623.166    130527.166   31190.321
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
555  mtMAM+R6      15065.425    225 30580.850    132280.850   31153.091
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
556  mtMAM+R7      15053.135    227 30560.270    134072.270   31137.598
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
557  mtMAM+R8      15052.352    229 30562.703    135902.703   31145.118
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
560  mtMAM+F       15622.774    234 31713.548    141693.548   32308.679
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
561  mtMAM+F+I     15547.101    235 31564.202    142484.202   32161.877
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
562  mtMAM+F+G4    14588.512    235 29647.024    140567.024   30244.698
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
563  mtMAM+F+I+G4  14583.810    236 29639.619    141503.619   30239.837
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
564  mtMAM+F+R2    14811.930    236 30095.860    141959.860   30696.078
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
565  mtMAM+F+R3    14626.103    238 29728.205    143492.205   30333.509
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
566  mtMAM+F+R4    14579.722    240 29639.444    145319.444   30249.835
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
567  mtMAM+F+R5    14532.500    242 29549.000    147161.000   30164.477
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
568  mtMAM+F+R6    14522.677    244 29533.354    149093.354   30153.918
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
569  mtMAM+F+R7    14517.184    246 29526.368    151050.368   30152.018
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
570  mtMAM+F+R8    14516.382    248 29528.763    153032.763   30159.500
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
573  FLAVI         15733.659    215 31897.318    124777.318   32444.126
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
574  FLAVI+I       15663.805    216 31759.610    125503.610   32308.962
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
575  FLAVI+G4      14849.979    216 30131.959    123875.959   30681.310
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
576  FLAVI+I+G4    14839.274    217 30112.549    124724.549   30664.444
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
577  FLAVI+R2      15049.739    217 30533.479    125145.479   31085.374
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
578  FLAVI+R3      14909.724    219 30257.448    126617.448   30814.430
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
579  FLAVI+R4      14842.750    221 30127.499    128251.499   30689.568
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
580  FLAVI+R5      14824.538    223 30095.076    129999.076   30662.231
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
581  FLAVI+R6      14811.071    225 30072.142    131772.142   30644.384
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
582  FLAVI+R7      14805.724    227 30065.448    133577.448   30642.776
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
583  FLAVI+R8      14804.748    229 30067.496    135407.496   30649.910
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
586  FLAVI+F       15459.153    234 31386.305    141366.305   31981.436
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
587  FLAVI+F+I     15399.773    235 31269.546    142189.546   31867.220
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
588  FLAVI+F+G4    14654.728    235 29779.457    140699.457   30377.131
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
589  FLAVI+F+I+G4  14642.875    236 29757.749    141621.749   30357.967
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
590  FLAVI+F+R2    14831.101    236 30134.203    141998.203   30734.420
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
591  FLAVI+F+R3    14701.598    238 29879.196    143643.196   30484.500
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
592  FLAVI+F+R4    14642.271    240 29764.543    145444.543   30374.933
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
593  FLAVI+F+R5    14624.887    242 29733.773    147345.773   30349.251
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
594  FLAVI+F+R6    14618.546    244 29725.091    149285.091   30345.655
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
595  FLAVI+F+R7    14616.564    246 29725.127    151249.127   30350.778
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
599  HIVb          15124.987    215 30679.975    123559.975   31226.783
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
600  HIVb+I        15055.203    216 30542.406    124286.406   31091.758
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
601  HIVb+G4       14428.129    216 29288.259    123032.259   29837.610
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
602  HIVb+I+G4     14416.065    217 29266.131    123878.131   29818.026
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
603  HIVb+R2       14567.075    217 29568.151    124180.151   30120.046
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
604  HIVb+R3       14478.751    219 29395.502    125755.502   29952.484
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
605  HIVb+R4       14414.675    221 29271.351    127395.351   29833.419
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
606  HIVb+R5       14391.690    223 29229.381    129133.381   29796.536
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
607  HIVb+R6       14386.248    225 29222.496    130922.496   29794.737
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
608  HIVb+R7       14384.040    227 29222.079    132734.079   29799.407
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
612  HIVb+F        14988.068    234 30444.135    140424.135   31039.266
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
613  HIVb+F+I      14923.944    235 30317.888    141237.888   30915.562
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
614  HIVb+F+G4     14293.117    235 29056.234    139976.234   29653.908
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
615  HIVb+F+I+G4   14283.719    236 29039.439    140903.439   29639.657
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
616  HIVb+F+R2     14426.632    236 29325.264    141189.264   29925.481
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
617  HIVb+F+R3     14349.201    238 29174.403    142938.403   29779.707
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
618  HIVb+F+R4     14280.364    240 29040.729    144720.729   29651.120
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
619  HIVb+F+R5     14260.997    242 29005.993    146617.993   29621.471
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
620  HIVb+F+R6     14256.709    244 29001.419    148561.419   29621.983
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
625  HIVw          15813.423    215 32056.846    124936.846   32603.654
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
626  HIVw+I        15768.001    216 31968.001    125712.001   32517.353
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
627  HIVw+G4       15220.327    216 30872.654    124616.654   31422.006
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
628  HIVw+I+G4     15214.441    217 30862.882    125474.882   31414.777
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
629  HIVw+R2       15352.361    217 31138.723    125750.723   31690.618
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
630  HIVw+R3       15262.527    219 30963.055    127323.055   31520.036
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
631  HIVw+R4       15207.449    221 30856.898    128980.898   31418.966
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
632  HIVw+R5       15188.998    223 30823.996    130727.996   31391.150
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
633  HIVw+R6       15182.055    225 30814.110    132514.110   31386.351
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
634  HIVw+R7       15177.324    227 30808.649    134320.649   31385.977
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
635  HIVw+R8       15176.424    229 30810.848    136150.848   31393.263
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
638  HIVw+F        15494.285    234 31456.571    141436.571   32051.702
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
639  HIVw+F+I      15447.465    235 31364.929    142284.929   31962.604
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
640  HIVw+F+G4     14861.781    235 30193.561    141113.561   30791.236
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
641  HIVw+F+I+G4   14858.283    236 30188.567    142052.567   30788.784
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
642  HIVw+F+R2     14995.077    236 30462.154    142326.154   31062.371
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
643  HIVw+F+R3     14900.540    238 30277.081    144041.081   30882.385
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
644  HIVw+F+R4     14846.792    240 30173.584    145853.584   30783.975
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
645  HIVw+F+R5     14829.080    242 30142.161    147754.161   30757.638
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
646  HIVw+F+R6     14826.856    244 30141.712    149701.712   30762.276
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
651  FLU           14930.012    215 30290.024    123170.024   30836.832
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
652  FLU+I         14877.480    216 30186.960    123930.960   30736.312
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
653  FLU+G4        14344.174    216 29120.348    122864.348   29669.699
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
654  FLU+I+G4      14334.409    217 29102.819    123714.819   29654.714
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
655  FLU+R2        14450.888    217 29335.776    123947.776   29887.671
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
656  FLU+R3        14358.631    219 29155.262    125515.262   29712.243
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
657  FLU+R4        14326.776    221 29095.551    127219.551   29657.620
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
658  FLU+R5        14314.408    223 29074.816    128978.816   29641.971
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
659  FLU+R6        14302.244    225 29054.488    130754.488   29626.729
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
660  FLU+R7        14300.274    227 29054.548    132566.548   29631.876
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
664  FLU+F         14699.170    234 29866.340    139846.340   30461.471
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
665  FLU+F+I       14658.905    235 29787.810    140707.810   30385.484
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
666  FLU+F+G4      14076.262    235 28622.525    139542.525   29220.199
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
667  FLU+F+I+G4    14072.491    236 28616.982    140480.982   29217.199
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
668  FLU+F+R2      14180.422    236 28832.843    140696.843   29433.061
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
669  FLU+F+R3      14094.380    238 28664.759    142428.759   29270.063
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
670  FLU+F+R4      14062.372    240 28604.743    144284.743   29215.134
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
671  FLU+F+R5      14055.302    242 28594.605    146206.605   29210.082
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
672  FLU+F+R6      14044.603    244 28577.206    148137.206   29197.770
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
673  FLU+F+R7      14043.232    246 28578.465    150102.465   29204.115
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
677  rtREV         14454.103    215 29338.207    122218.207   29885.015
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
678  rtREV+I       14408.936    216 29249.872    122993.872   29799.224
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
679  rtREV+G4      13844.113    216 28120.227    121864.227   28669.579
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
680  rtREV+I+G4    13839.525    217 28113.051    122725.051   28664.946
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
681  rtREV+R2      13952.159    217 28338.318    122950.318   28890.213
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
682  rtREV+R3      13878.299    219 28194.599    124554.599   28751.581
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
683  rtREV+R4      13820.166    221 28082.332    126206.332   28644.400
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
684  rtREV+R5      13816.501    223 28079.002    127983.002   28646.157
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
690  rtREV+F       14416.531    234 29301.062    139281.062   29896.193
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
691  rtREV+F+I     14374.247    235 29218.494    140138.494   29816.169
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
692  rtREV+F+G4    13828.973    235 28127.945    139047.945   28725.620
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
693  rtREV+F+I+G4  13824.794    236 28121.589    139985.589   28721.806
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
694  rtREV+F+R2    13925.908    236 28323.815    140187.815   28924.033
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
695  rtREV+F+R3    13860.926    238 28197.852    141961.852   28803.156
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
696  rtREV+F+R4    13805.622    240 28091.244    143771.244   28701.634
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
697  rtREV+F+R5    13801.816    242 28087.632    145699.632   28703.109
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
703  cpREV         14492.190    215 29414.380    122294.380   29961.189
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
704  cpREV+I       14429.111    216 29290.221    123034.221   29839.573
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
705  cpREV+G4      14015.101    216 28462.202    122206.202   29011.554
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
706  cpREV+I+G4    14007.066    217 28448.132    123060.132   29000.027
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
707  cpREV+R2      14116.346    217 28666.693    123278.693   29218.588
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
708  cpREV+R3      14040.504    219 28519.009    124879.009   29075.990
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
709  cpREV+R4      13995.232    221 28432.464    126556.464   28994.532
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
710  cpREV+R5      13981.488    223 28408.976    128312.976   28976.131
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
711  cpREV+R6      13980.179    225 28410.357    130110.357   28982.599
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
716  cpREV+F       14467.075    234 29402.151    139382.151   29997.282
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
717  cpREV+F+I     14399.992    235 29269.983    140189.983   29867.657
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
718  cpREV+F+G4    13995.695    235 28461.390    139381.390   29059.064
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
719  cpREV+F+I+G4  13988.030    236 28448.061    140312.061   29048.279
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
720  cpREV+F+R2    14115.601    236 28703.202    140567.202   29303.420
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
721  cpREV+F+R3    14017.850    238 28511.699    142275.699   29117.003
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
722  cpREV+F+R4    13979.751    240 28439.502    144119.502   29049.893
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
723  cpREV+F+R5    13966.568    242 28417.136    146029.136   29032.613
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
724  cpREV+F+R6    13965.728    244 28419.455    147979.455   29040.019
Model C10 is alias for POISSON+G+FMIX{C10pi1:1:0.1191344178,C10pi2:1:0.0874372456,C10pi3:1:0.1037105070,C10pi4:1:0.0922584809,C10pi5:1:0.1070492801,C10pi6:1:0.1329945166,C10pi7:1:0.0538028458,C10pi8:1:0.0691986212,C10pi9:1:0.1319937434,C10pi10:1:0.1024203429}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
729  C10           13717.311    216 27866.622    121610.622   28415.973
Model C20 is alias for POISSON+G+FMIX{C20pi1:1:0.0559910600,C20pi2:1:0.0514824870,C20pi3:1:0.0812922124,C20pi4:1:0.0721976867,C20pi5:1:0.0556718858,C20pi6:1:0.0331003080,C20pi7:1:0.0589501763,C20pi8:1:0.0263756889,C20pi9:1:0.0307584220,C20pi10:1:0.0376701125,C20pi11:1:0.0303058290,C20pi12:1:0.0808775576,C20pi13:1:0.0263349134,C20pi14:1:0.0579101455,C20pi15:1:0.0371248064,C20pi16:1:0.0586867766,C20pi17:1:0.0561479138,C20pi18:1:0.0349810886,C20pi19:1:0.0544937394,C20pi20:1:0.0596471901}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
730  C20           13586.996    216 27605.992    121349.992   28155.344
Model C30 is alias for POISSON+G+FMIX{C30pi1:1:0.0095783264,C30pi2:1:0.0248476365,C30pi3:1:0.0636309366,C30pi4:1:0.0537939225,C30pi5:1:0.0295885587,C30pi6:1:0.0117587936,C30pi7:1:0.0132013428,C30pi8:1:0.0236868805,C30pi9:1:0.0261687659,C30pi10:1:0.0239821974,C30pi11:1:0.0257100906,C30pi12:1:0.0465072425,C30pi13:1:0.0546794546,C30pi14:1:0.0536085131,C30pi15:1:0.0270622670,C30pi16:1:0.0403913593,C30pi17:1:0.0474212700,C30pi18:1:0.0458816478,C30pi19:1:0.0214036510,C30pi20:1:0.0290385981,C30pi21:1:0.0123391793,C30pi22:1:0.0569350229,C30pi23:1:0.0419687568,C30pi24:1:0.0339027062,C30pi25:1:0.0388777376,C30pi26:1:0.0196343766,C30pi27:1:0.0233086174,C30pi28:1:0.0622722654,C30pi29:1:0.0184803385,C30pi30:1:0.0203395454}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
731  C30           13521.269    216 27474.538    121218.538   28023.890
Model C40 is alias for POISSON+G+FMIX{C40pi1:1:0.0223853788,C40pi2:1:0.0338891820,C40pi3:1:0.0577169375,C40pi4:1:0.0252416233,C40pi5:1:0.0108607921,C40pi6:1:0.0462373793,C40pi7:1:0.0102293175,C40pi8:1:0.0147523625,C40pi9:1:0.0143161352,C40pi10:1:0.0182302541,C40pi11:1:0.0204025079,C40pi12:1:0.0425505156,C40pi13:1:0.0248627269,C40pi14:1:0.0105892988,C40pi15:1:0.0188238725,C40pi16:1:0.0086663445,C40pi17:1:0.0148496147,C40pi18:1:0.0343037402,C40pi19:1:0.0225335203,C40pi20:1:0.0174068578,C40pi21:1:0.0112207827,C40pi22:1:0.0443532245,C40pi23:1:0.0392573370,C40pi24:1:0.0196756555,C40pi25:1:0.0287690328,C40pi26:1:0.0114441177,C40pi27:1:0.0112338740,C40pi28:1:0.0582694099,C40pi29:1:0.0444272279,C40pi30:1:0.0112010942,C40pi31:1:0.0145176111,C40pi32:1:0.0114629026,C40pi33:1:0.0239628061,C40pi34:1:0.0266266492,C40pi35:1:0.0481201159,C40pi36:1:0.0371147423,C40pi37:1:0.0160476688,C40pi38:1:0.0237249267,C40pi39:1:0.0235226203,C40pi40:1:0.0261998398}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
732  C40           13460.617    216 27353.233    121097.233   27902.585
Model C50 is alias for POISSON+G+FMIX{C50pi1:1:0.0164297003,C50pi2:1:0.0273175755,C50pi3:1:0.0460247610,C50pi4:1:0.0084864734,C50pi5:1:0.0125389252,C50pi6:1:0.0343549036,C50pi7:1:0.0130241102,C50pi8:1:0.0094755681,C50pi9:1:0.0190040551,C50pi10:1:0.0151902354,C50pi11:1:0.0320534760,C50pi12:1:0.0210059850,C50pi13:1:0.0237408547,C50pi14:1:0.0239841203,C50pi15:1:0.0213748021,C50pi16:1:0.0210717705,C50pi17:1:0.0050241805,C50pi18:1:0.0166262276,C50pi19:1:0.0143945956,C50pi20:1:0.0104391130,C50pi21:1:0.0107628277,C50pi22:1:0.0148818171,C50pi23:1:0.0321480239,C50pi24:1:0.0145477978,C50pi25:1:0.0332355807,C50pi26:1:0.0143190281,C50pi27:1:0.0234478734,C50pi28:1:0.0183044983,C50pi29:1:0.0403269452,C50pi30:1:0.0135629530,C50pi31:1:0.0091880799,C50pi32:1:0.0158270022,C50pi33:1:0.0121019379,C50pi34:1:0.0353560982,C50pi35:1:0.0404495617,C50pi36:1:0.0104569232,C50pi37:1:0.0146187792,C50pi38:1:0.0093984095,C50pi39:1:0.0146773809,C50pi40:1:0.0201635562,C50pi41:1:0.0255640273,C50pi42:1:0.0039486842,C50pi43:1:0.0393652608,C50pi44:1:0.0056415419,C50pi45:1:0.0382833580,C50pi46:1:0.0039735086,C50pi47:1:0.0140269355,C50pi48:1:0.0476703673,C50pi49:1:0.0204062788,C50pi50:1:0.0117835304}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
733  C50           13456.235    216 27344.469    121088.469   27893.821
Model C60 is alias for POISSON+G+FMIX{C60pi1:1:0.0169698865,C60pi2:1:0.0211683374,C60pi3:1:0.0276589079,C60pi4:1:0.0065675964,C60pi5:1:0.0141221416,C60pi6:1:0.0068774834,C60pi7:1:0.0146909701,C60pi8:1:0.0067225777,C60pi9:1:0.0018396660,C60pi10:1:0.0102547197,C60pi11:1:0.0230896163,C60pi12:1:0.0057941033,C60pi13:1:0.0125394534,C60pi14:1:0.0204526478,C60pi15:1:0.0070629602,C60pi16:1:0.0117982741,C60pi17:1:0.0068334668,C60pi18:1:0.0433775839,C60pi19:1:0.0318278731,C60pi20:1:0.0222546108,C60pi21:1:0.0102264969,C60pi22:1:0.0150545891,C60pi23:1:0.0134159878,C60pi24:1:0.0148552065,C60pi25:1:0.0239111516,C60pi26:1:0.0128776278,C60pi27:1:0.0222318842,C60pi28:1:0.0247444742,C60pi29:1:0.0214274810,C60pi30:1:0.0115001882,C60pi31:1:0.0076017389,C60pi32:1:0.0130258568,C60pi33:1:0.0093701965,C60pi34:1:0.0467194264,C60pi35:1:0.0441940314,C60pi36:1:0.0322263154,C60pi37:1:0.0402999891,C60pi38:1:0.0150234227,C60pi39:1:0.0104589903,C60pi40:1:0.0214742395,C60pi41:1:0.0154957836,C60pi42:1:0.0101789953,C60pi43:1:0.0227980379,C60pi44:1:0.0123204539,C60pi45:1:0.0066777583,C60pi46:1:0.0004150083,C60pi47:1:0.0344385130,C60pi48:1:0.0113663379,C60pi49:1:0.0127143049,C60pi50:1:0.0124323741,C60pi51:1:0.0262124415,C60pi52:1:0.0064994957,C60pi53:1:0.0103203293,C60pi54:1:0.0142463512,C60pi55:1:0.0215600067,C60pi56:1:0.0199150700,C60pi57:1:0.0038964200,C60pi58:1:0.0113448855,C60pi59:1:0.0128595846,C60pi60:1:0.0117656776}
WARNING: Your input class weight 0.000415008 is very small and may cause numerical issues
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
734  C60           13429.622    216 27291.244    121035.244   27840.595
Model EX2 is alias for MIX{BurEX2:0.672020808818762,ExpEX2:1.6413466609931}
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
735  EX2           13862.143    216 28156.286    121900.286   28705.638
Model EX3 is alias for MIX{BurEX3:0.427672756793791,IntEX3:0.837595938019774,HExEX3:1.51863631431518}
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
736  EX3           13737.094    217 27908.188    122520.188   28460.083
Model EHO is alias for MIX{ExtEHO:0.720274356,HelEHO:0.976798797,OthEHO:0.783109376}
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
737  EHO           14193.494    217 28820.987    123432.987   29372.882
Model UL2 is alias for MIX{M1_UL2:0.581348617,M2_UL2:1.465482789}
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
738  UL2           13886.320    216 28204.639    121948.639   28753.991
Model UL3 is alias for MIX{Q1_UL3:0.484340397,Q2_UL3:0.492780514,Q3_UL3:1.15597274}
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
739  UL3           14271.701    217 28977.401    123589.401   29529.296
Model EX_EHO is alias for MIX{BUR_EXT:0.761816796788931,BUR_HEL:0.744425646802117,BUR_OTH:0.532457759429489,EXP_EXT:1.5639387472863,EXP_HEL:2.06403411829438,EXP_OTH:1.43336795177594}
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
740  EX_EHO        13714.741    220 27869.482    125109.482   28429.006
Model LG4M is alias for MIX{LG4M1,LG4M2,LG4M3,LG4M4}*G4
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
741  LG4M          13708.987    216 27849.975    121593.975   28399.326
Model LG4X is alias for MIX{LG4X1,LG4X2,LG4X3,LG4X4}*R4
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
742  LG4X          13680.710    221 27803.420    125927.420   28365.488
Model CF4 is alias for POISSON+FMIX{Fclass1,Fclass2,Fclass3,Fclass4}+F+G
WARNING: Normalizing State frequencies so that sum of them equals to 1
WARNING: Normalizing State frequencies so that sum of them equals to 1
WARNING: Normalizing State frequencies so that sum of them equals to 1
WARNING: Normalizing State frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
743  CF4           14524.401    239 29526.802    144246.802   30134.649
Model LG+C10 is alias for LG+POISSON+G+FMIX{C10pi1:1:0.1191344178,C10pi2:1:0.0874372456,C10pi3:1:0.1037105070,C10pi4:1:0.0922584809,C10pi5:1:0.1070492801,C10pi6:1:0.1329945166,C10pi7:1:0.0538028458,C10pi8:1:0.0691986212,C10pi9:1:0.1319937434,C10pi10:1:0.1024203429}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
744  LG+C10        13662.141    216 27756.282    121500.282   28305.634
Model LG+C20 is alias for LG+POISSON+G+FMIX{C20pi1:1:0.0559910600,C20pi2:1:0.0514824870,C20pi3:1:0.0812922124,C20pi4:1:0.0721976867,C20pi5:1:0.0556718858,C20pi6:1:0.0331003080,C20pi7:1:0.0589501763,C20pi8:1:0.0263756889,C20pi9:1:0.0307584220,C20pi10:1:0.0376701125,C20pi11:1:0.0303058290,C20pi12:1:0.0808775576,C20pi13:1:0.0263349134,C20pi14:1:0.0579101455,C20pi15:1:0.0371248064,C20pi16:1:0.0586867766,C20pi17:1:0.0561479138,C20pi18:1:0.0349810886,C20pi19:1:0.0544937394,C20pi20:1:0.0596471901}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
745  LG+C20        13509.994    216 27451.989    121195.989   28001.340
Model LG+C30 is alias for LG+POISSON+G+FMIX{C30pi1:1:0.0095783264,C30pi2:1:0.0248476365,C30pi3:1:0.0636309366,C30pi4:1:0.0537939225,C30pi5:1:0.0295885587,C30pi6:1:0.0117587936,C30pi7:1:0.0132013428,C30pi8:1:0.0236868805,C30pi9:1:0.0261687659,C30pi10:1:0.0239821974,C30pi11:1:0.0257100906,C30pi12:1:0.0465072425,C30pi13:1:0.0546794546,C30pi14:1:0.0536085131,C30pi15:1:0.0270622670,C30pi16:1:0.0403913593,C30pi17:1:0.0474212700,C30pi18:1:0.0458816478,C30pi19:1:0.0214036510,C30pi20:1:0.0290385981,C30pi21:1:0.0123391793,C30pi22:1:0.0569350229,C30pi23:1:0.0419687568,C30pi24:1:0.0339027062,C30pi25:1:0.0388777376,C30pi26:1:0.0196343766,C30pi27:1:0.0233086174,C30pi28:1:0.0622722654,C30pi29:1:0.0184803385,C30pi30:1:0.0203395454}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
746  LG+C30        13424.538    216 27281.076    121025.076   27830.428
Model LG+C40 is alias for LG+POISSON+G+FMIX{C40pi1:1:0.0223853788,C40pi2:1:0.0338891820,C40pi3:1:0.0577169375,C40pi4:1:0.0252416233,C40pi5:1:0.0108607921,C40pi6:1:0.0462373793,C40pi7:1:0.0102293175,C40pi8:1:0.0147523625,C40pi9:1:0.0143161352,C40pi10:1:0.0182302541,C40pi11:1:0.0204025079,C40pi12:1:0.0425505156,C40pi13:1:0.0248627269,C40pi14:1:0.0105892988,C40pi15:1:0.0188238725,C40pi16:1:0.0086663445,C40pi17:1:0.0148496147,C40pi18:1:0.0343037402,C40pi19:1:0.0225335203,C40pi20:1:0.0174068578,C40pi21:1:0.0112207827,C40pi22:1:0.0443532245,C40pi23:1:0.0392573370,C40pi24:1:0.0196756555,C40pi25:1:0.0287690328,C40pi26:1:0.0114441177,C40pi27:1:0.0112338740,C40pi28:1:0.0582694099,C40pi29:1:0.0444272279,C40pi30:1:0.0112010942,C40pi31:1:0.0145176111,C40pi32:1:0.0114629026,C40pi33:1:0.0239628061,C40pi34:1:0.0266266492,C40pi35:1:0.0481201159,C40pi36:1:0.0371147423,C40pi37:1:0.0160476688,C40pi38:1:0.0237249267,C40pi39:1:0.0235226203,C40pi40:1:0.0261998398}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
747  LG+C40        13408.385    216 27248.770    120992.770   27798.122
Model LG+C50 is alias for LG+POISSON+G+FMIX{C50pi1:1:0.0164297003,C50pi2:1:0.0273175755,C50pi3:1:0.0460247610,C50pi4:1:0.0084864734,C50pi5:1:0.0125389252,C50pi6:1:0.0343549036,C50pi7:1:0.0130241102,C50pi8:1:0.0094755681,C50pi9:1:0.0190040551,C50pi10:1:0.0151902354,C50pi11:1:0.0320534760,C50pi12:1:0.0210059850,C50pi13:1:0.0237408547,C50pi14:1:0.0239841203,C50pi15:1:0.0213748021,C50pi16:1:0.0210717705,C50pi17:1:0.0050241805,C50pi18:1:0.0166262276,C50pi19:1:0.0143945956,C50pi20:1:0.0104391130,C50pi21:1:0.0107628277,C50pi22:1:0.0148818171,C50pi23:1:0.0321480239,C50pi24:1:0.0145477978,C50pi25:1:0.0332355807,C50pi26:1:0.0143190281,C50pi27:1:0.0234478734,C50pi28:1:0.0183044983,C50pi29:1:0.0403269452,C50pi30:1:0.0135629530,C50pi31:1:0.0091880799,C50pi32:1:0.0158270022,C50pi33:1:0.0121019379,C50pi34:1:0.0353560982,C50pi35:1:0.0404495617,C50pi36:1:0.0104569232,C50pi37:1:0.0146187792,C50pi38:1:0.0093984095,C50pi39:1:0.0146773809,C50pi40:1:0.0201635562,C50pi41:1:0.0255640273,C50pi42:1:0.0039486842,C50pi43:1:0.0393652608,C50pi44:1:0.0056415419,C50pi45:1:0.0382833580,C50pi46:1:0.0039735086,C50pi47:1:0.0140269355,C50pi48:1:0.0476703673,C50pi49:1:0.0204062788,C50pi50:1:0.0117835304}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
748  LG+C50        13386.339    216 27204.677    120948.677   27754.029
Model LG+C60 is alias for LG+POISSON+G+FMIX{C60pi1:1:0.0169698865,C60pi2:1:0.0211683374,C60pi3:1:0.0276589079,C60pi4:1:0.0065675964,C60pi5:1:0.0141221416,C60pi6:1:0.0068774834,C60pi7:1:0.0146909701,C60pi8:1:0.0067225777,C60pi9:1:0.0018396660,C60pi10:1:0.0102547197,C60pi11:1:0.0230896163,C60pi12:1:0.0057941033,C60pi13:1:0.0125394534,C60pi14:1:0.0204526478,C60pi15:1:0.0070629602,C60pi16:1:0.0117982741,C60pi17:1:0.0068334668,C60pi18:1:0.0433775839,C60pi19:1:0.0318278731,C60pi20:1:0.0222546108,C60pi21:1:0.0102264969,C60pi22:1:0.0150545891,C60pi23:1:0.0134159878,C60pi24:1:0.0148552065,C60pi25:1:0.0239111516,C60pi26:1:0.0128776278,C60pi27:1:0.0222318842,C60pi28:1:0.0247444742,C60pi29:1:0.0214274810,C60pi30:1:0.0115001882,C60pi31:1:0.0076017389,C60pi32:1:0.0130258568,C60pi33:1:0.0093701965,C60pi34:1:0.0467194264,C60pi35:1:0.0441940314,C60pi36:1:0.0322263154,C60pi37:1:0.0402999891,C60pi38:1:0.0150234227,C60pi39:1:0.0104589903,C60pi40:1:0.0214742395,C60pi41:1:0.0154957836,C60pi42:1:0.0101789953,C60pi43:1:0.0227980379,C60pi44:1:0.0123204539,C60pi45:1:0.0066777583,C60pi46:1:0.0004150083,C60pi47:1:0.0344385130,C60pi48:1:0.0113663379,C60pi49:1:0.0127143049,C60pi50:1:0.0124323741,C60pi51:1:0.0262124415,C60pi52:1:0.0064994957,C60pi53:1:0.0103203293,C60pi54:1:0.0142463512,C60pi55:1:0.0215600067,C60pi56:1:0.0199150700,C60pi57:1:0.0038964200,C60pi58:1:0.0113448855,C60pi59:1:0.0128595846,C60pi60:1:0.0117656776}
WARNING: Your input class weight 0.000415008 is very small and may cause numerical issues
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
749  LG+C60        13384.487    216 27200.975    120944.975   27750.326
Akaike Information Criterion:           LG+C60
Corrected Akaike Information Criterion: LG+C60
Bayesian Information Criterion:         LG+C60
Best-fit model: LG+C60 chosen according to BIC

All model information printed to iqtree_gene_trees/COG2924.model.gz
CPU time for ModelFinder: 5650.503 seconds (1h:34m:10s)
Wall-clock time for ModelFinder: 573.919 seconds (0h:9m:33s)
Generating 1000 samples for ultrafast bootstrap (seed: 98730)...
Model LG+C60 is alias for LG+POISSON+G+FMIX{C60pi1:1:0.0169698865,C60pi2:1:0.0211683374,C60pi3:1:0.0276589079,C60pi4:1:0.0065675964,C60pi5:1:0.0141221416,C60pi6:1:0.0068774834,C60pi7:1:0.0146909701,C60pi8:1:0.0067225777,C60pi9:1:0.0018396660,C60pi10:1:0.0102547197,C60pi11:1:0.0230896163,C60pi12:1:0.0057941033,C60pi13:1:0.0125394534,C60pi14:1:0.0204526478,C60pi15:1:0.0070629602,C60pi16:1:0.0117982741,C60pi17:1:0.0068334668,C60pi18:1:0.0433775839,C60pi19:1:0.0318278731,C60pi20:1:0.0222546108,C60pi21:1:0.0102264969,C60pi22:1:0.0150545891,C60pi23:1:0.0134159878,C60pi24:1:0.0148552065,C60pi25:1:0.0239111516,C60pi26:1:0.0128776278,C60pi27:1:0.0222318842,C60pi28:1:0.0247444742,C60pi29:1:0.0214274810,C60pi30:1:0.0115001882,C60pi31:1:0.0076017389,C60pi32:1:0.0130258568,C60pi33:1:0.0093701965,C60pi34:1:0.0467194264,C60pi35:1:0.0441940314,C60pi36:1:0.0322263154,C60pi37:1:0.0402999891,C60pi38:1:0.0150234227,C60pi39:1:0.0104589903,C60pi40:1:0.0214742395,C60pi41:1:0.0154957836,C60pi42:1:0.0101789953,C60pi43:1:0.0227980379,C60pi44:1:0.0123204539,C60pi45:1:0.0066777583,C60pi46:1:0.0004150083,C60pi47:1:0.0344385130,C60pi48:1:0.0113663379,C60pi49:1:0.0127143049,C60pi50:1:0.0124323741,C60pi51:1:0.0262124415,C60pi52:1:0.0064994957,C60pi53:1:0.0103203293,C60pi54:1:0.0142463512,C60pi55:1:0.0215600067,C60pi56:1:0.0199150700,C60pi57:1:0.0038964200,C60pi58:1:0.0113448855,C60pi59:1:0.0128595846,C60pi60:1:0.0117656776}
WARNING: Your input class weight 0.000415008 is very small and may cause numerical issues

NOTE: 470 MB RAM (0 GB) is required!
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
Estimate model parameters (epsilon = 0.100)
1. Initial log-likelihood: -13384.487
Optimal log-likelihood: -13384.484
Mixture weights: 0.017 0.021 0.028 0.007 0.014 0.007 0.015 0.007 0.002 0.010 0.023 0.006 0.013 0.020 0.007 0.012 0.007 0.043 0.032 0.022 0.010 0.015 0.013 0.015 0.024 0.013 0.022 0.025 0.021 0.012 0.008 0.013 0.009 0.047 0.044 0.032 0.040 0.015 0.010 0.021 0.015 0.010 0.023 0.012 0.007 0.000 0.034 0.011 0.013 0.012 0.026 0.006 0.010 0.014 0.022 0.020 0.004 0.011 0.013 0.012
Gamma shape alpha: 0.958
Parameters optimization took 1 rounds (2.723 sec)
Wrote distance file to... 
Computing ML distances based on estimated model parameters...
Calculating distance matrix: done in 0.368039 secs using 996.4% CPU
Computing ML distances took 0.368612 sec (of wall-clock time) 3.671275 sec (of CPU time)
WARNING: Some pairwise ML distances are too long (saturated)
Setting up auxiliary I and S matrices: done in 0.00180505 secs using 741.1% CPU
Constructing RapidNJ tree: done in 0.122088 secs using 289.4% CPU
Computing RapidNJ tree took 0.124093 sec (of wall-clock time) 0.368106 sec (of CPU time)
Log-likelihood of RapidNJ tree: -13332.283
--------------------------------------------------------------------
|             INITIALIZING CANDIDATE TREE SET                      |
--------------------------------------------------------------------
Generating 98 parsimony trees... 2.653 second
Computing log-likelihood of 98 initial trees ... 102.892 seconds
Current best score: -13332.283

Do NNI search on 20 best initial trees
Optimizing NNI: done in 40.8246 secs using 980.1% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 1: -13246.972
Optimizing NNI: done in 48.5703 secs using 980.7% CPU
Optimizing NNI: done in 34.2905 secs using 977.7% CPU
Optimizing NNI: done in 46.4469 secs using 977.1% CPU
Optimizing NNI: done in 46.571 secs using 980.2% CPU
Optimizing NNI: done in 63.9465 secs using 974.2% CPU
Optimizing NNI: done in 42.4799 secs using 974.9% CPU
Optimizing NNI: done in 39.4458 secs using 975.6% CPU
Optimizing NNI: done in 44.7306 secs using 976.2% CPU
Optimizing NNI: done in 33.7577 secs using 977% CPU
Iteration 10 / LogL: -13356.741 / Time: 0h:9m:32s
Optimizing NNI: done in 45.4305 secs using 979.1% CPU
Optimizing NNI: done in 55.5509 secs using 976.2% CPU
Optimizing NNI: done in 50.4959 secs using 975.1% CPU
Optimizing NNI: done in 47.8972 secs using 976.1% CPU
Optimizing NNI: done in 75.1323 secs using 976.6% CPU
Optimizing NNI: done in 63.5661 secs using 975.9% CPU
Optimizing NNI: done in 42.5245 secs using 973% CPU
Optimizing NNI: done in 37.6356 secs using 973.9% CPU
Optimizing NNI: done in 36.0232 secs using 974.8% CPU
Optimizing NNI: done in 123.714 secs using 979% CPU
Iteration 20 / LogL: -13314.577 / Time: 0h:19m:11s
Finish initializing candidate tree set (20)
Current best tree score: -13246.972 / CPU time: 1140.511
Number of iterations: 20
--------------------------------------------------------------------
|               OPTIMIZING CANDIDATE TREE SET                      |
--------------------------------------------------------------------
Optimizing NNI: done in 28.0019 secs using 977.2% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 21: -13241.782
Optimizing NNI: done in 26.0244 secs using 978.2% CPU
Optimizing NNI: done in 24.3878 secs using 975.9% CPU
Optimizing NNI: done in 34.1194 secs using 975.3% CPU
Optimizing NNI: done in 29.7237 secs using 972.6% CPU
Optimizing NNI: done in 29.1613 secs using 978.4% CPU
Optimizing NNI: done in 24.0716 secs using 972.4% CPU
Optimizing NNI: done in 31.8001 secs using 975.2% CPU
Optimizing NNI: done in 29.7625 secs using 972.6% CPU
Optimizing NNI: done in 25.6081 secs using 974.6% CPU
Iteration 30 / LogL: -13244.064 / Time: 0h:23m:59s (1h:15m:16s left)
Optimizing NNI: done in 38.0881 secs using 974.8% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 31: -13240.949
Optimizing NNI: done in 29.5467 secs using 976.2% CPU
Optimizing NNI: done in 28.2121 secs using 974.9% CPU
Optimizing NNI: done in 30.9504 secs using 979.3% CPU
Optimizing NNI: done in 26.2986 secs using 974.2% CPU
Optimizing NNI: done in 40.0989 secs using 976.2% CPU
Optimizing NNI: done in 26.6009 secs using 978% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 37: -13236.745
Optimizing NNI: done in 36.7435 secs using 978.6% CPU
Optimizing NNI: done in 30.2805 secs using 976.3% CPU
Optimizing NNI: done in 33.2689 secs using 974% CPU
Iteration 40 / LogL: -13238.586 / Time: 0h:29m:28s (1h:13m:19s left)
Optimizing NNI: done in 30.8221 secs using 973.4% CPU
Optimizing NNI: done in 38.1807 secs using 969.9% CPU
Optimizing NNI: done in 39.4864 secs using 972.4% CPU
Optimizing NNI: done in 26.9858 secs using 974.8% CPU
Optimizing NNI: done in 28.8762 secs using 974.8% CPU
BETTER TREE FOUND at iteration 45: -13236.745
Optimizing NNI: done in 31.4376 secs using 972.4% CPU
Optimizing NNI: done in 31.2905 secs using 972.4% CPU
Optimizing NNI: done in 26.5922 secs using 971.1% CPU
Optimizing NNI: done in 37.708 secs using 972% CPU
Optimizing NNI: done in 38.5123 secs using 974.3% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 50: -13234.668
Iteration 50 / LogL: -13234.668 / Time: 0h:35m:3s (1h:11m:33s left)
Log-likelihood cutoff on original alignment: -13344.174
UFBoot trees printed to iqtree_gene_trees/COG2924.ufboot
Optimizing NNI: done in 27.7061 secs using 976.7% CPU
Optimizing NNI: done in 27.0393 secs using 976.6% CPU
Optimizing NNI: done in 34.2781 secs using 974.3% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 53: -13229.990
Optimizing NNI: done in 34.1801 secs using 973.2% CPU
Optimizing NNI: done in 30.8811 secs using 972.8% CPU
Optimizing NNI: done in 28.8513 secs using 975.3% CPU
Optimizing NNI: done in 33.3433 secs using 974.2% CPU
Optimizing NNI: done in 36.1849 secs using 973.8% CPU
Optimizing NNI: done in 26.0094 secs using 974% CPU
Optimizing NNI: done in 33.4142 secs using 974.2% CPU
Iteration 60 / LogL: -13234.211 / Time: 0h:40m:26s (1h:3m:44s left)
Optimizing NNI: done in 28.4581 secs using 973.7% CPU
Optimizing NNI: done in 37.0174 secs using 973.7% CPU
Optimizing NNI: done in 33.6053 secs using 975% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 63: -13228.957
Optimizing NNI: done in 31.304 secs using 972.4% CPU
Optimizing NNI: done in 29.8 secs using 976.3% CPU
Optimizing NNI: done in 31.0251 secs using 974.8% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 66: -13227.957
Optimizing NNI: done in 27.7712 secs using 977.1% CPU
Optimizing NNI: done in 30.6795 secs using 978.4% CPU
Optimizing NNI: done in 25.8287 secs using 975.6% CPU
Optimizing NNI: done in 24.8898 secs using 970% CPU
Iteration 70 / LogL: -13231.402 / Time: 0h:45m:34s (1h:3m:23s left)
Optimizing NNI: done in 27.3069 secs using 972.1% CPU
Optimizing NNI: done in 35.4313 secs using 972.6% CPU
Optimizing NNI: done in 35.4025 secs using 973.1% CPU
Optimizing NNI: done in 31.7548 secs using 975.6% CPU
Optimizing NNI: done in 33.1011 secs using 974.6% CPU
Optimizing NNI: done in 27.4587 secs using 978.2% CPU
Optimizing NNI: done in 32.7617 secs using 976.4% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 77: -13227.927
Optimizing NNI: done in 26.7998 secs using 979.3% CPU
Optimizing NNI: done in 34.1419 secs using 971.9% CPU
UPDATE BEST LOG-LIKELIHOOD: -13227.927
Optimizing NNI: done in 35.9999 secs using 971.5% CPU
Iteration 80 / LogL: -13230.582 / Time: 0h:50m:59s (1h:2m:36s left)
Optimizing NNI: done in 36.3506 secs using 972.6% CPU
Optimizing NNI: done in 36.6629 secs using 971.8% CPU
Optimizing NNI: done in 37.7808 secs using 971% CPU
Optimizing NNI: done in 37.1784 secs using 971.6% CPU
Optimizing NNI: done in 34.2715 secs using 968.7% CPU
Optimizing NNI: done in 33.8786 secs using 969.1% CPU
Optimizing NNI: done in 34.038 secs using 973.8% CPU
Optimizing NNI: done in 28.1114 secs using 974.7% CPU
Optimizing NNI: done in 29.373 secs using 966.1% CPU
Optimizing NNI: done in 31.16 secs using 973% CPU
Iteration 90 / LogL: -13234.907 / Time: 0h:56m:40s (0h:55m:23s left)
Optimizing NNI: done in 29.5623 secs using 979.9% CPU
Optimizing NNI: done in 30.448 secs using 971.9% CPU
Optimizing NNI: done in 30.875 secs using 967.1% CPU
Optimizing NNI: done in 36.0822 secs using 970.4% CPU
Optimizing NNI: done in 34.7086 secs using 972.1% CPU
Optimizing NNI: done in 36.3366 secs using 972% CPU
Optimizing NNI: done in 33.6033 secs using 973.5% CPU
Optimizing NNI: done in 32.9432 secs using 970.1% CPU
Optimizing NNI: done in 30.0426 secs using 968.9% CPU
Optimizing NNI: done in 28.7407 secs using 970.8% CPU
Iteration 100 / LogL: -13240.505 / Time: 1h:2m:6s (0h:48m:18s left)
Log-likelihood cutoff on original alignment: -13337.628
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.954
NOTE: UFBoot does not converge, continue at least 100 more iterations
UFBoot trees printed to iqtree_gene_trees/COG2924.ufboot
Optimizing NNI: done in 38.1399 secs using 969.4% CPU
Optimizing NNI: done in 32.5109 secs using 971.2% CPU
Optimizing NNI: done in 40.0677 secs using 972.6% CPU
Optimizing NNI: done in 25.46 secs using 974.4% CPU
Optimizing NNI: done in 31.3622 secs using 971.5% CPU
Optimizing NNI: done in 29.3894 secs using 971.6% CPU
Optimizing NNI: done in 30.2608 secs using 973.3% CPU
Optimizing NNI: done in 28.6152 secs using 974.3% CPU
Optimizing NNI: done in 31.8495 secs using 975% CPU
BETTER TREE FOUND at iteration 109: -13227.918
Optimizing NNI: done in 37.7335 secs using 974.1% CPU
Iteration 110 / LogL: -13230.127 / Time: 1h:7m:35s (1h:1m:23s left)
Optimizing NNI: done in 32.9763 secs using 973% CPU
Optimizing NNI: done in 30.3077 secs using 973.2% CPU
Optimizing NNI: done in 31.7459 secs using 974.3% CPU
Optimizing NNI: done in 29.2395 secs using 973.4% CPU
Optimizing NNI: done in 29.6798 secs using 972.4% CPU
Optimizing NNI: done in 33.0275 secs using 971.1% CPU
Optimizing NNI: done in 28.8994 secs using 966.9% CPU
Optimizing NNI: done in 27.6537 secs using 965.3% CPU
Optimizing NNI: done in 41.926 secs using 968.7% CPU
Optimizing NNI: done in 32.8442 secs using 970.7% CPU
Iteration 120 / LogL: -13228.333 / Time: 1h:12m:56s (0h:54m:33s left)
Optimizing NNI: done in 35.0766 secs using 971.6% CPU
Optimizing NNI: done in 27.9067 secs using 970.7% CPU
Optimizing NNI: done in 32.7241 secs using 972.1% CPU
Optimizing NNI: done in 31.5133 secs using 972.8% CPU
Optimizing NNI: done in 35.4244 secs using 975% CPU
Optimizing NNI: done in 33.5999 secs using 975.9% CPU
Optimizing NNI: done in 34.7899 secs using 977.6% CPU
Optimizing NNI: done in 30.5191 secs using 976% CPU
Optimizing NNI: done in 31.5995 secs using 973% CPU
UPDATE BEST LOG-LIKELIHOOD: -13227.917
Optimizing NNI: done in 26.4576 secs using 971.3% CPU
Iteration 130 / LogL: -13232.933 / Time: 1h:18m:18s (0h:47m:57s left)
Optimizing NNI: done in 27.3818 secs using 970.8% CPU
Optimizing NNI: done in 27.9183 secs using 971.8% CPU
Optimizing NNI: done in 29.2813 secs using 971.9% CPU
Optimizing NNI: done in 32.3235 secs using 972.3% CPU
Optimizing NNI: done in 35.8048 secs using 972.9% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 135: -13226.982
Optimizing NNI: done in 30.075 secs using 975.9% CPU
Optimizing NNI: done in 32.1912 secs using 977.2% CPU
Optimizing NNI: done in 25.309 secs using 976.9% CPU
Optimizing NNI: done in 23.1333 secs using 978.5% CPU
Optimizing NNI: done in 28.404 secs using 974.2% CPU
Iteration 140 / LogL: -13229.332 / Time: 1h:23m:15s (0h:56m:53s left)
Optimizing NNI: done in 39.2052 secs using 972.2% CPU
Optimizing NNI: done in 30.4333 secs using 975.3% CPU
Optimizing NNI: done in 29.7226 secs using 974.9% CPU
Optimizing NNI: done in 33.7927 secs using 973.7% CPU
Optimizing NNI: done in 44.1943 secs using 972% CPU
Optimizing NNI: done in 28.6615 secs using 972.7% CPU
Optimizing NNI: done in 27.1332 secs using 971.4% CPU
Optimizing NNI: done in 31.6284 secs using 967.8% CPU
Optimizing NNI: done in 27.8407 secs using 970.7% CPU
Optimizing NNI: done in 33.9604 secs using 970.6% CPU
Iteration 150 / LogL: -13228.122 / Time: 1h:28m:44s (0h:50m:37s left)
Log-likelihood cutoff on original alignment: -13337.628
UFBoot trees printed to iqtree_gene_trees/COG2924.ufboot
Optimizing NNI: done in 31.9869 secs using 967.9% CPU
Optimizing NNI: done in 26.0506 secs using 971% CPU
Optimizing NNI: done in 34.7163 secs using 972% CPU
Optimizing NNI: done in 37.9091 secs using 972% CPU
Optimizing NNI: done in 31.5414 secs using 971.8% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 155: -13225.021
Optimizing NNI: done in 29.5831 secs using 974.1% CPU
Optimizing NNI: done in 31.4871 secs using 969.1% CPU
Optimizing NNI: done in 26.2575 secs using 968.1% CPU
Optimizing NNI: done in 30.1108 secs using 967.9% CPU
Optimizing NNI: done in 31.2403 secs using 966.2% CPU
Iteration 160 / LogL: -13227.127 / Time: 1h:34m:1s (0h:56m:10s left)
Optimizing NNI: done in 32.4093 secs using 968.9% CPU
Optimizing NNI: done in 34.5639 secs using 972.4% CPU
Optimizing NNI: done in 28.2948 secs using 967.7% CPU
Optimizing NNI: done in 28.211 secs using 974% CPU
Optimizing NNI: done in 39.8696 secs using 970.8% CPU
Optimizing NNI: done in 34.1128 secs using 973.1% CPU
Optimizing NNI: done in 29.6723 secs using 971.8% CPU
Optimizing NNI: done in 31.1697 secs using 972.2% CPU
Optimizing NNI: done in 33.2588 secs using 974.6% CPU
Optimizing NNI: done in 28.0832 secs using 973.3% CPU
Iteration 170 / LogL: -13227.465 / Time: 1h:39m:23s (0h:49m:59s left)
Optimizing NNI: done in 34.1448 secs using 973.5% CPU
Optimizing NNI: done in 29.4799 secs using 972.5% CPU
Optimizing NNI: done in 31.8461 secs using 970.5% CPU
Optimizing NNI: done in 34.8236 secs using 971.6% CPU
Optimizing NNI: done in 28.236 secs using 970.7% CPU
Optimizing NNI: done in 30.025 secs using 972% CPU
Optimizing NNI: done in 32.4761 secs using 970.3% CPU
Optimizing NNI: done in 28.8234 secs using 969.4% CPU
Optimizing NNI: done in 30.0607 secs using 974.6% CPU
Optimizing NNI: done in 29.8065 secs using 973.1% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 180: -13224.790
Iteration 180 / LogL: -13224.790 / Time: 1h:44m:38s (0h:58m:27s left)
Optimizing NNI: done in 30.258 secs using 975.3% CPU
Optimizing NNI: done in 34.2159 secs using 971.7% CPU
Optimizing NNI: done in 25.9077 secs using 972.2% CPU
Optimizing NNI: done in 22.4806 secs using 973.5% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 184: -13223.746
Optimizing NNI: done in 28.1797 secs using 973.9% CPU
Optimizing NNI: done in 25.3444 secs using 975.7% CPU
Optimizing NNI: done in 17.864 secs using 981.7% CPU
Optimizing NNI: done in 18.3 secs using 983.8% CPU
Optimizing NNI: done in 18.8052 secs using 982.7% CPU
Optimizing NNI: done in 24.2877 secs using 982.7% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 190: -13223.150
Iteration 190 / LogL: -13223.150 / Time: 1h:48m:50s (0h:57m:35s left)
Optimizing NNI: done in 21.2801 secs using 982.1% CPU
Optimizing NNI: done in 22.4659 secs using 980.2% CPU
Optimizing NNI: done in 19.81 secs using 981.5% CPU
Optimizing NNI: done in 17.9701 secs using 981.2% CPU
Optimizing NNI: done in 22.5727 secs using 982.7% CPU
Optimizing NNI: done in 24.7858 secs using 982.9% CPU
Optimizing NNI: done in 19.2749 secs using 982.4% CPU
BETTER TREE FOUND at iteration 197: -13223.150
Optimizing NNI: done in 17.5746 secs using 984.3% CPU
Optimizing NNI: done in 18.1796 secs using 984.7% CPU
Optimizing NNI: done in 18.5391 secs using 985.6% CPU
Iteration 200 / LogL: -13223.725 / Time: 1h:52m:15s (0h:54m:43s left)
Log-likelihood cutoff on original alignment: -13337.628
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.979
NOTE: UFBoot does not converge, continue at least 100 more iterations
UFBoot trees printed to iqtree_gene_trees/COG2924.ufboot
Optimizing NNI: done in 18.6157 secs using 984.2% CPU
Optimizing NNI: done in 16.7989 secs using 985.9% CPU
Optimizing NNI: done in 20.2766 secs using 984.4% CPU
Optimizing NNI: done in 20.0851 secs using 985.8% CPU
Optimizing NNI: done in 15.4957 secs using 984.9% CPU
Optimizing NNI: done in 18.9272 secs using 984.8% CPU
Optimizing NNI: done in 19.841 secs using 985.2% CPU
Optimizing NNI: done in 19.227 secs using 986% CPU
Optimizing NNI: done in 21.4369 secs using 984.9% CPU
Optimizing NNI: done in 19.8879 secs using 985% CPU
Iteration 210 / LogL: -13228.969 / Time: 1h:55m:29s (0h:49m:43s left)
Optimizing NNI: done in 18.9981 secs using 986.1% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 211: -13221.369
Optimizing NNI: done in 16.3359 secs using 985.5% CPU
Optimizing NNI: done in 19.327 secs using 985.8% CPU
Optimizing NNI: done in 21.2163 secs using 985.3% CPU
Optimizing NNI: done in 18.2685 secs using 986.4% CPU
Optimizing NNI: done in 28.8386 secs using 985.5% CPU
Optimizing NNI: done in 19.2243 secs using 985.8% CPU
Optimizing NNI: done in 23.3209 secs using 985.7% CPU
Optimizing NNI: done in 20.3147 secs using 985.4% CPU
Optimizing NNI: done in 16.8068 secs using 986% CPU
Iteration 220 / LogL: -13227.043 / Time: 1h:58m:56s (0h:49m:25s left)
Optimizing NNI: done in 21.9665 secs using 985.8% CPU
Optimizing NNI: done in 21.8981 secs using 985% CPU
Optimizing NNI: done in 24.1518 secs using 984.2% CPU
Optimizing NNI: done in 16.1999 secs using 985% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 224: -13221.348
Optimizing NNI: done in 20.5622 secs using 985.6% CPU
Optimizing NNI: done in 18.2305 secs using 985.2% CPU
Optimizing NNI: done in 19.6748 secs using 985.4% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 227: -13221.309
Optimizing NNI: done in 20.1791 secs using 986.7% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 228: -13221.286
Optimizing NNI: done in 23.1301 secs using 985.3% CPU
Optimizing NNI: done in 19.5904 secs using 986.8% CPU
Iteration 230 / LogL: -13230.685 / Time: 2h:2m:30s (0h:52m:25s left)
Optimizing NNI: done in 17.2866 secs using 986.5% CPU
Optimizing NNI: done in 20.9641 secs using 984.9% CPU
Optimizing NNI: done in 18.9236 secs using 984.1% CPU
Optimizing NNI: done in 18.4155 secs using 985.1% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 234: -13221.254
Optimizing NNI: done in 22.611 secs using 981.6% CPU
Optimizing NNI: done in 18.3435 secs using 982.5% CPU
Optimizing NNI: done in 20.5721 secs using 983.1% CPU
Optimizing NNI: done in 18.6209 secs using 981.6% CPU
Optimizing NNI: done in 19.9095 secs using 981.4% CPU
Optimizing NNI: done in 19.4652 secs using 982.4% CPU
Iteration 240 / LogL: -13222.091 / Time: 2h:5m:49s (0h:49m:29s left)
Optimizing NNI: done in 18.5648 secs using 982.4% CPU
Optimizing NNI: done in 19.2329 secs using 981.5% CPU
Optimizing NNI: done in 16.2659 secs using 979.9% CPU
Optimizing NNI: done in 20.0849 secs using 981.4% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 244: -13221.120
Optimizing NNI: done in 18.9878 secs using 981.2% CPU
Optimizing NNI: done in 18.3617 secs using 981.6% CPU
Optimizing NNI: done in 16.2613 secs using 982.8% CPU
Optimizing NNI: done in 26.1171 secs using 983.1% CPU
Optimizing NNI: done in 20.2378 secs using 981.8% CPU
Optimizing NNI: done in 23.2297 secs using 983.7% CPU
Iteration 250 / LogL: -13221.187 / Time: 2h:9m:11s (0h:48m:46s left)
Log-likelihood cutoff on original alignment: -13337.628
UFBoot trees printed to iqtree_gene_trees/COG2924.ufboot
Optimizing NNI: done in 20.5214 secs using 982.4% CPU
Optimizing NNI: done in 18.3395 secs using 982.7% CPU
Optimizing NNI: done in 19.6271 secs using 983.2% CPU
Optimizing NNI: done in 16.7964 secs using 981.9% CPU
Optimizing NNI: done in 22.606 secs using 982.2% CPU
Optimizing NNI: done in 22.898 secs using 982% CPU
Optimizing NNI: done in 19.1551 secs using 982.9% CPU
Optimizing NNI: done in 21.1438 secs using 981.7% CPU
Optimizing NNI: done in 22.5874 secs using 981.3% CPU
Optimizing NNI: done in 20.0786 secs using 981.9% CPU
Iteration 260 / LogL: -13221.632 / Time: 2h:12m:39s (0h:43m:1s left)
Optimizing NNI: done in 16.4915 secs using 983.3% CPU
Optimizing NNI: done in 18.9119 secs using 982.4% CPU
Optimizing NNI: done in 21.1793 secs using 985.1% CPU
Optimizing NNI: done in 22.3351 secs using 983.1% CPU
Optimizing NNI: done in 17.2307 secs using 981.8% CPU
Optimizing NNI: done in 18.5363 secs using 982.8% CPU
Optimizing NNI: done in 20.777 secs using 983% CPU
Optimizing NNI: done in 20.0721 secs using 982.7% CPU
Optimizing NNI: done in 24.8375 secs using 982.7% CPU
Optimizing NNI: done in 20.7331 secs using 983.2% CPU
Iteration 270 / LogL: -13226.534 / Time: 2h:16m:2s (0h:37m:25s left)
Optimizing NNI: done in 17.4721 secs using 981.8% CPU
Optimizing NNI: done in 16.4996 secs using 983.5% CPU
Optimizing NNI: done in 17.6006 secs using 982.5% CPU
Optimizing NNI: done in 22.3651 secs using 974% CPU
Optimizing NNI: done in 23.196 secs using 981.1% CPU
Optimizing NNI: done in 20.8514 secs using 984.4% CPU
Optimizing NNI: done in 19.1085 secs using 985.2% CPU
Optimizing NNI: done in 23.1267 secs using 985.6% CPU
Optimizing NNI: done in 18.8904 secs using 984.1% CPU
BETTER TREE FOUND at iteration 279: -13221.114
Optimizing NNI: done in 20.4356 secs using 983.5% CPU
Iteration 280 / LogL: -13229.972 / Time: 2h:19m:24s (0h:49m:27s left)
Optimizing NNI: done in 23.7529 secs using 981.6% CPU
Optimizing NNI: done in 19.5348 secs using 982.4% CPU
Optimizing NNI: done in 22.4683 secs using 981.9% CPU
Optimizing NNI: done in 18.6544 secs using 982.1% CPU
Optimizing NNI: done in 17.306 secs using 982% CPU
Optimizing NNI: done in 22.337 secs using 982.4% CPU
Optimizing NNI: done in 20.8945 secs using 982.1% CPU
Optimizing NNI: done in 20.6574 secs using 981.5% CPU
Optimizing NNI: done in 20.4077 secs using 981.6% CPU
Optimizing NNI: done in 19.1943 secs using 980.6% CPU
Iteration 290 / LogL: -13221.174 / Time: 2h:22m:51s (0h:43m:59s left)
Optimizing NNI: done in 22.4577 secs using 983.3% CPU
Optimizing NNI: done in 20.4465 secs using 981.2% CPU
Optimizing NNI: done in 19.7841 secs using 980.7% CPU
Optimizing NNI: done in 21.3765 secs using 983.2% CPU
Optimizing NNI: done in 17.2063 secs using 981.3% CPU
Optimizing NNI: done in 17.0431 secs using 981.5% CPU
Optimizing NNI: done in 20.3611 secs using 982.5% CPU
Optimizing NNI: done in 18.9426 secs using 981.9% CPU
Optimizing NNI: done in 19.9854 secs using 981.1% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 299: -13220.966
Optimizing NNI: done in 19.2898 secs using 981.4% CPU
Iteration 300 / LogL: -13227.072 / Time: 2h:26m:13s (0h:48m:24s left)
Log-likelihood cutoff on original alignment: -13337.628
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.956
NOTE: UFBoot does not converge, continue at least 100 more iterations
UFBoot trees printed to iqtree_gene_trees/COG2924.ufboot
Optimizing NNI: done in 17.9417 secs using 984.5% CPU
Optimizing NNI: done in 19.2432 secs using 985.1% CPU
Optimizing NNI: done in 19.6748 secs using 984.8% CPU
Optimizing NNI: done in 17.6036 secs using 985.3% CPU
Optimizing NNI: done in 24.1483 secs using 986.1% CPU
Optimizing NNI: done in 20.72 secs using 985.5% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 306: -13220.924
Optimizing NNI: done in 20.4624 secs using 983.4% CPU
Optimizing NNI: done in 17.1826 secs using 984.8% CPU
Optimizing NNI: done in 22.57 secs using 986% CPU
Optimizing NNI: done in 15.8193 secs using 985.2% CPU
Iteration 310 / LogL: -13222.616 / Time: 2h:29m:34s (0h:46m:28s left)
Optimizing NNI: done in 21.9659 secs using 983.7% CPU
Optimizing NNI: done in 17.354 secs using 985% CPU
Optimizing NNI: done in 23.1757 secs using 985.2% CPU
Optimizing NNI: done in 16.9689 secs using 985.8% CPU
Optimizing NNI: done in 20.9737 secs using 984.7% CPU
Optimizing NNI: done in 22.0953 secs using 984.8% CPU
Optimizing NNI: done in 16.3548 secs using 984.4% CPU
Optimizing NNI: done in 27.1515 secs using 981.5% CPU
Optimizing NNI: done in 26.5229 secs using 976% CPU
Optimizing NNI: done in 29.5307 secs using 980.2% CPU
Iteration 320 / LogL: -13236.942 / Time: 2h:33m:18s (0h:41m:19s left)
Optimizing NNI: done in 20.5025 secs using 981.7% CPU
Optimizing NNI: done in 21.8445 secs using 983.1% CPU
Optimizing NNI: done in 26.5332 secs using 977.1% CPU
Optimizing NNI: done in 17.992 secs using 978.9% CPU
Optimizing NNI: done in 20.082 secs using 979.7% CPU
Optimizing NNI: done in 24.4222 secs using 979.1% CPU
Optimizing NNI: done in 21.995 secs using 981.1% CPU
Optimizing NNI: done in 21.8827 secs using 979.1% CPU
Optimizing NNI: done in 23.4415 secs using 981.4% CPU
Optimizing NNI: done in 21.6107 secs using 982.3% CPU
Iteration 330 / LogL: -13222.509 / Time: 2h:37m:1s (0h:36m:16s left)
Optimizing NNI: done in 23.1449 secs using 982.7% CPU
Optimizing NNI: done in 22.3813 secs using 978.9% CPU
Optimizing NNI: done in 18.6683 secs using 980.8% CPU
Optimizing NNI: done in 21.7742 secs using 982.1% CPU
Optimizing NNI: done in 25.4743 secs using 978.5% CPU
Optimizing NNI: done in 22.303 secs using 980.1% CPU
Optimizing NNI: done in 20.7865 secs using 975.2% CPU
Optimizing NNI: done in 24.9048 secs using 978.6% CPU
Optimizing NNI: done in 24.1119 secs using 980.8% CPU
Optimizing NNI: done in 27.3899 secs using 982.4% CPU
Iteration 340 / LogL: -13223.551 / Time: 2h:40m:55s (0h:31m:19s left)
Optimizing NNI: done in 21.0918 secs using 982.6% CPU
Optimizing NNI: done in 21.2314 secs using 982.2% CPU
Optimizing NNI: done in 24.1772 secs using 981.8% CPU
Optimizing NNI: done in 26.491 secs using 979.8% CPU
Optimizing NNI: done in 24.5005 secs using 981.4% CPU
Optimizing NNI: done in 25.7308 secs using 979.6% CPU
Optimizing NNI: done in 21.4346 secs using 983.4% CPU
Optimizing NNI: done in 21.9179 secs using 983.3% CPU
Optimizing NNI: done in 20.7024 secs using 981.6% CPU
Optimizing NNI: done in 22.16 secs using 980.6% CPU
Iteration 350 / LogL: -13222.536 / Time: 2h:44m:47s (0h:26m:26s left)
Log-likelihood cutoff on original alignment: -13337.628
UFBoot trees printed to iqtree_gene_trees/COG2924.ufboot
Optimizing NNI: done in 21.9755 secs using 983.1% CPU
Optimizing NNI: done in 17.2782 secs using 981.6% CPU
Optimizing NNI: done in 20.6126 secs using 977.3% CPU
Optimizing NNI: done in 19.8007 secs using 983.1% CPU
UPDATE BEST LOG-LIKELIHOOD: -13220.924
Optimizing NNI: done in 19.2437 secs using 976.8% CPU
Optimizing NNI: done in 22.5043 secs using 980.7% CPU
Optimizing NNI: done in 22.512 secs using 982.8% CPU
Optimizing NNI: done in 20.9034 secs using 982.6% CPU
Optimizing NNI: done in 30.0822 secs using 984.3% CPU
Optimizing NNI: done in 26.7326 secs using 983.6% CPU
Iteration 360 / LogL: -13232.754 / Time: 2h:48m:33s (0h:21m:35s left)
Optimizing NNI: done in 20.4716 secs using 984% CPU
Optimizing NNI: done in 33.9702 secs using 979% CPU
Optimizing NNI: done in 27.3735 secs using 974.7% CPU
Optimizing NNI: done in 39.1342 secs using 980% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 364: -13219.101
Optimizing NNI: done in 28.7192 secs using 979.4% CPU
Optimizing NNI: done in 27.0247 secs using 979.5% CPU
Optimizing NNI: done in 25.2418 secs using 978.4% CPU
Optimizing NNI: done in 23.8613 secs using 979.7% CPU
Optimizing NNI: done in 26.6662 secs using 976.7% CPU
Optimizing NNI: done in 21.1976 secs using 981.7% CPU
Iteration 370 / LogL: -13222.251 / Time: 2h:53m:11s (0h:44m:7s left)
Optimizing NNI: done in 21.4614 secs using 982.5% CPU
Optimizing NNI: done in 22.0445 secs using 979.8% CPU
Optimizing NNI: done in 32.4854 secs using 978.3% CPU
Optimizing NNI: done in 23.7179 secs using 980.9% CPU
Optimizing NNI: done in 22.1788 secs using 983.6% CPU
Optimizing NNI: done in 22.28 secs using 980.6% CPU
Optimizing NNI: done in 22.5183 secs using 979.7% CPU
Optimizing NNI: done in 31.9286 secs using 976.1% CPU
Optimizing NNI: done in 20.6515 secs using 980.9% CPU
Optimizing NNI: done in 22.3778 secs using 980.1% CPU
Iteration 380 / LogL: -13220.958 / Time: 2h:57m:16s (0h:39m:17s left)
Optimizing NNI: done in 24.8847 secs using 985.2% CPU
Optimizing NNI: done in 27.2819 secs using 980.7% CPU
Optimizing NNI: done in 21.7102 secs using 979.3% CPU
Optimizing NNI: done in 20.4291 secs using 983.5% CPU
Optimizing NNI: done in 18.4184 secs using 982.9% CPU
Optimizing NNI: done in 24.9896 secs using 983.8% CPU
Optimizing NNI: done in 22.6165 secs using 982.5% CPU
Optimizing NNI: done in 20.4516 secs using 982.1% CPU
Optimizing NNI: done in 25.5376 secs using 984.3% CPU
Optimizing NNI: done in 22.7956 secs using 979.4% CPU
Iteration 390 / LogL: -13228.739 / Time: 3h:1m:8s (0h:34m:27s left)
Optimizing NNI: done in 15.8564 secs using 983.6% CPU
Optimizing NNI: done in 21.5251 secs using 983.2% CPU
Optimizing NNI: done in 20.718 secs using 982.2% CPU
Optimizing NNI: done in 15.7433 secs using 983.1% CPU
Optimizing NNI: done in 21.1676 secs using 982.4% CPU
Optimizing NNI: done in 18.962 secs using 982.7% CPU
Optimizing NNI: done in 19.4028 secs using 982.6% CPU
Optimizing NNI: done in 27.9291 secs using 983.2% CPU
Optimizing NNI: done in 21.8724 secs using 981.8% CPU
Optimizing NNI: done in 18.9594 secs using 982.2% CPU
Iteration 400 / LogL: -13223.439 / Time: 3h:4m:32s (0h:29m:36s left)
Log-likelihood cutoff on original alignment: -13337.628
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.964
NOTE: UFBoot does not converge, continue at least 100 more iterations
UFBoot trees printed to iqtree_gene_trees/COG2924.ufboot
Optimizing NNI: done in 19.9759 secs using 982.6% CPU
Optimizing NNI: done in 21.9168 secs using 982.5% CPU
Optimizing NNI: done in 19.8953 secs using 982.1% CPU
Optimizing NNI: done in 18.3984 secs using 981.7% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 404: -13219.024
Optimizing NNI: done in 22.4409 secs using 985.3% CPU
Optimizing NNI: done in 18.0208 secs using 985.8% CPU
Optimizing NNI: done in 20.2937 secs using 985.2% CPU
Optimizing NNI: done in 21.7315 secs using 986.3% CPU
Optimizing NNI: done in 19.9802 secs using 985.3% CPU
Optimizing NNI: done in 26.5292 secs using 973.3% CPU
Iteration 410 / LogL: -13236.108 / Time: 3h:8m:7s (0h:43m:14s left)
Optimizing NNI: done in 20.4145 secs using 983.3% CPU
Optimizing NNI: done in 20.2515 secs using 984.9% CPU
Optimizing NNI: done in 18.2138 secs using 984.2% CPU
Optimizing NNI: done in 22.7405 secs using 985.7% CPU
Optimizing NNI: done in 25.0682 secs using 984.3% CPU
Optimizing NNI: done in 19.4569 secs using 985.4% CPU
Optimizing NNI: done in 22.0013 secs using 984.1% CPU
Optimizing NNI: done in 22.323 secs using 983.6% CPU
Optimizing NNI: done in 21.0627 secs using 984.4% CPU
Optimizing NNI: done in 25.9768 secs using 979.6% CPU
Iteration 420 / LogL: -13229.516 / Time: 3h:11m:48s (0h:38m:27s left)
Optimizing NNI: done in 21.799 secs using 977% CPU
Optimizing NNI: done in 23.1014 secs using 984.2% CPU
Optimizing NNI: done in 26.2297 secs using 982.4% CPU
Optimizing NNI: done in 32.4115 secs using 979.4% CPU
Optimizing NNI: done in 26.017 secs using 976.6% CPU
Optimizing NNI: done in 35.1853 secs using 975.4% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 426: -13218.523
Optimizing NNI: done in 29.8969 secs using 982.4% CPU
Optimizing NNI: done in 30.8806 secs using 981.8% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 428: -13218.350
Optimizing NNI: done in 23.1599 secs using 982.7% CPU
Optimizing NNI: done in 22.0113 secs using 983.6% CPU
Iteration 430 / LogL: -13263.236 / Time: 3h:16m:27s (0h:44m:52s left)
Optimizing NNI: done in 25.8875 secs using 985.6% CPU
Optimizing NNI: done in 32.3268 secs using 984.6% CPU
Optimizing NNI: done in 23.0091 secs using 977% CPU
Optimizing NNI: done in 28.022 secs using 975.7% CPU
Optimizing NNI: done in 23.7844 secs using 977.7% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 435: -13216.265
Optimizing NNI: done in 29.3583 secs using 976.7% CPU
Optimizing NNI: done in 22.0005 secs using 978.3% CPU
Optimizing NNI: done in 23.3428 secs using 981.4% CPU
Optimizing NNI: done in 23.6749 secs using 983.8% CPU
Optimizing NNI: done in 28.7089 secs using 977.5% CPU
Iteration 440 / LogL: -13218.814 / Time: 3h:20m:53s (0h:43m:28s left)
Optimizing NNI: done in 26.6273 secs using 973.1% CPU
Optimizing NNI: done in 30.5006 secs using 980% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 442: -13215.935
Optimizing NNI: done in 20.1012 secs using 980.4% CPU
Optimizing NNI: done in 22.728 secs using 981.2% CPU
Optimizing NNI: done in 19.2695 secs using 980% CPU
Optimizing NNI: done in 22.3383 secs using 979% CPU
Optimizing NNI: done in 16.819 secs using 980.5% CPU
Optimizing NNI: done in 19.7625 secs using 983% CPU
Optimizing NNI: done in 26.9103 secs using 979.8% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 449: -13214.661
Optimizing NNI: done in 17.5146 secs using 982.5% CPU
Iteration 450 / LogL: -13222.728 / Time: 3h:24m:43s (0h:45m:8s left)
Log-likelihood cutoff on original alignment: -13327.314
UFBoot trees printed to iqtree_gene_trees/COG2924.ufboot
Optimizing NNI: done in 26.1563 secs using 979.4% CPU
Optimizing NNI: done in 21.7828 secs using 980.5% CPU
Optimizing NNI: done in 27.8307 secs using 981.1% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 453: -13210.840
Optimizing NNI: done in 23.2368 secs using 982.3% CPU
Optimizing NNI: done in 25.3301 secs using 982.9% CPU
Optimizing NNI: done in 18.4904 secs using 980.8% CPU
Optimizing NNI: done in 26.0695 secs using 980.8% CPU
Optimizing NNI: done in 18.5551 secs using 982.4% CPU
Optimizing NNI: done in 24.0548 secs using 981.6% CPU
Optimizing NNI: done in 23.4929 secs using 982% CPU
Iteration 460 / LogL: -13223.279 / Time: 3h:28m:45s (0h:42m:17s left)
Optimizing NNI: done in 20.5671 secs using 982.8% CPU
Optimizing NNI: done in 26.4606 secs using 979.7% CPU
Optimizing NNI: done in 20.8353 secs using 982.3% CPU
Optimizing NNI: done in 25.8483 secs using 977.5% CPU
Optimizing NNI: done in 22.5635 secs using 976% CPU
Optimizing NNI: done in 21.2385 secs using 982% CPU
Optimizing NNI: done in 23.9943 secs using 981.4% CPU
Optimizing NNI: done in 22.7745 secs using 981.9% CPU
Optimizing NNI: done in 19.5547 secs using 982.9% CPU
Optimizing NNI: done in 31.6491 secs using 978.3% CPU
Iteration 470 / LogL: -13225.984 / Time: 3h:32m:43s (0h:37m:38s left)
Optimizing NNI: done in 23.8043 secs using 976.1% CPU
Optimizing NNI: done in 30.5514 secs using 981% CPU
Optimizing NNI: done in 33.2922 secs using 976.6% CPU
Optimizing NNI: done in 24.2185 secs using 981.5% CPU
Optimizing NNI: done in 28.7958 secs using 978.2% CPU
Optimizing NNI: done in 23.364 secs using 982.2% CPU
Optimizing NNI: done in 29.1914 secs using 981.5% CPU
Optimizing NNI: done in 24.1528 secs using 979.7% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 478: -13210.734
Optimizing NNI: done in 24.8495 secs using 982.7% CPU
Optimizing NNI: done in 30.0173 secs using 979.3% CPU
Iteration 480 / LogL: -13215.772 / Time: 3h:37m:21s (0h:44m:28s left)
Optimizing NNI: done in 26.2843 secs using 982.2% CPU
Optimizing NNI: done in 32.143 secs using 978.9% CPU
Optimizing NNI: done in 22.0682 secs using 977.5% CPU
Optimizing NNI: done in 33.2746 secs using 972.7% CPU
Optimizing NNI: done in 18.8063 secs using 981% CPU
Optimizing NNI: done in 30.424 secs using 974.7% CPU
Optimizing NNI: done in 22.1847 secs using 978.7% CPU
Optimizing NNI: done in 28.4752 secs using 979% CPU
Optimizing NNI: done in 24.309 secs using 980.5% CPU
Optimizing NNI: done in 36.1597 secs using 975.9% CPU
Iteration 490 / LogL: -13220.681 / Time: 3h:41m:58s (0h:39m:56s left)
Optimizing NNI: done in 31.3879 secs using 971.6% CPU
Optimizing NNI: done in 19.9306 secs using 980.6% CPU
Optimizing NNI: done in 29.3303 secs using 977.1% CPU
