IQ-TREE multicore version 2.2.0.3 COVID-edition for Linux 64-bit built Aug  2 2022
Developed by Bui Quang Minh, James Barbetti, Nguyen Lam Tung,
Olga Chernomor, Heiko Schmidt, Dominik Schrempf, Michael Woodhams, Ly Trong Nhan.

Host:    baross.its.carleton.edu (AVX2, FMA3, 755 GB RAM)
Command: iqtree -s gene_alignments/trimv2_COG2847.afa -m MFP -bb 1000 -wbtl -ntmax 10 -nt AUTO -T 10 --prefix iqtree_gene_trees/COG2847 -madd C10,C20,C30,C40,C50,C60,EX2,EX3,EHO,UL2,UL3,EX_EHO,LG4M,LG4X,CF4,LG+C10,LG+C20,LG+C30,LG+C40,LG+C50,LG+C60 -mrate E,I,G,I+G,R
Seed:    751871 (Using SPRNG - Scalable Parallel Random Number Generator)
Time:    Sat Apr  8 03:15:20 2023
Kernel:  AVX+FMA - 10 threads (96 CPU cores detected)

Reading alignment file gene_alignments/trimv2_COG2847.afa ... Fasta format detected
Reading fasta file: done in 0.00126486 secs using 76.13% CPU
Alignment most likely contains protein sequences
Constructing alignment: done in 0.0018704 secs using 967.5% CPU
Alignment has 132 sequences with 171 columns, 171 distinct patterns
168 parsimony-informative, 3 singleton sites, 0 constant sites
                                                                  Gap/Ambiguity  Composition  p-value
Analyzing sequences: done in 0.000138303 secs using 923.3% CPU
   1  GCF.000300295.4.Bacteria.Proteobacteria_WP_017377116.1             16.37%    failed      0.00%
   2  GCA.002386945.1.Bacteria.Proteobacteria_DGKH01000056.1_7           16.37%    passed     66.42%
   3  GCA.002007405.1.Bacteria.Proteobacteria_JYIN01000011.1_10           9.36%    failed      0.61%
   4  GCF.001641825.1.Bacteria.Proteobacteria_NZ_LRFH01000004.1_105       6.43%    passed     71.91%
   5  GCA.003280605.1.Bacteria.Proteobacteria_QCEM01000001.1_92           4.09%    passed     51.05%
   6  GCA.002730875.1.Bacteria.Spirochaetota_PCBI01000018.1_151          12.87%    passed     29.43%
   7  GCF.000757605.1.Bacteria.Proteobacteria_NZ_JQAK01000001.1_1435     12.87%    passed     48.51%
   8  GCA.003454665.1.Bacteria.Nitrospirota_DMKB01000176.1_5              8.77%    passed      5.75%
   9  GCF.900172325.1.Bacteria.Proteobacteria_NZ_FWFR01000001.1_1063      4.68%    passed     93.09%
  10  GCA.002746235.1.Bacteria.Planctomycetota_NVWJ01000005.1_101        14.62%    passed     45.35%
  11  GCF.000969705.1.Bacteria.Actinobacteriota_NZ_KQ033901.1_2177       15.20%    failed      0.00%
  12  GCF.000487995.1.Bacteria.Deferribacterota_NZ_KI530573.1_787        17.54%    failed      0.00%
  13  GCF.000300295.4.Bacteria.Proteobacteria_WP_017376676.1             12.87%    failed      1.24%
  14  GCF.900111015.1.Bacteria.Proteobacteria_NZ_FOFS01000002.1_162      11.11%    failed      3.09%
  15  GCF.000374645.1.Bacteria.Proteobacteria_NZ_KB894800.1_91           13.45%    passed     24.50%
  16  GCA.002841945.1.Bacteria.Myxococcota_PHBI01000204.1_4               8.77%    failed      0.98%
  17  GCA.002702065.1.Bacteria.Chloroflexota_NZXX01000002.1_797          15.79%    failed      4.17%
  18  GCA.002747435.1.Bacteria.Proteobacteria_PDPH01000048.1_63          11.70%    passed     26.93%
  19  GCA.002352565.1.Bacteria.Proteobacteria_DEIQ01000127.1_20           9.94%    failed      0.59%
  20  GCA.003454415.1.Bacteria.Proteobacteria_DMKG01000238.1_5            6.43%    passed      7.79%
  21  GCA.001447805.1.Bacteria.Proteobacteria_CP013099.1_2670             7.60%    passed     41.51%
  22  GCA.001735895.1.Bacteria.Proteobacteria_DS021200.1_45               8.19%    passed     91.96%
  23  GCA.002255365.1.Bacteria.Proteobacteria_NCBI01000001.1_27          18.13%    failed      4.47%
  24  GCA.001735895.1.Bacteria.Proteobacteria_DS021202.1_109             20.47%    passed     40.38%
  25  GCA.002340345.1.Bacteria.Proteobacteria_DDLW01000042.1_7            9.36%    passed     37.37%
  26  GCF.000284615.1.Bacteria.Proteobacteria_NC_017067.1_990             3.51%    passed     63.20%
  27  GCA.002898675.1.Bacteria.Bacteroidota_BEHW01000098.1_4             18.71%    passed      8.79%
  28  GCA.002450905.1.Bacteria.Spirochaetota_DKAT01000045.1_16            9.94%    failed      0.00%
  29  GCA.003242195.1.Bacteria.Firmicutes.E_QGUQ01000268.1_3             10.53%    passed     10.64%
  30  GCA.002292925.1.Bacteria.Chloroflexota_DBCF01000014.1_4            15.20%    passed     13.37%
  31  GCA.002727195.1.Bacteria.Latescibacterota_PBWH01000014.1_107       16.96%    passed     84.49%
  32  GCA.002937675.1.Bacteria.Proteobacteria_PTKJ01000002.1_33           6.43%    failed      0.00%
  33  GCA.002721365.1.Bacteria.Proteobacteria_PBKC01000054.1_4            4.68%    passed     38.87%
  34  GCA.002841995.1.Bacteria.Chloroflexota_PHBS01000082.1_15           15.79%    failed      0.30%
  35  GCF.003173035.1.Bacteria.Proteobacteria_NZ_QGLE01000004.1_269       2.92%    passed     30.22%
  36  GCA.003136555.1.Bacteria.Planctomycetota_PLEW01000178.1_11          4.68%    failed      2.15%
  37  GCF.002798435.1.Bacteria.Proteobacteria_WP_109793968.1             12.87%    passed     45.25%
  38  GCA.002457765.1.Bacteria.Proteobacteria_NTKW01000030.1_10           3.51%    passed     60.97%
  39  GCF.000021565.1.Bacteria.Aquificota_NC_012440.1_1238               18.13%    failed      0.02%
  40  GCF.900066015.1.Bacteria.Chloroflexota_NZ_LN890655.1_1668           7.60%    failed      3.46%
  41  GCA.002868855.1.Bacteria.Proteobacteria_PKUM01000077.1_12          18.71%    passed     47.05%
  42  GCA.002841995.1.Bacteria.Chloroflexota_PHBS01000221.1_2            15.79%    failed      0.61%
  43  GCA.002170535.1.Bacteria.Proteobacteria_NHDW01000001.1_63          16.96%    failed      0.01%
  44  GCF.000264455.2.Bacteria.Proteobacteria_NC_017959.1_12              2.34%    passed     69.53%
  45  GCF.900187885.1.Bacteria.Chloroflexota_NZ_FYEK01000044.1_229       12.87%    passed     23.78%
  46  GCA.002701885.1.Bacteria.Proteobacteria_NZXH01000048.1_3            9.94%    failed      0.00%
  47  GCF.000025005.1.Bacteria.Chloroflexota_NC_013525.1_512             15.79%    passed     80.78%
  48  GCA.001464215.1.Bacteria.Proteobacteria_LNEZ01000058.1_40           5.26%    passed     89.11%
  49  GCA.002702065.1.Bacteria.Chloroflexota_NZXX01000002.1_347          14.04%    passed     52.56%
  50  GCF.002940605.1.Bacteria.Proteobacteria_WP_128420269.1             12.28%    failed      1.09%
  51  GCF.003443735.1.Bacteria.Actinobacteriota_NZ_CP031969.1_4079       12.28%    passed     17.96%
  52  GCA.002238885.1.Bacteria.Proteobacteria_MPNF01000316.1_2           11.70%    passed     35.18%
  53  GCA.001897475.1.Bacteria.Proteobacteria_MKSY01000026.1_113          8.19%    failed      1.31%
  54  GCF.900106035.1.Bacteria.Actinobacteriota_NZ_FNUC01000004.1_1691   15.79%    failed      0.84%
  55  GCA.002728355.1.Bacteria.Proteobacteria_PBXG01000019.1_2            4.68%    passed     20.89%
  56  GCF.002020875.1.Bacteria.Proteobacteria_WP_078482140.1              4.09%    passed     25.68%
  57  GCA.002689455.1.Bacteria.Proteobacteria_NZGE01000057.1_23          11.70%    passed     32.26%
  58  GCA.003244045.1.Bacteria.Dormibacterota_QHBU01000200.1_5           16.37%    failed      0.94%
  59  GCF.000315795.1.Bacteria.Proteobacteria_NZ_ANHY01000004.1_51        4.09%    passed     39.82%
  60  GCA.002292285.1.Bacteria.Proteobacteria_DBBP01000002.1_89          15.79%    passed     22.64%
  61  GCA.002420425.1.Bacteria.Proteobacteria_DIIC01000025.1_14           9.36%    passed     78.24%
  62  GCF.000969705.1.Bacteria.Actinobacteriota_NZ_KQ033901.1_2697       12.28%    failed      0.02%
  63  GCF.900111015.1.Bacteria.Proteobacteria_NZ_FOFS01000005.1_89       11.70%    passed     39.32%
  64  GCF.006980715.1.Bacteria.Proteobacteria_NZ_SBHN01000006.1_212       2.92%    passed     74.83%
  65  GCF.001613805.1.Bacteria.Proteobacteria_NZ_LPVY01000010.1_2         5.26%    passed     18.54%
  66  GCA.001750645.1.Bacteria.Proteobacteria_MEIF01000041.1_15           9.94%    passed     35.52%
  67  GCA.002280485.1.Bacteria.Proteobacteria_NCED01000007.1_18           9.36%    failed      0.35%
  68  GCA.002686135.1.Bacteria.Proteobacteria_NZAO01000044.1_13           5.26%    passed      5.39%
  69  GCA.002693325.1.Bacteria.Latescibacterota_NZPK01000088.1_11        14.04%    passed     31.55%
  70  GCF.000969705.1.Bacteria.Actinobacteriota_NZ_KQ033901.1_2178       11.11%    failed      0.23%
  71  GCF.002148795.1.Bacteria.Proteobacteria_NZ_MPOB01000018.1_13        8.19%    passed     97.46%
  72  GCA.003158585.1.Bacteria.Proteobacteria_PMKE01000064.1_53          14.04%    failed      0.41%
  73  GCF.002795805.1.Bacteria.Proteobacteria_NZ_CP018799.1_2032          9.36%    failed      2.10%
  74  GCA.002841995.1.Bacteria.Chloroflexota_PHBS01000221.1_4            14.62%    passed     66.36%
  75  GCA.001767695.1.Bacteria.Actinobacteriota_MELR01000002.1_25        14.62%    passed     25.00%
  76  GCA.003247575.1.Bacteria.Myxococcota.A_QJZC01000047.1_7            12.28%    failed      0.16%
  77  GCF.003258945.1.Bacteria.Proteobacteria_NZ_QLIX01000004.1_65       10.53%    failed      0.17%
  78  GCA.003451595.1.Bacteria.Chloroflexota_DMDA01000051.1_24            4.09%    passed     69.41%
  79  GCA.002348425.1.Bacteria.Proteobacteria_DEBE01000199.1_5            4.09%    failed      0.00%
  80  GCA.002480495.1.Bacteria.Proteobacteria_DLCG01000004.1_361         10.53%    passed     65.17%
  81  GCA.003451595.1.Bacteria.Chloroflexota_DMDA01000011.1_40           12.28%    passed     18.16%
  82  GCA.002500565.1.Bacteria.Proteobacteria_DLRV01000020.1_38          14.62%    failed      3.98%
  83  GCF.000266885.1.Bacteria.Spirochaetota_NC_018020.1_673             16.37%    passed     58.29%
  84  GCF.900112605.1.Bacteria.Proteobacteria_NZ_FOMJ01000001.1_627       9.94%    passed     16.62%
  85  GCF.001306175.1.Bacteria.Chloroflexota_NZ_LGKN01000004.1_47        14.62%    passed     17.82%
  86  GCA.002405475.1.Bacteria.Proteobacteria_DHLX01000018.1_290          7.60%    passed      5.39%
  87  GCA.002338605.1.Bacteria.Proteobacteria_DDIP01000038.1_6           18.71%    passed     37.99%
  88  GCA.002898275.1.Bacteria.Proteobacteria_BEIQ01000001.1_372          3.51%    failed      0.46%
  89  GCF.000021985.1.Bacteria.Proteobacteria_NC_011901.1_1946            5.26%    passed     32.82%
  90  GCA.002840095.1.Bacteria.Proteobacteria_PGZL01000014.1_15           8.77%    passed     30.57%
  91  GCF.002251795.1.Bacteria.Proteobacteria_NZ_NOXU01000015.1_55        7.60%    passed     41.79%
  92  GCA.002722885.1.Bacteria.Proteobacteria_PBNE01000006.1_190          2.92%    passed     12.55%
  93  GCA.002731375.1.Bacteria.Proteobacteria_PCBT01000012.1_91           4.09%    failed      3.14%
  94  GCF.003052605.1.Bacteria.Proteobacteria_NZ_QASO01000085.1_12        5.26%    passed     16.43%
  95  GCA.002401295.1.Bacteria.SAR324_NVSR01000050.1_6                    4.68%    passed     10.59%
  96  GCA.002898275.1.Bacteria.Proteobacteria_BEIQ01000002.1_36           8.77%    failed      1.47%
  97  GCF.000239355.1.Bacteria.Proteobacteria_WP_006986678.1              9.94%    failed      0.00%
  98  GCA.006969625.1.Bacteria.Proteobacteria_CP030885.1_3113             8.77%    passed     30.61%
  99  GCF.000192575.1.Bacteria.Proteobacteria_NZ_GL876926.1_555           9.36%    passed     65.56%
 100  GCA.002348365.1.Bacteria.Proteobacteria_DEBC01000003.1_12           4.68%    passed     63.39%
 101  GCA.002280485.1.Bacteria.Proteobacteria_NCED01000056.1_4            7.60%    failed      2.17%
 102  GCA.002352645.1.Bacteria.Actinobacteriota_DEIU01000063.1_14        14.04%    passed     29.18%
 103  GCA.002291925.1.Bacteria.Proteobacteria_DBAY01000007.1_5            5.26%    passed     14.02%
 104  GCA.006969625.1.Bacteria.Proteobacteria_CP030885.1_3730             8.19%    passed     12.69%
 105  GCF.006980715.1.Bacteria.Proteobacteria_NZ_SBHN01000003.1_240       4.68%    passed     25.25%
 106  GCA.001898705.1.Bacteria.Proteobacteria_MKUU01000044.1_169         12.28%    failed      0.38%
 107  GCA.001447805.1.Bacteria.Proteobacteria_CP013099.1_2281             8.19%    passed     96.11%
 108  GCA.002712165.1.Bacteria.Proteobacteria_PASS01000046.1_4            7.02%    passed     75.42%
 109  GCA.002440805.1.Bacteria.Chloroflexota_DJVD01000292.1_13            4.68%    passed     56.89%
 110  GCA.002717185.1.Bacteria.Proteobacteria_PBDC01000078.1_42           4.68%    passed     16.23%
 111  GCF.002109495.1.Bacteria.Proteobacteria_NZ_LVJN01000020.1_345       3.51%    passed     15.13%
 112  GCF.900102465.1.Bacteria.Proteobacteria_NZ_FNBW01000024.1_13       10.53%    passed     70.55%
 113  GCF.900106035.1.Bacteria.Actinobacteriota_NZ_FNUC01000003.1_1844    8.77%    failed      2.80%
 114  GCA.002728755.1.Bacteria.Myxococcota_PBVT01000126.1_2              12.87%    passed     44.24%
 115  GCA.002787535.1.Bacteria.Bdellovibrionota_PCXB01000030.1_14        12.28%    failed      2.11%
 116  GCA.002746645.1.Bacteria.Proteobacteria_PDPU01000028.1_63           5.85%    passed     50.22%
 117  GCA.003235715.1.Bacteria.Nitrospirota_QJVM01000026.1_9             11.70%    passed      8.40%
 118  GCF.001614315.2.Bacteria.Proteobacteria_NZ_LVEG02000001.1_613       7.02%    passed     33.33%
 119  GCF.002148795.1.Bacteria.Proteobacteria_NZ_MPOB01000001.1_377       5.85%    passed     70.20%
 120  GCF.001399755.1.Bacteria.Proteobacteria_NZ_LJCP01000014.1_59       12.28%    failed      3.96%
 121  GCF.002798435.1.Bacteria.Proteobacteria_WP_164516497.1             15.20%    passed     56.60%
 122  GCA.003228965.1.Bacteria.Proteobacteria_QIGP01000324.1_6           17.54%    passed      8.86%
 123  GCA.002709155.1.Bacteria.Proteobacteria_PAQA01000002.1_14           8.77%    failed      0.02%
 124  GCF.001051235.1.Bacteria.Proteobacteria_NZ_CBTJ020000020.1_199      8.77%    passed     46.43%
 125  GCA.002721365.1.Bacteria.Proteobacteria_PBKC01000043.1_50          14.04%    passed     87.33%
 126  GCF.900167455.1.Bacteria.Proteobacteria_NZ_FUWJ01000005.1_275       9.36%    passed     70.01%
 127  GCA.002717225.1.Bacteria.Proteobacteria_PBDG01000034.1_2            5.26%    passed     74.50%
 128  GCA.002159155.1.Bacteria.Firmicutes.G_LZRQ01000046.1_5              4.09%    passed     25.57%
 129  GCA.002840095.1.Bacteria.Proteobacteria_PGZL01000007.1_319         15.79%    passed     92.90%
 130  GCA.002389045.1.Bacteria.Proteobacteria_DGNS01000009.1_26          11.11%    passed     35.25%
 131  GCF.900177345.1.Bacteria.Proteobacteria_NZ_FWZT01000033.1_13       19.30%    failed      3.93%
 132  GCF.900142435.1.Bacteria.Aquificota_NZ_LT670846.1_9                16.37%    failed      0.64%
****  TOTAL                                                              10.28%  44 sequences failed composition chi2 test (p-value<5%; df=19)
Checking for duplicate sequences: done in 0.00173899 secs using 860.8% CPU


Create initial parsimony tree by phylogenetic likelihood library (PLL)... 0.064 seconds
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
Perform fast likelihood tree search using LG+G model...
Estimate model parameters (epsilon = 5.000)
Perform nearest neighbor interchange...
Optimizing NNI: done in 3.30774 secs using 994.4% CPU
Estimate model parameters (epsilon = 1.000)
1. Initial log-likelihood: -41884.421
2. Current log-likelihood: -41883.301
Optimal log-likelihood: -41883.192
Gamma shape alpha: 1.089
Parameters optimization took 2 rounds (0.285 sec)
Time for fast ML tree search: 4.178 seconds

NOTE: ModelFinder requires 39 MB RAM!
ModelFinder will test up to 749 protein models (sample size: 171) ...
 No. Model         -LnL         df  AIC          AICc         BIC
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  1  LG            43521.469    261 87564.938    224328.938   88384.912
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  2  LG+I          43521.462    262 87566.924    225378.924   88390.040
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  3  LG+G4         41883.188    262 84290.375    222102.375   85113.491
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  4  LG+I+G4       41883.188    263 84292.375    223156.375   85118.633
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  5  LG+R2         42258.122    263 85042.244    223906.244   85868.502
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  6  LG+R3         41981.782    265 84493.565    225473.565   85326.106
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  7  LG+R4         41825.046    267 84184.092    227296.092   85022.916
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  8  LG+R5         41798.791    269 84135.582    229395.582   84980.689
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  9  LG+R6         41783.888    271 84109.776    231533.776   84961.167
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 10  LG+R7         41778.358    273 84102.716    233706.716   84960.390
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 11  LG+R8         41766.324    275 84082.647    235882.647   84946.605
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 12  LG+R9         41765.172    277 84084.343    238096.343   84954.584
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 14  LG+F          43421.456    280 87402.912    244762.912   88282.578
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 15  LG+F+I        43421.448    281 87404.895    245888.895   88287.703
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 16  LG+F+G4       41777.821    281 84117.643    242601.643   85000.450
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 17  LG+F+I+G4     41777.823    282 84119.645    243731.645   85005.594
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 18  LG+F+R2       42126.065    282 84816.130    244428.130   85702.079
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 19  LG+F+R3       41886.594    284 84341.187    246221.187   85233.420
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 20  LG+F+R4       41721.958    286 84015.917    248179.917   84914.433
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 21  LG+F+R5       41697.529    288 83971.058    250435.058   84875.857
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 22  LG+F+R6       41683.169    290 83946.337    252726.337   84857.420
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 23  LG+F+R7       41679.112    292 83942.225    255054.225   84859.590
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 27  WAG           43157.103    261 86836.207    223600.207   87656.181
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 28  WAG+I         43157.100    262 86838.199    224650.199   87661.315
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 29  WAG+G4        41884.839    262 84293.678    222105.678   85116.793
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 30  WAG+I+G4      41884.845    263 84295.691    223159.691   85121.948
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 31  WAG+R2        42210.834    263 84947.668    223811.668   85773.925
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 32  WAG+R3        41928.048    265 84386.097    225366.097   85218.638
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 33  WAG+R4        41826.327    267 84186.655    227298.655   85025.479
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 34  WAG+R5        41787.123    269 84112.246    229372.246   84957.354
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 35  WAG+R6        41775.188    271 84092.376    231516.376   84943.767
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 36  WAG+R7        41765.466    273 84076.931    233680.931   84934.605
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 37  WAG+R8        41759.759    275 84069.518    235869.518   84933.475
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
WARNING: Log-likelihood -41761.4 of WAG+R9 worse than WAG+R8 -41759.8
 38  WAG+R9        41761.359    277 84076.717    238088.717   84946.958
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 40  WAG+F         43150.405    280 86860.810    244220.810   87740.475
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 41  WAG+F+I       43150.400    281 86862.800    245346.800   87745.608
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 42  WAG+F+G4      41844.593    281 84251.185    242735.185   85133.993
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 43  WAG+F+I+G4    41844.566    282 84253.132    243865.132   85139.081
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 44  WAG+F+R2      42166.170    282 84896.339    244508.339   85782.288
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 45  WAG+F+R3      41907.583    284 84383.165    246263.165   85275.398
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 46  WAG+F+R4      41789.868    286 84151.736    248315.736   85050.252
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 47  WAG+F+R5      41755.496    288 84086.993    250550.993   84991.792
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 48  WAG+F+R6      41737.282    290 84054.564    252834.564   84965.646
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 49  WAG+F+R7      41729.485    292 84042.969    255154.969   84960.335
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 50  WAG+F+R8      41723.836    294 84035.671    257495.671   84959.321
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
WARNING: Log-likelihood -41725.6 of WAG+F+R9 worse than WAG+F+R8 -41723.8
 51  WAG+F+R9      41725.571    296 84043.143    259867.143   84973.075
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 53  JTT           43708.192    261 87938.383    224702.383   88758.357
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 54  JTT+I         43708.159    262 87940.319    225752.319   88763.434
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 55  JTT+G4        42239.879    262 85003.757    222815.757   85826.873
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 56  JTT+I+G4      42239.879    263 85005.757    223869.757   85832.015
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 57  JTT+R2        42581.110    263 85688.221    224552.221   86514.478
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 58  JTT+R3        42325.021    265 85180.043    226160.043   86012.584
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 59  JTT+R4        42186.455    267 84906.910    228018.910   85745.734
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 60  JTT+R5        42158.486    269 84854.972    230114.972   85700.079
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 61  JTT+R6        42145.320    271 84832.640    232256.640   85684.031
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 62  JTT+R7        42140.998    273 84827.996    234431.996   85685.670
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 66  JTT+F         43811.077    280 88182.155    245542.155   89061.820
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 67  JTT+F+I       43811.041    281 88184.082    246668.082   89066.889
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 68  JTT+F+G4      42268.776    281 85099.553    243583.553   85982.360
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 69  JTT+F+I+G4    42268.779    282 85101.558    244713.558   85987.508
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 70  JTT+F+R2      42610.604    282 85785.208    245397.208   86671.158
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 71  JTT+F+R3      42366.053    284 85300.105    247180.105   86192.338
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 72  JTT+F+R4      42223.593    286 85019.186    249183.186   85917.702
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 73  JTT+F+R5      42191.986    288 84959.972    251423.972   85864.771
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 74  JTT+F+R6      42182.664    290 84945.328    253725.328   85856.410
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 75  JTT+F+R7      42175.095    292 84934.189    256046.189   85851.555
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 76  JTT+F+R8      42164.775    294 84917.551    258377.551   85841.200
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
WARNING: Log-likelihood -42166 of JTT+F+R9 worse than JTT+F+R8 -42164.8
 77  JTT+F+R9      42166.050    296 84924.100    260748.100   85854.032
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 79  Q.pfam        43434.057    261 87390.114    224154.114   88210.089
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 80  Q.pfam+I      43434.043    262 87392.086    225204.086   88215.202
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 81  Q.pfam+G4     41800.851    262 84125.702    221937.702   84948.818
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 82  Q.pfam+I+G4   41800.850    263 84127.701    222991.701   84953.959
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 83  Q.pfam+R2     42158.018    263 84842.036    223706.036   85668.293
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 84  Q.pfam+R3     41886.074    265 84302.149    225282.149   85134.689
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 85  Q.pfam+R4     41727.153    267 83988.306    227100.306   84827.131
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 86  Q.pfam+R5     41704.615    269 83947.230    229207.230   84792.337
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 87  Q.pfam+R6     41685.778    271 83913.556    231337.556   84764.947
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 88  Q.pfam+R7     41679.745    273 83905.489    233509.489   84763.164
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 89  Q.pfam+R8     41675.961    275 83901.922    235701.922   84765.880
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 92  Q.pfam+F      43417.802    280 87395.604    244755.604   88275.270
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 93  Q.pfam+F+I    43417.796    281 87397.592    245881.592   88280.399
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 94  Q.pfam+F+G4   41766.107    281 84094.213    242578.213   84977.021
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 95  Q.pfam+F+I+G4 41766.107    282 84096.214    243708.214   84982.163
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 96  Q.pfam+F+R2   42094.720    282 84753.441    244365.441   85639.390
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 97  Q.pfam+F+R3   41855.048    284 84278.095    246158.095   85170.328
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 98  Q.pfam+F+R4   41700.156    286 83972.311    248136.311   84870.827
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 99  Q.pfam+F+R5   41680.166    288 83936.331    250400.331   84841.130
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
100  Q.pfam+F+R6   41662.984    290 83905.969    252685.969   84817.051
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
101  Q.pfam+F+R7   41656.052    292 83896.104    255008.104   84813.470
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
102  Q.pfam+F+R8   41650.539    294 83889.079    257349.079   84812.728
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
103  Q.pfam+F+R9   41651.309    296 83894.619    259718.619   84824.551
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
105  Q.bird        44969.929    261 90461.857    227225.857   91281.832
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
106  Q.bird+I      44969.925    262 90463.849    228275.849   91286.965
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
107  Q.bird+G4     42933.622    262 86391.244    224203.244   87214.360
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
108  Q.bird+I+G4   42933.663    263 86393.326    225257.326   87219.583
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
109  Q.bird+R2     43388.447    263 87302.895    226166.895   88129.152
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
110  Q.bird+R3     43032.376    265 86594.753    227574.753   87427.294
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
111  Q.bird+R4     42877.614    267 86289.229    229401.229   87128.053
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
112  Q.bird+R5     42828.907    269 86195.815    231455.815   87040.922
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
113  Q.bird+R6     42807.488    271 86156.977    233580.977   87008.368
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
114  Q.bird+R7     42795.370    273 86136.740    235740.740   86994.414
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
115  Q.bird+R8     42785.148    275 86120.296    237920.296   86984.254
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
116  Q.bird+R9     42784.982    277 86123.963    240135.963   86994.204
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
118  Q.bird+F      45238.829    280 91037.659    248397.659   91917.324
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
119  Q.bird+F+I    45238.801    281 91039.601    249523.601   91922.409
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
120  Q.bird+F+G4   42991.294    281 86544.589    245028.589   87427.396
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
121  Q.bird+F+I+G4 42991.300    282 86546.600    246158.600   87432.549
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
122  Q.bird+F+R2   43420.068    282 87404.135    247016.135   88290.084
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
123  Q.bird+F+R3   43116.756    284 86801.512    248681.512   87693.744
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
124  Q.bird+F+R4   42947.253    286 86466.507    250630.507   87365.023
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
125  Q.bird+F+R5   42895.722    288 86367.443    252831.443   87272.242
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
126  Q.bird+F+R6   42882.694    290 86345.389    255125.389   87256.471
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
127  Q.bird+F+R7   42868.686    292 86321.372    257433.372   87238.738
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
128  Q.bird+F+R8   42860.725    294 86309.450    259769.450   87233.099
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
129  Q.bird+F+R9   42859.873    296 86311.745    262135.745   87241.678
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
131  Q.mammal      44649.195    261 89820.390    226584.390   90640.364
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
132  Q.mammal+I    44649.158    262 89822.316    227634.316   90645.432
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
133  Q.mammal+G4   42712.529    262 85949.058    223761.058   86772.173
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
134  Q.mammal+I+G4 42712.481    263 85950.962    224814.962   86777.220
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
135  Q.mammal+R2   43144.491    263 86814.981    225678.981   87641.239
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
136  Q.mammal+R3   42800.770    265 86131.541    227111.541   86964.081
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
137  Q.mammal+R4   42656.734    267 85847.467    228959.467   86686.291
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
138  Q.mammal+R5   42608.623    269 85755.247    231015.247   86600.354
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
139  Q.mammal+R6   42591.035    271 85724.071    233148.071   86575.462
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
140  Q.mammal+R7   42581.577    273 85709.154    235313.154   86566.828
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
141  Q.mammal+R8   42573.322    275 85696.644    237496.644   86560.601
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
142  Q.mammal+R9   42573.627    277 85701.254    239713.254   86571.495
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
144  Q.mammal+F    44869.520    280 90299.039    247659.039   91178.705
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
145  Q.mammal+F+I  44869.489    281 90300.979    248784.979   91183.786
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
146  Q.mammal+F+G4 42756.068    281 86074.136    244558.136   86956.944
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
147  Q.mammal+F+I+G4 42756.076    282 86076.153    245688.153   86962.102
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
148  Q.mammal+F+R2 43169.346    282 86902.691    246514.691   87788.640
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
149  Q.mammal+F+R3 42876.056    284 86320.112    248200.112   87212.344
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
150  Q.mammal+F+R4 42711.359    286 85994.718    250158.718   86893.234
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
151  Q.mammal+F+R5 42668.695    288 85913.390    252377.390   86818.189
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
152  Q.mammal+F+R6 42651.762    290 85883.523    254663.523   86794.606
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
153  Q.mammal+F+R7 42642.020    292 85868.041    256980.041   86785.407
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
154  Q.mammal+F+R8 42636.307    294 85860.614    259320.614   86784.263
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
155  Q.mammal+F+R9 42635.569    296 85863.137    261687.137   86793.070
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
157  Q.insect      44052.328    261 88626.656    225390.656   89446.630
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
158  Q.insect+I    44052.324    262 88628.647    226440.647   89451.763
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
159  Q.insect+G4   42303.457    262 85130.914    222942.914   85954.030
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
160  Q.insect+I+G4 42303.453    263 85132.906    223996.906   85959.164
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
161  Q.insect+R2   42699.499    263 85924.997    224788.997   86751.255
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
162  Q.insect+R3   42396.936    265 85323.871    226303.871   86156.412
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
163  Q.insect+R4   42247.539    267 85029.077    228141.077   85867.901
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
164  Q.insect+R5   42209.580    269 84957.161    230217.161   85802.268
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
165  Q.insect+R6   42188.405    271 84918.809    232342.809   85770.200
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
166  Q.insect+R7   42177.355    273 84900.709    234504.709   85758.384
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
167  Q.insect+R8   42170.497    275 84890.993    236690.993   85754.951
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
168  Q.insect+R9   42170.410    277 84894.820    238906.820   85765.061
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
170  Q.insect+F    43893.363    280 88346.726    245706.726   89226.392
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
171  Q.insect+F+I  43893.355    281 88348.709    246832.709   89231.517
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
172  Q.insect+F+G4 42131.944    281 84825.888    243309.888   85708.695
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
173  Q.insect+F+I+G4 42131.960    282 84827.920    244439.920   85713.869
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
174  Q.insect+F+R2 42490.511    282 85545.021    245157.021   86430.971
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
175  Q.insect+F+R3 42221.781    284 85011.562    246891.562   85903.794
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
176  Q.insect+F+R4 42085.152    286 84742.304    248906.304   85640.820
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
177  Q.insect+F+R5 42046.961    288 84669.922    251133.922   85574.721
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
178  Q.insect+F+R6 42030.660    290 84641.321    253421.321   85552.403
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
179  Q.insect+F+R7 42015.818    292 84615.637    255727.637   85533.003
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
180  Q.insect+F+R8 42012.923    294 84613.845    258073.845   85537.494
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
183  Q.plant       44367.120    261 89256.240    226020.240   90076.214
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
184  Q.plant+I     44367.114    262 89258.228    227070.228   90081.344
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
185  Q.plant+G4    42426.753    262 85377.506    223189.506   86200.622
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
186  Q.plant+I+G4  42426.756    263 85379.512    224243.512   86205.769
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
187  Q.plant+R2    42854.012    263 86234.023    225098.023   87060.281
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
188  Q.plant+R3    42536.352    265 85602.703    226582.703   86435.244
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
189  Q.plant+R4    42367.548    267 85269.096    228381.096   86107.920
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
190  Q.plant+R5    42336.010    269 85210.021    230470.021   86055.128
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
191  Q.plant+R6    42312.854    271 85167.708    232591.708   86019.099
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
192  Q.plant+R7    42309.682    273 85165.364    234769.364   86023.038
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
196  Q.plant+F     44328.358    280 89216.716    246576.716   90096.382
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
197  Q.plant+F+I   44328.337    281 89218.674    247702.674   90101.481
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
198  Q.plant+F+G4  42368.401    281 85298.802    243782.802   86181.609
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
199  Q.plant+F+I+G4 42368.401    282 85300.802    244912.802   86186.752
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
200  Q.plant+F+R2  42749.088    282 86062.175    245674.175   86948.125
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
201  Q.plant+F+R3  42469.348    284 85506.696    247386.696   86398.929
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
202  Q.plant+F+R4  42317.388    286 85206.776    249370.776   86105.292
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
203  Q.plant+F+R5  42288.282    288 85152.563    251616.563   86057.362
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
204  Q.plant+F+R6  42269.042    290 85118.083    253898.083   86029.165
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
205  Q.plant+F+R7  42259.504    292 85103.008    256215.008   86020.374
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
206  Q.plant+F+R8  42256.592    294 85101.185    258561.185   86024.834
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
209  Q.yeast       44000.079    261 88522.159    225286.159   89342.133
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
210  Q.yeast+I     44000.077    262 88524.153    226336.153   89347.269
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
211  Q.yeast+G4    42269.627    262 85063.254    222875.254   85886.370
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
212  Q.yeast+I+G4  42269.606    263 85065.212    223929.212   85891.469
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
213  Q.yeast+R2    42665.305    263 85856.611    224720.611   86682.868
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
214  Q.yeast+R3    42381.531    265 85293.061    226273.061   86125.602
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
215  Q.yeast+R4    42206.116    267 84946.231    228058.231   85785.055
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
216  Q.yeast+R5    42173.018    269 84884.036    230144.036   85729.143
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
217  Q.yeast+R6    42157.907    271 84857.814    232281.814   85709.205
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
218  Q.yeast+R7    42149.863    273 84845.726    234449.726   85703.400
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
219  Q.yeast+R8    42141.856    275 84833.712    236633.712   85697.669
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
220  Q.yeast+R9    42140.425    277 84834.851    238846.851   85705.092
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
222  Q.yeast+F     43634.003    280 87828.006    245188.006   88707.672
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
223  Q.yeast+F+I   43633.999    281 87829.999    246313.999   88712.806
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
224  Q.yeast+F+G4  41934.603    281 84431.206    242915.206   85314.013
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
225  Q.yeast+F+I+G4 41934.606    282 84433.212    244045.212   85319.161
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
226  Q.yeast+F+R2  42285.625    282 85135.249    244747.249   86021.198
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
227  Q.yeast+F+R3  42031.757    284 84631.514    246511.514   85523.746
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
228  Q.yeast+F+R4  41883.326    286 84338.653    248502.653   85237.168
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
229  Q.yeast+F+R5  41850.740    288 84277.481    250741.481   85182.280
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
230  Q.yeast+F+R6  41838.431    290 84256.863    253036.863   85167.945
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
231  Q.yeast+F+R7  41825.160    292 84234.320    255346.320   85151.686
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
232  Q.yeast+F+R8  41820.818    294 84229.636    257689.636   85153.285
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
235  JTTDCMut      43698.141    261 87918.281    224682.281   88738.255
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
236  JTTDCMut+I    43698.126    262 87920.251    225732.251   88743.367
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
237  JTTDCMut+G4   42244.772    262 85013.543    222825.543   85836.659
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
238  JTTDCMut+I+G4 42244.773    263 85015.546    223879.546   85841.803
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
239  JTTDCMut+R2   42584.512    263 85695.024    224559.024   86521.282
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
240  JTTDCMut+R3   42323.069    265 85176.139    226156.139   86008.679
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
241  JTTDCMut+R4   42190.465    267 84914.930    228026.930   85753.754
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
242  JTTDCMut+R5   42163.624    269 84865.249    230125.249   85710.356
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
243  JTTDCMut+R6   42146.889    271 84835.778    232259.778   85687.169
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
244  JTTDCMut+R7   42141.378    273 84828.757    234432.757   85686.431
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
245  JTTDCMut+R8   42136.261    275 84822.522    236622.522   85686.479
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
248  JTTDCMut+F    43795.772    280 88151.545    245511.545   89031.210
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
249  JTTDCMut+F+I  43795.754    281 88153.508    246637.508   89036.316
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
250  JTTDCMut+F+G4 42267.178    281 85096.357    243580.357   85979.164
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
251  JTTDCMut+F+I+G4 42267.179    282 85098.357    244710.357   85984.306
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
252  JTTDCMut+F+R2 42606.085    282 85776.171    245388.171   86662.120
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
253  JTTDCMut+F+R3 42355.133    284 85278.267    247158.267   86170.499
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
254  JTTDCMut+F+R4 42221.810    286 85015.619    249179.619   85914.135
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
255  JTTDCMut+F+R5 42190.317    288 84956.634    251420.634   85861.433
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
256  JTTDCMut+F+R6 42175.676    290 84931.351    253711.351   85842.434
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
257  JTTDCMut+F+R7 42167.852    292 84919.703    256031.703   85837.069
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
258  JTTDCMut+F+R8 42163.830    294 84915.659    258375.659   85839.308
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
261  DCMut         43655.842    261 87833.684    224597.684   88653.658
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
262  DCMut+I       43655.836    262 87835.673    225647.673   88658.789
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
263  DCMut+G4      42246.338    262 85016.676    222828.676   85839.791
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
264  DCMut+I+G4    42246.338    263 85018.676    223882.676   85844.933
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
265  DCMut+R2      42617.288    263 85760.576    224624.576   86586.833
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
266  DCMut+R3      42306.143    265 85142.286    226122.286   85974.827
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
267  DCMut+R4      42191.613    267 84917.225    228029.225   85756.049
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
268  DCMut+R5      42143.736    269 84825.471    230085.471   85670.579
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
269  DCMut+R6      42133.405    271 84808.810    232232.810   85660.201
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
270  DCMut+R7      42127.943    273 84801.886    234405.886   85659.560
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
271  DCMut+R8      42125.139    275 84800.279    236600.279   85664.236
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
274  DCMut+F       43798.895    280 88157.789    245517.789   89037.455
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
275  DCMut+F+I     43798.873    281 88159.745    246643.745   89042.553
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
276  DCMut+F+G4    42337.665    281 85237.330    243721.330   86120.138
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
277  DCMut+F+I+G4  42337.709    282 85239.418    244851.418   86125.367
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
278  DCMut+F+R2    42681.778    282 85927.556    245539.556   86813.505
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
279  DCMut+F+R3    42399.627    284 85367.253    247247.253   86259.486
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
280  DCMut+F+R4    42287.508    286 85147.016    249311.016   86045.531
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
281  DCMut+F+R5    42235.163    288 85046.326    251510.326   85951.125
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
282  DCMut+F+R6    42221.390    290 85022.779    253802.779   85933.862
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
283  DCMut+F+R7    42211.332    292 85006.664    256118.664   85924.030
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
284  DCMut+F+R8    42205.486    294 84998.973    258458.973   85922.622
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
WARNING: Log-likelihood -42206.8 of DCMut+F+R9 worse than DCMut+F+R8 -42205.5
285  DCMut+F+R9    42206.827    296 85005.655    260829.655   85935.587
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
287  VT            43136.152    261 86794.303    223558.303   87614.277
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
288  VT+I          43136.139    262 86796.278    224608.278   87619.394
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
289  VT+G4         41927.219    262 84378.439    222190.439   85201.554
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
290  VT+I+G4       41927.203    263 84380.406    223244.406   85206.663
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
291  VT+R2         42203.540    263 84933.079    223797.079   85759.337
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
292  VT+R3         41960.081    265 84450.162    225430.162   85282.703
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
293  VT+R4         41860.525    267 84255.049    227367.049   85093.874
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
294  VT+R5         41841.967    269 84221.933    229481.933   85067.041
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
295  VT+R6         41818.553    271 84179.107    231603.107   85030.498
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
296  VT+R7         41811.930    273 84169.859    233773.859   85027.533
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
297  VT+R8         41811.658    275 84173.317    235973.317   85037.274
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
300  VT+F          43088.164    280 86736.328    244096.328   87615.994
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
301  VT+F+I        43088.146    281 86738.291    245222.291   87621.098
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
302  VT+F+G4       41866.393    281 84294.786    242778.786   85177.593
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
303  VT+F+I+G4     41866.400    282 84296.799    243908.799   85182.748
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
304  VT+F+R2       42132.278    282 84828.556    244440.556   85714.505
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
305  VT+F+R3       41905.624    284 84379.248    246259.248   85271.481
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
306  VT+F+R4       41809.704    286 84191.408    248355.408   85089.924
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
307  VT+F+R5       41784.803    288 84145.606    250609.606   85050.405
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
308  VT+F+R6       41766.726    290 84113.453    252893.453   85024.535
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
309  VT+F+R7       41761.129    292 84106.257    255218.257   85023.623
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
310  VT+F+R8       41760.747    294 84109.495    257569.495   85033.144
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
313  PMB           43275.647    261 87073.293    223837.293   87893.268
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
314  PMB+I         43275.629    262 87075.259    224887.259   87898.374
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
315  PMB+G4        42043.897    262 84611.795    222423.795   85434.910
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
316  PMB+I+G4      42043.893    263 84613.786    223477.786   85440.044
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
317  PMB+R2        42299.970    263 85125.940    223989.940   85952.197
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
318  PMB+R3        42072.064    265 84674.129    225654.129   85506.669
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
319  PMB+R4        41980.992    267 84495.984    227607.984   85334.808
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
320  PMB+R5        41962.218    269 84462.435    229722.435   85307.543
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
321  PMB+R6        41938.572    271 84419.144    231843.144   85270.534
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
322  PMB+R7        41938.367    273 84422.734    234026.734   85280.409
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
326  PMB+F         43142.826    280 86845.652    244205.652   87725.318
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
327  PMB+F+I       43142.802    281 86847.605    245331.605   87730.412
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
328  PMB+F+G4      41896.967    281 84355.934    242839.934   85238.741
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
329  PMB+F+I+G4    41896.968    282 84357.937    243969.937   85243.886
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
330  PMB+F+R2      42157.181    282 84878.363    244490.363   85764.312
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
331  PMB+F+R3      41939.481    284 84446.962    246326.962   85339.194
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
332  PMB+F+R4      41840.778    286 84253.555    248417.555   85152.071
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
333  PMB+F+R5      41820.476    288 84216.953    250680.953   85121.752
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
334  PMB+F+R6      41801.481    290 84182.962    252962.962   85094.044
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
335  PMB+F+R7      41796.849    292 84177.698    255289.698   85095.064
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
339  Blosum62      43316.385    261 87154.770    223918.770   87974.745
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
340  Blosum62+I    43316.376    262 87156.751    224968.751   87979.867
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
341  Blosum62+G4   42078.885    262 84681.771    222493.771   85504.887
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
342  Blosum62+I+G4 42078.885    263 84683.769    223547.769   85510.027
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
343  Blosum62+R2   42346.344    263 85218.688    224082.688   86044.945
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
344  Blosum62+R3   42105.726    265 84741.451    225721.451   85573.992
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
345  Blosum62+R4   42010.537    267 84555.074    227667.074   85393.898
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
346  Blosum62+R5   41988.434    269 84514.867    229774.867   85359.975
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
347  Blosum62+R6   41967.831    271 84477.662    231901.662   85329.052
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
348  Blosum62+R7   41964.258    273 84474.515    234078.515   85332.189
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
352  Blosum62+F    43158.659    280 86877.319    244237.319   87756.985
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
353  Blosum62+F+I  43158.648    281 86879.296    245363.296   87762.104
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
354  Blosum62+F+G4 41918.837    281 84399.675    242883.675   85282.482
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
355  Blosum62+F+I+G4 41918.830    282 84401.659    244013.659   85287.608
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
356  Blosum62+F+R2 42187.353    282 84938.706    244550.706   85824.655
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
357  Blosum62+F+R3 41956.036    284 84480.071    246360.071   85372.304
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
358  Blosum62+F+R4 41858.689    286 84289.378    248453.378   85187.894
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
359  Blosum62+F+R5 41835.037    288 84246.073    250710.073   85150.873
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
360  Blosum62+F+R6 41818.060    290 84216.120    252996.120   85127.203
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
361  Blosum62+F+R7 41814.658    292 84213.316    255325.316   85130.682
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
365  Dayhoff       43659.932    261 87841.863    224605.863   88661.838
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
366  Dayhoff+I     43659.926    262 87843.853    225655.853   88666.969
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
367  Dayhoff+G4    42247.056    262 85018.112    222830.112   85841.228
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
368  Dayhoff+I+G4  42247.056    263 85020.112    223884.112   85846.370
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
369  Dayhoff+R2    42619.296    263 85764.593    224628.593   86590.850
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
370  Dayhoff+R3    42307.087    265 85144.175    226124.175   85976.716
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
371  Dayhoff+R4    42192.566    267 84919.133    228031.133   85757.957
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
372  Dayhoff+R5    42144.459    269 84826.918    230086.918   85672.026
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
373  Dayhoff+R6    42134.103    271 84810.206    232234.206   85661.597
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
374  Dayhoff+R7    42128.597    273 84803.194    234407.194   85660.868
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
375  Dayhoff+R8    42125.785    275 84801.570    236601.570   85665.528
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
378  Dayhoff+F     43803.538    280 88167.077    245527.077   89046.742
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
379  Dayhoff+F+I   43803.517    281 88169.034    246653.034   89051.841
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
380  Dayhoff+F+G4  42339.319    281 85240.638    243724.638   86123.446
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
381  Dayhoff+F+I+G4 42339.370    282 85242.740    244854.740   86128.689
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
382  Dayhoff+F+R2  42684.335    282 85932.669    245544.669   86818.618
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
383  Dayhoff+F+R3  42401.874    284 85371.749    247251.749   86263.981
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
384  Dayhoff+F+R4  42289.305    286 85150.611    249314.611   86049.127
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
385  Dayhoff+F+R5  42236.816    288 85049.633    251513.633   85954.432
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
386  Dayhoff+F+R6  42223.056    290 85026.111    253806.111   85937.194
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
387  Dayhoff+F+R7  42212.824    292 85009.648    256121.648   85927.014
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
388  Dayhoff+F+R8  42207.155    294 85002.310    258462.310   85925.960
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
WARNING: Log-likelihood -42208.4 of Dayhoff+F+R9 worse than Dayhoff+F+R8 -42207.2
389  Dayhoff+F+R9  42208.446    296 85008.892    260832.892   85938.825
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
391  mtREV         46871.072    261 94264.144    231028.144   95084.119
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
392  mtREV+I       46871.046    262 94266.092    232078.092   95089.208
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
393  mtREV+G4      44252.304    262 89028.607    226840.607   89851.723
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
394  mtREV+I+G4    44252.300    263 89030.600    227894.600   89856.858
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
395  mtREV+R2      44644.971    263 89815.942    228679.942   90642.200
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
396  mtREV+R3      44365.790    265 89261.581    230241.581   90094.121
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
397  mtREV+R4      44137.773    267 88809.547    231921.547   89648.371
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
398  mtREV+R5      44085.948    269 88709.895    233969.895   89555.003
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
399  mtREV+R6      44075.873    271 88693.746    236117.746   89545.137
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
400  mtREV+R7      44061.988    273 88669.976    238273.976   89527.650
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
401  mtREV+R8      44052.305    275 88654.610    240454.610   89518.568
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
402  mtREV+R9      44042.316    277 88638.632    242650.632   89508.873
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
403  mtREV+R10     44041.778    279 88641.556    244881.556   89518.080
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
404  mtREV+F       44765.202    280 90090.405    247450.405   90970.071
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
405  mtREV+F+I     44765.197    281 90092.394    248576.394   90975.201
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
406  mtREV+F+G4    42719.299    281 86000.597    244484.597   86883.405
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
407  mtREV+F+I+G4  42719.300    282 86002.600    245614.600   86888.549
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
408  mtREV+F+R2    43061.509    282 86687.018    246299.018   87572.968
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
409  mtREV+F+R3    42793.717    284 86155.433    248035.433   87047.666
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
410  mtREV+F+R4    42638.117    286 85848.234    250012.234   86746.750
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
411  mtREV+F+R5    42588.766    288 85753.532    252217.532   86658.331
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
412  mtREV+F+R6    42566.365    290 85712.730    254492.730   86623.812
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
413  mtREV+F+R7    42557.454    292 85698.908    256810.908   86616.274
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
414  mtREV+F+R8    42553.037    294 85694.074    259154.074   86617.723
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
417  mtART         48355.873    261 97233.746    233997.746   98053.720
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
418  mtART+I       48355.864    262 97235.728    235047.728   98058.844
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
419  mtART+G4      44899.421    262 90322.842    228134.842   91145.957
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
420  mtART+I+G4    44899.421    263 90324.842    229188.842   91151.099
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
421  mtART+R2      45329.257    263 91184.514    230048.514   92010.772
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
422  mtART+R3      45059.268    265 90648.537    231628.537   91481.077
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
423  mtART+R4      44854.525    267 90243.050    233355.050   91081.875
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
424  mtART+R5      44754.723    269 90047.447    235307.447   90892.554
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
425  mtART+R6      44702.539    271 89947.079    237371.079   90798.470
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
426  mtART+R7      44687.984    273 89921.968    239525.968   90779.642
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
427  mtART+R8      44673.429    275 89896.858    241696.858   90760.815
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
428  mtART+R9      44671.514    277 89897.029    243909.029   90767.269
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
430  mtART+F       45859.786    280 92279.571    249639.571   93159.237
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
431  mtART+F+I     45859.775    281 92281.549    250765.549   93164.357
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
432  mtART+F+G4    43052.142    281 86666.284    245150.284   87549.091
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
433  mtART+F+I+G4  43052.143    282 86668.286    246280.286   87554.236
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
434  mtART+F+R2    43407.580    282 87379.160    246991.160   88265.109
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
435  mtART+F+R3    43179.860    284 86927.720    248807.720   87819.952
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
436  mtART+F+R4    42971.392    286 86514.783    250678.783   87413.299
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
437  mtART+F+R5    42903.063    288 86382.127    252846.127   87286.926
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
438  mtART+F+R6    42869.764    290 86319.529    255099.529   87230.611
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
439  mtART+F+R7    42855.624    292 86295.248    257407.248   87212.614
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
440  mtART+F+R8    42851.584    294 86291.168    259751.168   87214.817
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
443  mtZOA         46852.815    261 94227.629    230991.629   95047.603
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
444  mtZOA+I       46852.808    262 94229.616    232041.616   95052.732
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
445  mtZOA+G4      43735.932    262 87995.863    225807.863   88818.979
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
446  mtZOA+I+G4    43735.931    263 87997.863    226861.863   88824.120
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
447  mtZOA+R2      44084.669    263 88695.338    227559.338   89521.596
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
448  mtZOA+R3      43853.719    265 88237.438    229217.438   89069.978
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
449  mtZOA+R4      43697.474    267 87928.948    231040.948   88767.772
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
450  mtZOA+R5      43596.026    269 87730.052    232990.052   88575.159
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
451  mtZOA+R6      43575.879    271 87693.758    235117.758   88545.148
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
452  mtZOA+R7      43564.283    273 87674.565    237278.565   88532.239
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
453  mtZOA+R8      43560.174    275 87670.348    239470.348   88534.306
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
456  mtZOA+F       45113.312    280 90786.624    248146.624   91666.290
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
457  mtZOA+F+I     45113.306    281 90788.611    249272.611   91671.419
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
458  mtZOA+F+G4    42678.562    281 85919.125    244403.125   86801.932
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
459  mtZOA+F+I+G4  42678.562    282 85921.124    245533.124   86807.073
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
460  mtZOA+F+R2    43004.611    282 86573.222    246185.222   87459.171
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
461  mtZOA+F+R3    42783.578    284 86135.156    248015.156   87027.388
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
462  mtZOA+F+R4    42648.476    286 85868.951    250032.951   86767.467
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
463  mtZOA+F+R5    42564.333    288 85704.667    252168.667   86609.466
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
464  mtZOA+F+R6    42542.268    290 85664.536    254444.536   86575.619
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
465  mtZOA+F+R7    42530.597    292 85645.194    256757.194   86562.560
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
466  mtZOA+F+R8    42529.982    294 85647.965    259107.965   86571.614
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
469  mtMet         47531.683    261 95585.365    232349.365   96405.339
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
470  mtMet+I       47531.681    262 95587.362    233399.362   96410.477
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
471  mtMet+G4      44710.750    262 89945.501    227757.501   90768.617
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
472  mtMet+I+G4    44710.763    263 89947.525    228811.525   90773.783
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
473  mtMet+R2      45105.406    263 90736.813    229600.813   91563.070
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
474  mtMet+R3      44856.182    265 90242.365    231222.365   91074.905
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
475  mtMet+R4      44645.872    267 89825.744    232937.744   90664.568
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
476  mtMet+R5      44580.676    269 89699.353    234959.353   90544.460
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
477  mtMet+R6      44568.279    271 89678.557    237102.557   90529.948
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
478  mtMet+R7      44525.258    273 89596.516    239200.516   90454.190
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
479  mtMet+R8      44520.862    275 89591.724    241391.724   90455.681
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
482  mtMet+F       45091.451    280 90742.902    248102.902   91622.568
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
483  mtMet+F+I     45091.446    281 90744.892    249228.892   91627.700
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
484  mtMet+F+G4    42792.094    281 86146.189    244630.189   87028.996
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
485  mtMet+F+I+G4  42792.096    282 86148.191    245760.191   87034.140
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
486  mtMet+F+R2    43124.653    282 86813.306    246425.306   87699.256
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
487  mtMet+F+R3    42905.425    284 86378.849    248258.849   87271.082
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
488  mtMet+F+R4    42752.577    286 86077.154    250241.154   86975.670
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
489  mtMet+F+R5    42686.797    288 85949.593    252413.593   86854.392
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
490  mtMet+F+R6    42667.347    290 85914.694    254694.694   86825.776
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
491  mtMet+F+R7    42663.309    292 85910.618    257022.618   86827.984
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
495  mtVer         47826.383    261 96174.767    232938.767   96994.741
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
496  mtVer+I       47826.377    262 96176.753    233988.753   96999.869
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
497  mtVer+G4      44626.979    262 89777.958    227589.958   90601.073
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
498  mtVer+I+G4    44626.976    263 89779.951    228643.951   90606.209
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
499  mtVer+R2      45071.024    263 90668.049    229532.049   91494.306
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
500  mtVer+R3      44790.092    265 90110.185    231090.185   90942.726
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
501  mtVer+R4      44556.349    267 89646.698    232758.698   90485.522
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
502  mtVer+R5      44487.300    269 89512.600    234772.600   90357.707
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
503  mtVer+R6      44415.561    271 89373.123    236797.123   90224.514
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
504  mtVer+R7      44406.938    273 89359.876    238963.876   90217.550
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
505  mtVer+R8      44406.878    275 89363.756    241163.756   90227.713
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
508  mtVer+F       45631.827    280 91823.653    249183.653   92703.319
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
509  mtVer+F+I     45631.820    281 91825.639    250309.639   92708.447
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
510  mtVer+F+G4    43177.977    281 86917.953    245401.953   87800.761
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
511  mtVer+F+I+G4  43177.976    282 86919.952    246531.952   87805.902
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
512  mtVer+F+R2    43605.175    282 87774.350    247386.350   88660.299
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
513  mtVer+F+R3    43315.685    284 87199.371    249079.371   88091.603
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
514  mtVer+F+R4    43132.714    286 86837.429    251001.429   87735.945
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
515  mtVer+F+R5    43036.208    288 86648.416    253112.416   87553.215
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
516  mtVer+F+R6    43021.470    290 86622.941    255402.941   87534.023
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
517  mtVer+F+R7    43015.647    292 86615.294    257727.294   87532.660
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
518  mtVer+F+R8    43001.423    294 86590.846    260050.846   87514.495
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
519  mtVer+F+R9    42999.199    296 86590.398    262414.398   87520.330
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
521  mtInv         47431.693    261 95385.385    232149.385   96205.360
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
522  mtInv+I       47431.681    262 95387.362    233199.362   96210.478
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
523  mtInv+G4      44990.842    262 90505.685    228317.685   91328.800
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
524  mtInv+I+G4    44990.842    263 90507.684    229371.684   91333.942
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
525  mtInv+R2      45370.619    263 91267.238    230131.238   92093.496
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
526  mtInv+R3      45144.087    265 90818.175    231798.175   91650.716
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
527  mtInv+R4      44936.018    267 90406.036    233518.036   91244.860
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
528  mtInv+R5      44872.412    269 90282.824    235542.824   91127.932
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
529  mtInv+R6      44865.621    271 90273.242    237697.242   91124.632
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
530  mtInv+R7      44830.797    273 90207.595    239811.595   91065.269
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
531  mtInv+R8      44821.445    275 90192.890    241992.890   91056.848
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
532  mtInv+R9      44816.786    277 90187.573    244199.573   91057.813
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
534  mtInv+F       44465.681    280 89491.362    246851.362   90371.027
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
535  mtInv+F+I     44465.674    281 89493.349    247977.349   90376.156
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
536  mtInv+F+G4    42429.236    281 85420.472    243904.472   86303.279
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
537  mtInv+F+I+G4  42429.236    282 85422.471    245034.471   86308.420
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
538  mtInv+F+R2    42756.510    282 86077.020    245689.020   86962.969
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
539  mtInv+F+R3    42530.797    284 85629.594    247509.594   86521.826
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
540  mtInv+F+R4    42391.299    286 85354.598    249518.598   86253.113
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
541  mtInv+F+R5    42344.468    288 85264.936    251728.936   86169.735
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
542  mtInv+F+R6    42325.313    290 85230.626    254010.626   86141.708
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
543  mtInv+F+R7    42322.272    292 85228.545    256340.545   86145.910
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
547  mtMAM         48911.778    261 98345.555    235109.555   99165.529
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
548  mtMAM+I       48911.762    262 98347.524    236159.524   99170.640
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
549  mtMAM+G4      45093.740    262 90711.479    228523.479   91534.595
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
550  mtMAM+I+G4    45093.738    263 90713.477    229577.477   91539.734
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
551  mtMAM+R2      45637.963    263 91801.926    230665.926   92628.183
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
552  mtMAM+R3      45333.763    265 91197.527    232177.527   92030.068
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
553  mtMAM+R4      45094.295    267 90722.589    233834.589   91561.413
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
554  mtMAM+R5      44983.671    269 90505.342    235765.342   91350.450
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
555  mtMAM+R6      44881.214    271 90304.428    237728.428   91155.819
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
556  mtMAM+R7      44868.814    273 90283.629    239887.629   91141.303
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
557  mtMAM+R8      44859.379    275 90268.758    242068.758   91132.715
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
558  mtMAM+R9      44853.689    277 90261.378    244273.378   91131.619
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
559  mtMAM+R10     44850.932    279 90259.864    246499.864   91136.389
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
560  mtMAM+F       46408.919    280 93377.838    250737.838   94257.503
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
561  mtMAM+F+I     46408.915    281 93379.830    251863.830   94262.638
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
562  mtMAM+F+G4    43501.754    281 87565.508    246049.508   88448.316
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
563  mtMAM+F+I+G4  43501.746    282 87567.491    247179.491   88453.441
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
564  mtMAM+F+R2    43944.536    282 88453.071    248065.071   89339.020
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
565  mtMAM+F+R3    43712.601    284 87993.201    249873.201   88885.434
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
566  mtMAM+F+R4    43416.058    286 87404.115    251568.115   88302.631
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
567  mtMAM+F+R5    43367.733    288 87311.466    253775.466   88216.265
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
568  mtMAM+F+R6    43329.553    290 87239.105    256019.105   88150.188
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
569  mtMAM+F+R7    43320.677    292 87225.355    258337.355   88142.720
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
570  mtMAM+F+R8    43312.728    294 87213.456    260673.456   88137.105
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
571  mtMAM+F+R9    43313.649    296 87219.299    263043.299   88149.231
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
573  FLAVI         45997.914    261 92517.828    229281.828   93337.802
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
574  FLAVI+I       45997.903    262 92519.806    230331.806   93342.922
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
575  FLAVI+G4      43687.966    262 87899.933    225711.933   88723.049
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
576  FLAVI+I+G4    43687.970    263 87901.940    226765.940   88728.197
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
577  FLAVI+R2      44086.887    263 88699.773    227563.773   89526.031
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
578  FLAVI+R3      43822.585    265 88175.171    229155.171   89007.712
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
579  FLAVI+R4      43646.059    267 87826.117    230938.117   88664.941
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
580  FLAVI+R5      43591.225    269 87720.451    232980.451   88565.558
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
581  FLAVI+R6      43566.118    271 87674.237    235098.237   88525.627
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
582  FLAVI+R7      43557.693    273 87661.385    237265.385   88519.059
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
583  FLAVI+R8      43548.696    275 87647.393    239447.393   88511.350
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
584  FLAVI+R9      43548.602    277 87651.204    241663.204   88521.445
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
586  FLAVI+F       45769.805    280 92099.610    249459.610   92979.275
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
587  FLAVI+F+I     45769.781    281 92101.562    250585.562   92984.369
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
588  FLAVI+F+G4    43490.423    281 87542.847    246026.847   88425.654
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
589  FLAVI+F+I+G4  43490.423    282 87544.847    247156.847   88430.796
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
590  FLAVI+F+R2    43885.184    282 88334.369    247946.369   89220.318
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
591  FLAVI+F+R3    43613.112    284 87794.223    249674.223   88686.456
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
592  FLAVI+F+R4    43454.524    286 87481.047    251645.047   88379.563
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
593  FLAVI+F+R5    43398.996    288 87373.993    253837.993   88278.792
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
594  FLAVI+F+R6    43369.902    290 87319.803    256099.803   88230.886
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
595  FLAVI+F+R7    43357.445    292 87298.891    258410.891   88216.256
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
596  FLAVI+F+R8    43353.757    294 87295.514    260755.514   88219.163
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
599  HIVb          44814.812    261 90151.625    226915.625   90971.599
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
600  HIVb+I        44814.806    262 90153.613    227965.613   90976.729
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
601  HIVb+G4       43150.996    262 86825.993    224637.993   87649.108
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
602  HIVb+I+G4     43150.994    263 86827.988    225691.988   87654.246
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
603  HIVb+R2       43539.670    263 87605.340    226469.340   88431.598
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
604  HIVb+R3       43197.822    265 86925.644    227905.644   87758.185
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
605  HIVb+R4       43091.140    267 86716.281    229828.281   87555.105
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
606  HIVb+R5       43056.586    269 86651.171    231911.171   87496.279
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
607  HIVb+R6       43036.533    271 86615.065    234039.065   87466.456
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
608  HIVb+R7       43026.372    273 86598.744    236202.744   87456.418
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
609  HIVb+R8       43026.122    275 86602.245    238402.245   87466.202
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
612  HIVb+F        44525.044    280 89610.088    246970.088   90489.753
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
613  HIVb+F+I      44525.035    281 89612.069    248096.069   90494.877
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
614  HIVb+F+G4     42766.747    281 86095.494    244579.494   86978.302
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
615  HIVb+F+I+G4   42766.751    282 86097.503    245709.503   86983.452
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
616  HIVb+F+R2     43118.135    282 86800.269    246412.269   87686.218
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
617  HIVb+F+R3     42833.435    284 86234.871    248114.871   87127.103
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
618  HIVb+F+R4     42718.634    286 86009.269    250173.269   86907.785
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
619  HIVb+F+R5     42669.589    288 85915.179    252379.179   86819.978
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
620  HIVb+F+R6     42659.074    290 85898.148    254678.148   86809.231
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
621  HIVb+F+R7     42652.474    292 85888.948    257000.948   86806.313
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
622  HIVb+F+R8     42651.600    294 85891.199    259351.199   86814.848
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
625  HIVw          46642.535    261 93807.070    230571.070   94627.044
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
626  HIVw+I        46642.505    262 93809.010    231621.010   94632.125
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
627  HIVw+G4       44895.979    262 90315.958    228127.958   91139.074
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
628  HIVw+I+G4     44895.984    263 90317.969    229181.969   91144.226
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
629  HIVw+R2       45322.428    263 91170.857    230034.857   91997.114
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
630  HIVw+R3       45008.407    265 90546.814    231526.814   91379.355
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
631  HIVw+R4       44851.389    267 90236.778    233348.778   91075.602
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
632  HIVw+R5       44798.948    269 90135.895    235395.895   90981.003
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
633  HIVw+R6       44785.369    271 90112.739    237536.739   90964.130
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
634  HIVw+R7       44775.934    273 90097.867    239701.867   90955.541
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
635  HIVw+R8       44772.876    275 90095.751    241895.751   90959.709
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
638  HIVw+F        45655.181    280 91870.362    249230.362   92750.028
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
639  HIVw+F+I      45655.163    281 91872.326    250356.326   92755.133
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
640  HIVw+F+G4     43862.288    281 88286.576    246770.576   89169.383
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
641  HIVw+F+I+G4   43862.292    282 88288.585    247900.585   89174.534
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
642  HIVw+F+R2     44264.879    282 89093.757    248705.757   89979.706
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
643  HIVw+F+R3     43966.064    284 88500.127    250380.127   89392.360
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
644  HIVw+F+R4     43824.028    286 88220.056    252384.056   89118.572
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
645  HIVw+F+R5     43772.208    288 88120.415    254584.415   89025.214
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
646  HIVw+F+R6     43760.617    290 88101.235    256881.235   89012.317
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
647  HIVw+F+R7     43751.950    292 88087.900    259199.900   89005.266
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
648  HIVw+F+R8     43750.027    294 88088.055    261548.055   89011.704
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
651  FLU           45000.817    261 90523.634    227287.634   91343.609
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
652  FLU+I         45000.812    262 90525.624    228337.624   91348.739
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
653  FLU+G4        43150.494    262 86824.988    224636.988   87648.104
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
654  FLU+I+G4      43150.499    263 86826.998    225690.998   87653.255
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
655  FLU+R2        43601.540    263 87729.081    226593.081   88555.338
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
656  FLU+R3        43295.224    265 87120.448    228100.448   87952.989
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
657  FLU+R4        43088.487    267 86710.974    229822.974   87549.798
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
658  FLU+R5        43051.987    269 86641.975    231901.975   87487.082
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
659  FLU+R6        43039.192    271 86620.385    234044.385   87471.776
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
660  FLU+R7        43029.688    273 86605.375    236209.375   87463.049
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
661  FLU+R8        43026.761    275 86603.523    238403.523   87467.480
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
664  FLU+F         44533.410    280 89626.820    246986.820   90506.486
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
665  FLU+F+I       44533.380    281 89628.761    248112.761   90511.568
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
666  FLU+F+G4      42635.117    281 85832.235    244316.235   86715.042
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
667  FLU+F+I+G4    42635.117    282 85834.235    245446.235   86720.184
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
668  FLU+F+R2      43061.606    282 86687.212    246299.212   87573.161
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
669  FLU+F+R3      42768.801    284 86105.603    247985.603   86997.835
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
670  FLU+F+R4      42587.260    286 85746.519    249910.519   86645.035
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
671  FLU+F+R5      42553.140    288 85682.279    252146.279   86587.078
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
672  FLU+F+R6      42528.005    290 85636.010    254416.010   86547.093
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
673  FLU+F+R7      42520.701    292 85625.402    256737.402   86542.767
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
674  FLU+F+R8      42516.319    294 85620.638    259080.638   86544.287
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
677  rtREV         43812.944    261 88147.888    224911.888   88967.863
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
678  rtREV+I       43812.940    262 88149.880    225961.880   88972.995
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
679  rtREV+G4      42273.222    262 85070.445    222882.445   85893.561
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
680  rtREV+I+G4    42273.185    263 85072.371    223936.371   85898.628
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
681  rtREV+R2      42612.792    263 85751.584    224615.584   86577.841
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
682  rtREV+R3      42336.210    265 85202.420    226182.420   86034.961
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
683  rtREV+R4      42191.181    267 84916.362    228028.362   85755.186
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
684  rtREV+R5      42162.957    269 84863.914    230123.914   85709.022
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
685  rtREV+R6      42148.570    271 84839.141    232263.141   85690.532
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
686  rtREV+R7      42142.059    273 84830.117    234434.117   85687.791
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
687  rtREV+R8      42138.311    275 84826.622    236626.622   85690.580
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
690  rtREV+F       43467.670    280 87495.340    244855.340   88375.006
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
691  rtREV+F+I     43467.663    281 87497.327    245981.327   88380.134
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
692  rtREV+F+G4    41908.474    281 84378.948    242862.948   85261.756
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
693  rtREV+F+I+G4  41908.474    282 84380.948    243992.948   85266.898
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
694  rtREV+F+R2    42228.373    282 85020.747    244632.747   85906.696
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
695  rtREV+F+R3    41981.362    284 84530.723    246410.723   85422.956
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
696  rtREV+F+R4    41841.424    286 84254.848    248418.848   85153.363
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
697  rtREV+F+R5    41814.197    288 84204.394    250668.394   85109.193
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
698  rtREV+F+R6    41795.080    290 84170.159    252950.159   85081.241
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
699  rtREV+F+R7    41785.171    292 84154.341    255266.341   85071.707
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
700  rtREV+F+R8    41783.511    294 84155.023    257615.023   85078.672
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
703  cpREV         43547.405    261 87616.810    224380.810   88436.784
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
704  cpREV+I       43547.400    262 87618.800    225430.800   88441.916
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
705  cpREV+G4      42301.459    262 85126.917    222938.917   85950.033
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
706  cpREV+I+G4    42301.444    263 85128.889    223992.889   85955.146
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
707  cpREV+R2      42622.203    263 85770.407    224634.407   86596.664
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
708  cpREV+R3      42372.685    265 85275.369    226255.369   86107.910
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
709  cpREV+R4      42264.966    267 85063.932    228175.932   85902.756
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
710  cpREV+R5      42229.955    269 84997.910    230257.910   85843.017
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
711  cpREV+R6      42214.417    271 84970.835    232394.835   85822.225
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
712  cpREV+R7      42209.105    273 84964.209    234568.209   85821.884
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
713  cpREV+R8      42204.620    275 84959.241    236759.241   85823.198
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
716  cpREV+F       43122.688    280 86805.376    244165.376   87685.042
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
717  cpREV+F+I     43122.686    281 86807.371    245291.371   87690.179
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
718  cpREV+F+G4    41910.373    281 84382.747    242866.747   85265.554
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
719  cpREV+F+I+G4  41909.996    282 84383.991    243995.991   85269.940
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
720  cpREV+F+R2    42215.762    282 84995.524    244607.524   85881.473
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
721  cpREV+F+R3    41971.908    284 84511.816    246391.816   85404.048
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
722  cpREV+F+R4    41883.684    286 84339.368    248503.368   85237.884
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
723  cpREV+F+R5    41837.973    288 84251.947    250715.947   85156.746
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
724  cpREV+F+R6    41824.087    290 84228.173    253008.173   85139.255
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
725  cpREV+F+R7    41815.994    292 84215.988    255327.988   85133.353
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
726  cpREV+F+R8    41813.770    294 84215.540    257675.540   85139.189
Model C10 is alias for POISSON+G+FMIX{C10pi1:1:0.1191344178,C10pi2:1:0.0874372456,C10pi3:1:0.1037105070,C10pi4:1:0.0922584809,C10pi5:1:0.1070492801,C10pi6:1:0.1329945166,C10pi7:1:0.0538028458,C10pi8:1:0.0691986212,C10pi9:1:0.1319937434,C10pi10:1:0.1024203429}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
729  C10           41735.434    262 83994.867    221806.867   84817.983
Model C20 is alias for POISSON+G+FMIX{C20pi1:1:0.0559910600,C20pi2:1:0.0514824870,C20pi3:1:0.0812922124,C20pi4:1:0.0721976867,C20pi5:1:0.0556718858,C20pi6:1:0.0331003080,C20pi7:1:0.0589501763,C20pi8:1:0.0263756889,C20pi9:1:0.0307584220,C20pi10:1:0.0376701125,C20pi11:1:0.0303058290,C20pi12:1:0.0808775576,C20pi13:1:0.0263349134,C20pi14:1:0.0579101455,C20pi15:1:0.0371248064,C20pi16:1:0.0586867766,C20pi17:1:0.0561479138,C20pi18:1:0.0349810886,C20pi19:1:0.0544937394,C20pi20:1:0.0596471901}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
730  C20           41126.598    262 82777.195    220589.195   83600.311
Model C30 is alias for POISSON+G+FMIX{C30pi1:1:0.0095783264,C30pi2:1:0.0248476365,C30pi3:1:0.0636309366,C30pi4:1:0.0537939225,C30pi5:1:0.0295885587,C30pi6:1:0.0117587936,C30pi7:1:0.0132013428,C30pi8:1:0.0236868805,C30pi9:1:0.0261687659,C30pi10:1:0.0239821974,C30pi11:1:0.0257100906,C30pi12:1:0.0465072425,C30pi13:1:0.0546794546,C30pi14:1:0.0536085131,C30pi15:1:0.0270622670,C30pi16:1:0.0403913593,C30pi17:1:0.0474212700,C30pi18:1:0.0458816478,C30pi19:1:0.0214036510,C30pi20:1:0.0290385981,C30pi21:1:0.0123391793,C30pi22:1:0.0569350229,C30pi23:1:0.0419687568,C30pi24:1:0.0339027062,C30pi25:1:0.0388777376,C30pi26:1:0.0196343766,C30pi27:1:0.0233086174,C30pi28:1:0.0622722654,C30pi29:1:0.0184803385,C30pi30:1:0.0203395454}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
731  C30           40922.158    262 82368.315    220180.315   83191.431
Model C40 is alias for POISSON+G+FMIX{C40pi1:1:0.0223853788,C40pi2:1:0.0338891820,C40pi3:1:0.0577169375,C40pi4:1:0.0252416233,C40pi5:1:0.0108607921,C40pi6:1:0.0462373793,C40pi7:1:0.0102293175,C40pi8:1:0.0147523625,C40pi9:1:0.0143161352,C40pi10:1:0.0182302541,C40pi11:1:0.0204025079,C40pi12:1:0.0425505156,C40pi13:1:0.0248627269,C40pi14:1:0.0105892988,C40pi15:1:0.0188238725,C40pi16:1:0.0086663445,C40pi17:1:0.0148496147,C40pi18:1:0.0343037402,C40pi19:1:0.0225335203,C40pi20:1:0.0174068578,C40pi21:1:0.0112207827,C40pi22:1:0.0443532245,C40pi23:1:0.0392573370,C40pi24:1:0.0196756555,C40pi25:1:0.0287690328,C40pi26:1:0.0114441177,C40pi27:1:0.0112338740,C40pi28:1:0.0582694099,C40pi29:1:0.0444272279,C40pi30:1:0.0112010942,C40pi31:1:0.0145176111,C40pi32:1:0.0114629026,C40pi33:1:0.0239628061,C40pi34:1:0.0266266492,C40pi35:1:0.0481201159,C40pi36:1:0.0371147423,C40pi37:1:0.0160476688,C40pi38:1:0.0237249267,C40pi39:1:0.0235226203,C40pi40:1:0.0261998398}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
732  C40           40807.282    262 82138.565    219950.565   82961.681
Model C50 is alias for POISSON+G+FMIX{C50pi1:1:0.0164297003,C50pi2:1:0.0273175755,C50pi3:1:0.0460247610,C50pi4:1:0.0084864734,C50pi5:1:0.0125389252,C50pi6:1:0.0343549036,C50pi7:1:0.0130241102,C50pi8:1:0.0094755681,C50pi9:1:0.0190040551,C50pi10:1:0.0151902354,C50pi11:1:0.0320534760,C50pi12:1:0.0210059850,C50pi13:1:0.0237408547,C50pi14:1:0.0239841203,C50pi15:1:0.0213748021,C50pi16:1:0.0210717705,C50pi17:1:0.0050241805,C50pi18:1:0.0166262276,C50pi19:1:0.0143945956,C50pi20:1:0.0104391130,C50pi21:1:0.0107628277,C50pi22:1:0.0148818171,C50pi23:1:0.0321480239,C50pi24:1:0.0145477978,C50pi25:1:0.0332355807,C50pi26:1:0.0143190281,C50pi27:1:0.0234478734,C50pi28:1:0.0183044983,C50pi29:1:0.0403269452,C50pi30:1:0.0135629530,C50pi31:1:0.0091880799,C50pi32:1:0.0158270022,C50pi33:1:0.0121019379,C50pi34:1:0.0353560982,C50pi35:1:0.0404495617,C50pi36:1:0.0104569232,C50pi37:1:0.0146187792,C50pi38:1:0.0093984095,C50pi39:1:0.0146773809,C50pi40:1:0.0201635562,C50pi41:1:0.0255640273,C50pi42:1:0.0039486842,C50pi43:1:0.0393652608,C50pi44:1:0.0056415419,C50pi45:1:0.0382833580,C50pi46:1:0.0039735086,C50pi47:1:0.0140269355,C50pi48:1:0.0476703673,C50pi49:1:0.0204062788,C50pi50:1:0.0117835304}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
733  C50           40722.867    262 81969.734    219781.734   82792.850
Model C60 is alias for POISSON+G+FMIX{C60pi1:1:0.0169698865,C60pi2:1:0.0211683374,C60pi3:1:0.0276589079,C60pi4:1:0.0065675964,C60pi5:1:0.0141221416,C60pi6:1:0.0068774834,C60pi7:1:0.0146909701,C60pi8:1:0.0067225777,C60pi9:1:0.0018396660,C60pi10:1:0.0102547197,C60pi11:1:0.0230896163,C60pi12:1:0.0057941033,C60pi13:1:0.0125394534,C60pi14:1:0.0204526478,C60pi15:1:0.0070629602,C60pi16:1:0.0117982741,C60pi17:1:0.0068334668,C60pi18:1:0.0433775839,C60pi19:1:0.0318278731,C60pi20:1:0.0222546108,C60pi21:1:0.0102264969,C60pi22:1:0.0150545891,C60pi23:1:0.0134159878,C60pi24:1:0.0148552065,C60pi25:1:0.0239111516,C60pi26:1:0.0128776278,C60pi27:1:0.0222318842,C60pi28:1:0.0247444742,C60pi29:1:0.0214274810,C60pi30:1:0.0115001882,C60pi31:1:0.0076017389,C60pi32:1:0.0130258568,C60pi33:1:0.0093701965,C60pi34:1:0.0467194264,C60pi35:1:0.0441940314,C60pi36:1:0.0322263154,C60pi37:1:0.0402999891,C60pi38:1:0.0150234227,C60pi39:1:0.0104589903,C60pi40:1:0.0214742395,C60pi41:1:0.0154957836,C60pi42:1:0.0101789953,C60pi43:1:0.0227980379,C60pi44:1:0.0123204539,C60pi45:1:0.0066777583,C60pi46:1:0.0004150083,C60pi47:1:0.0344385130,C60pi48:1:0.0113663379,C60pi49:1:0.0127143049,C60pi50:1:0.0124323741,C60pi51:1:0.0262124415,C60pi52:1:0.0064994957,C60pi53:1:0.0103203293,C60pi54:1:0.0142463512,C60pi55:1:0.0215600067,C60pi56:1:0.0199150700,C60pi57:1:0.0038964200,C60pi58:1:0.0113448855,C60pi59:1:0.0128595846,C60pi60:1:0.0117656776}
WARNING: Your input class weight 0.000415008 is very small and may cause numerical issues
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
734  C60           40737.710    262 81999.420    219811.420   82822.536
Model EX2 is alias for MIX{BurEX2:0.672020808818762,ExpEX2:1.6413466609931}
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
735  EX2           42373.904    262 85271.808    223083.808   86094.924
Model EX3 is alias for MIX{BurEX3:0.427672756793791,IntEX3:0.837595938019774,HExEX3:1.51863631431518}
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
736  EX3           42240.984    263 85007.969    223871.969   85834.226
Model EHO is alias for MIX{ExtEHO:0.720274356,HelEHO:0.976798797,OthEHO:0.783109376}
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
737  EHO           42976.586    263 86479.173    225343.173   87305.430
Model UL2 is alias for MIX{M1_UL2:0.581348617,M2_UL2:1.465482789}
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
738  UL2           42592.170    262 85708.340    223520.340   86531.456
Model UL3 is alias for MIX{Q1_UL3:0.484340397,Q2_UL3:0.492780514,Q3_UL3:1.15597274}
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
739  UL3           43036.383    263 86598.767    225462.767   87425.025
Model EX_EHO is alias for MIX{BUR_EXT:0.761816796788931,BUR_HEL:0.744425646802117,BUR_OTH:0.532457759429489,EXP_EXT:1.5639387472863,EXP_HEL:2.06403411829438,EXP_OTH:1.43336795177594}
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
740  EX_EHO        41862.094    266 84256.188    226300.188   85091.870
Model LG4M is alias for MIX{LG4M1,LG4M2,LG4M3,LG4M4}*G4
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
741  LG4M          41926.243    262 84376.487    222188.487   85199.603
Model LG4X is alias for MIX{LG4X1,LG4X2,LG4X3,LG4X4}*R4
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
742  LG4X          41878.732    267 84291.464    227403.464   85130.288
Model CF4 is alias for POISSON+FMIX{Fclass1,Fclass2,Fclass3,Fclass4}+F+G
WARNING: Normalizing State frequencies so that sum of them equals to 1
WARNING: Normalizing State frequencies so that sum of them equals to 1
WARNING: Normalizing State frequencies so that sum of them equals to 1
WARNING: Normalizing State frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
743  CF4           42675.122    285 85920.243    248940.243   86815.617
Model LG+C10 is alias for LG+POISSON+G+FMIX{C10pi1:1:0.1191344178,C10pi2:1:0.0874372456,C10pi3:1:0.1037105070,C10pi4:1:0.0922584809,C10pi5:1:0.1070492801,C10pi6:1:0.1329945166,C10pi7:1:0.0538028458,C10pi8:1:0.0691986212,C10pi9:1:0.1319937434,C10pi10:1:0.1024203429}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
744  LG+C10        41731.847    262 83987.694    221799.694   84810.810
Model LG+C20 is alias for LG+POISSON+G+FMIX{C20pi1:1:0.0559910600,C20pi2:1:0.0514824870,C20pi3:1:0.0812922124,C20pi4:1:0.0721976867,C20pi5:1:0.0556718858,C20pi6:1:0.0331003080,C20pi7:1:0.0589501763,C20pi8:1:0.0263756889,C20pi9:1:0.0307584220,C20pi10:1:0.0376701125,C20pi11:1:0.0303058290,C20pi12:1:0.0808775576,C20pi13:1:0.0263349134,C20pi14:1:0.0579101455,C20pi15:1:0.0371248064,C20pi16:1:0.0586867766,C20pi17:1:0.0561479138,C20pi18:1:0.0349810886,C20pi19:1:0.0544937394,C20pi20:1:0.0596471901}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
745  LG+C20        41293.323    262 83110.647    220922.647   83933.763
Model LG+C30 is alias for LG+POISSON+G+FMIX{C30pi1:1:0.0095783264,C30pi2:1:0.0248476365,C30pi3:1:0.0636309366,C30pi4:1:0.0537939225,C30pi5:1:0.0295885587,C30pi6:1:0.0117587936,C30pi7:1:0.0132013428,C30pi8:1:0.0236868805,C30pi9:1:0.0261687659,C30pi10:1:0.0239821974,C30pi11:1:0.0257100906,C30pi12:1:0.0465072425,C30pi13:1:0.0546794546,C30pi14:1:0.0536085131,C30pi15:1:0.0270622670,C30pi16:1:0.0403913593,C30pi17:1:0.0474212700,C30pi18:1:0.0458816478,C30pi19:1:0.0214036510,C30pi20:1:0.0290385981,C30pi21:1:0.0123391793,C30pi22:1:0.0569350229,C30pi23:1:0.0419687568,C30pi24:1:0.0339027062,C30pi25:1:0.0388777376,C30pi26:1:0.0196343766,C30pi27:1:0.0233086174,C30pi28:1:0.0622722654,C30pi29:1:0.0184803385,C30pi30:1:0.0203395454}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
746  LG+C30        41089.396    262 82702.793    220514.793   83525.909
Model LG+C40 is alias for LG+POISSON+G+FMIX{C40pi1:1:0.0223853788,C40pi2:1:0.0338891820,C40pi3:1:0.0577169375,C40pi4:1:0.0252416233,C40pi5:1:0.0108607921,C40pi6:1:0.0462373793,C40pi7:1:0.0102293175,C40pi8:1:0.0147523625,C40pi9:1:0.0143161352,C40pi10:1:0.0182302541,C40pi11:1:0.0204025079,C40pi12:1:0.0425505156,C40pi13:1:0.0248627269,C40pi14:1:0.0105892988,C40pi15:1:0.0188238725,C40pi16:1:0.0086663445,C40pi17:1:0.0148496147,C40pi18:1:0.0343037402,C40pi19:1:0.0225335203,C40pi20:1:0.0174068578,C40pi21:1:0.0112207827,C40pi22:1:0.0443532245,C40pi23:1:0.0392573370,C40pi24:1:0.0196756555,C40pi25:1:0.0287690328,C40pi26:1:0.0114441177,C40pi27:1:0.0112338740,C40pi28:1:0.0582694099,C40pi29:1:0.0444272279,C40pi30:1:0.0112010942,C40pi31:1:0.0145176111,C40pi32:1:0.0114629026,C40pi33:1:0.0239628061,C40pi34:1:0.0266266492,C40pi35:1:0.0481201159,C40pi36:1:0.0371147423,C40pi37:1:0.0160476688,C40pi38:1:0.0237249267,C40pi39:1:0.0235226203,C40pi40:1:0.0261998398}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
747  LG+C40        40910.181    262 82344.363    220156.363   83167.479
Model LG+C50 is alias for LG+POISSON+G+FMIX{C50pi1:1:0.0164297003,C50pi2:1:0.0273175755,C50pi3:1:0.0460247610,C50pi4:1:0.0084864734,C50pi5:1:0.0125389252,C50pi6:1:0.0343549036,C50pi7:1:0.0130241102,C50pi8:1:0.0094755681,C50pi9:1:0.0190040551,C50pi10:1:0.0151902354,C50pi11:1:0.0320534760,C50pi12:1:0.0210059850,C50pi13:1:0.0237408547,C50pi14:1:0.0239841203,C50pi15:1:0.0213748021,C50pi16:1:0.0210717705,C50pi17:1:0.0050241805,C50pi18:1:0.0166262276,C50pi19:1:0.0143945956,C50pi20:1:0.0104391130,C50pi21:1:0.0107628277,C50pi22:1:0.0148818171,C50pi23:1:0.0321480239,C50pi24:1:0.0145477978,C50pi25:1:0.0332355807,C50pi26:1:0.0143190281,C50pi27:1:0.0234478734,C50pi28:1:0.0183044983,C50pi29:1:0.0403269452,C50pi30:1:0.0135629530,C50pi31:1:0.0091880799,C50pi32:1:0.0158270022,C50pi33:1:0.0121019379,C50pi34:1:0.0353560982,C50pi35:1:0.0404495617,C50pi36:1:0.0104569232,C50pi37:1:0.0146187792,C50pi38:1:0.0093984095,C50pi39:1:0.0146773809,C50pi40:1:0.0201635562,C50pi41:1:0.0255640273,C50pi42:1:0.0039486842,C50pi43:1:0.0393652608,C50pi44:1:0.0056415419,C50pi45:1:0.0382833580,C50pi46:1:0.0039735086,C50pi47:1:0.0140269355,C50pi48:1:0.0476703673,C50pi49:1:0.0204062788,C50pi50:1:0.0117835304}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
748  LG+C50        40961.576    262 82447.152    220259.152   83270.268
Model LG+C60 is alias for LG+POISSON+G+FMIX{C60pi1:1:0.0169698865,C60pi2:1:0.0211683374,C60pi3:1:0.0276589079,C60pi4:1:0.0065675964,C60pi5:1:0.0141221416,C60pi6:1:0.0068774834,C60pi7:1:0.0146909701,C60pi8:1:0.0067225777,C60pi9:1:0.0018396660,C60pi10:1:0.0102547197,C60pi11:1:0.0230896163,C60pi12:1:0.0057941033,C60pi13:1:0.0125394534,C60pi14:1:0.0204526478,C60pi15:1:0.0070629602,C60pi16:1:0.0117982741,C60pi17:1:0.0068334668,C60pi18:1:0.0433775839,C60pi19:1:0.0318278731,C60pi20:1:0.0222546108,C60pi21:1:0.0102264969,C60pi22:1:0.0150545891,C60pi23:1:0.0134159878,C60pi24:1:0.0148552065,C60pi25:1:0.0239111516,C60pi26:1:0.0128776278,C60pi27:1:0.0222318842,C60pi28:1:0.0247444742,C60pi29:1:0.0214274810,C60pi30:1:0.0115001882,C60pi31:1:0.0076017389,C60pi32:1:0.0130258568,C60pi33:1:0.0093701965,C60pi34:1:0.0467194264,C60pi35:1:0.0441940314,C60pi36:1:0.0322263154,C60pi37:1:0.0402999891,C60pi38:1:0.0150234227,C60pi39:1:0.0104589903,C60pi40:1:0.0214742395,C60pi41:1:0.0154957836,C60pi42:1:0.0101789953,C60pi43:1:0.0227980379,C60pi44:1:0.0123204539,C60pi45:1:0.0066777583,C60pi46:1:0.0004150083,C60pi47:1:0.0344385130,C60pi48:1:0.0113663379,C60pi49:1:0.0127143049,C60pi50:1:0.0124323741,C60pi51:1:0.0262124415,C60pi52:1:0.0064994957,C60pi53:1:0.0103203293,C60pi54:1:0.0142463512,C60pi55:1:0.0215600067,C60pi56:1:0.0199150700,C60pi57:1:0.0038964200,C60pi58:1:0.0113448855,C60pi59:1:0.0128595846,C60pi60:1:0.0117656776}
WARNING: Your input class weight 0.000415008 is very small and may cause numerical issues
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
749  LG+C60        40937.936    262 82399.873    220211.873   83222.988
Akaike Information Criterion:           C50
Corrected Akaike Information Criterion: C50
Bayesian Information Criterion:         C50
Best-fit model: C50 chosen according to BIC

All model information printed to iqtree_gene_trees/COG2847.model.gz
CPU time for ModelFinder: 24270.188 seconds (6h:44m:30s)
Wall-clock time for ModelFinder: 2451.425 seconds (0h:40m:51s)
Generating 1000 samples for ultrafast bootstrap (seed: 751871)...
Model C50 is alias for POISSON+G+FMIX{C50pi1:1:0.0164297003,C50pi2:1:0.0273175755,C50pi3:1:0.0460247610,C50pi4:1:0.0084864734,C50pi5:1:0.0125389252,C50pi6:1:0.0343549036,C50pi7:1:0.0130241102,C50pi8:1:0.0094755681,C50pi9:1:0.0190040551,C50pi10:1:0.0151902354,C50pi11:1:0.0320534760,C50pi12:1:0.0210059850,C50pi13:1:0.0237408547,C50pi14:1:0.0239841203,C50pi15:1:0.0213748021,C50pi16:1:0.0210717705,C50pi17:1:0.0050241805,C50pi18:1:0.0166262276,C50pi19:1:0.0143945956,C50pi20:1:0.0104391130,C50pi21:1:0.0107628277,C50pi22:1:0.0148818171,C50pi23:1:0.0321480239,C50pi24:1:0.0145477978,C50pi25:1:0.0332355807,C50pi26:1:0.0143190281,C50pi27:1:0.0234478734,C50pi28:1:0.0183044983,C50pi29:1:0.0403269452,C50pi30:1:0.0135629530,C50pi31:1:0.0091880799,C50pi32:1:0.0158270022,C50pi33:1:0.0121019379,C50pi34:1:0.0353560982,C50pi35:1:0.0404495617,C50pi36:1:0.0104569232,C50pi37:1:0.0146187792,C50pi38:1:0.0093984095,C50pi39:1:0.0146773809,C50pi40:1:0.0201635562,C50pi41:1:0.0255640273,C50pi42:1:0.0039486842,C50pi43:1:0.0393652608,C50pi44:1:0.0056415419,C50pi45:1:0.0382833580,C50pi46:1:0.0039735086,C50pi47:1:0.0140269355,C50pi48:1:0.0476703673,C50pi49:1:0.0204062788,C50pi50:1:0.0117835304}

NOTE: 784 MB RAM (0 GB) is required!
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
Estimate model parameters (epsilon = 0.100)
1. Initial log-likelihood: -40722.867
Optimal log-likelihood: -40722.859
Mixture weights: 0.016 0.027 0.046 0.008 0.013 0.034 0.013 0.009 0.019 0.015 0.032 0.021 0.024 0.024 0.021 0.021 0.005 0.017 0.014 0.010 0.011 0.015 0.032 0.015 0.033 0.014 0.023 0.018 0.040 0.014 0.009 0.016 0.012 0.035 0.040 0.010 0.015 0.009 0.015 0.020 0.026 0.004 0.039 0.006 0.038 0.004 0.014 0.048 0.020 0.012
Gamma shape alpha: 1.308
Parameters optimization took 1 rounds (3.786 sec)
Wrote distance file to... 
Computing ML distances based on estimated model parameters...
Calculating distance matrix: done in 0.423051 secs using 999.6% CPU
Computing ML distances took 0.423610 sec (of wall-clock time) 4.233287 sec (of CPU time)
WARNING: Some pairwise ML distances are too long (saturated)
Setting up auxiliary I and S matrices: done in 0.00254378 secs using 436.6% CPU
Constructing RapidNJ tree: done in 0.185978 secs using 295.1% CPU
Computing RapidNJ tree took 0.188815 sec (of wall-clock time) 0.560870 sec (of CPU time)
Log-likelihood of RapidNJ tree: -40540.385
--------------------------------------------------------------------
|             INITIALIZING CANDIDATE TREE SET                      |
--------------------------------------------------------------------
Generating 98 parsimony trees... 6.372 second
Computing log-likelihood of 98 initial trees ... 159.804 seconds
Current best score: -40540.385

Do NNI search on 20 best initial trees
Optimizing NNI: done in 61.28 secs using 988.4% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 1: -40426.213
Optimizing NNI: done in 60.5335 secs using 989.7% CPU
Optimizing NNI: done in 76.9434 secs using 988.6% CPU
Optimizing NNI: done in 92.1975 secs using 989.7% CPU
Optimizing NNI: done in 95.5066 secs using 990.3% CPU
Optimizing NNI: done in 108.063 secs using 989.8% CPU
Optimizing NNI: done in 71.2688 secs using 991.9% CPU
Optimizing NNI: done in 72.3118 secs using 989.6% CPU
Optimizing NNI: done in 75.3502 secs using 987.6% CPU
Optimizing NNI: done in 96.849 secs using 989.1% CPU
Iteration 10 / LogL: -40542.974 / Time: 0h:16m:50s
Optimizing NNI: done in 104.031 secs using 990.2% CPU
Optimizing NNI: done in 77.6925 secs using 991.5% CPU
Optimizing NNI: done in 86.1801 secs using 991.3% CPU
Optimizing NNI: done in 92.8525 secs using 990% CPU
Optimizing NNI: done in 84.3124 secs using 990.7% CPU
Optimizing NNI: done in 87.2678 secs using 990.1% CPU
Optimizing NNI: done in 74.6456 secs using 991.2% CPU
Optimizing NNI: done in 87.3174 secs using 990.2% CPU
Optimizing NNI: done in 78.1535 secs using 988.6% CPU
Optimizing NNI: done in 102.887 secs using 988.7% CPU
Iteration 20 / LogL: -40576.762 / Time: 0h:31m:27s
Finish initializing candidate tree set (20)
Current best tree score: -40426.213 / CPU time: 1866.459
Number of iterations: 20
--------------------------------------------------------------------
|               OPTIMIZING CANDIDATE TREE SET                      |
--------------------------------------------------------------------
Optimizing NNI: done in 51.5621 secs using 991.7% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 21: -40420.148
Optimizing NNI: done in 60.8122 secs using 989.4% CPU
Optimizing NNI: done in 50.6745 secs using 987.8% CPU
Optimizing NNI: done in 59.8137 secs using 989.1% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 24: -40418.467
Optimizing NNI: done in 53.4986 secs using 988.9% CPU
Optimizing NNI: done in 45.599 secs using 989.4% CPU
Optimizing NNI: done in 56.4638 secs using 987.7% CPU
Optimizing NNI: done in 52.533 secs using 983.8% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 28: -40417.093
Optimizing NNI: done in 42.013 secs using 987.1% CPU
Optimizing NNI: done in 31.9851 secs using 992.6% CPU
Iteration 30 / LogL: -40419.621 / Time: 0h:40m:13s (2h:15m:56s left)
Optimizing NNI: done in 29.4547 secs using 993.7% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 31: -40408.511
Optimizing NNI: done in 51.9071 secs using 994.3% CPU
Optimizing NNI: done in 37.1045 secs using 989.8% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 33: -40403.699
Optimizing NNI: done in 42.026 secs using 988.6% CPU
Optimizing NNI: done in 47.2576 secs using 990.6% CPU
Optimizing NNI: done in 42.4291 secs using 989.6% CPU
Optimizing NNI: done in 37.67 secs using 990.3% CPU
Optimizing NNI: done in 41.5345 secs using 988.8% CPU
Optimizing NNI: done in 43.0765 secs using 987.5% CPU
Optimizing NNI: done in 45.3038 secs using 989.1% CPU
Iteration 40 / LogL: -40418.819 / Time: 0h:47m:21s (1h:52m:55s left)
Optimizing NNI: done in 59.6336 secs using 990.3% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 41: -40402.106
Optimizing NNI: done in 43.2977 secs using 990.9% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 42: -40396.566
Optimizing NNI: done in 44.7268 secs using 989.9% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 43: -40395.107
Optimizing NNI: done in 64.4358 secs using 990.2% CPU
Optimizing NNI: done in 43.5839 secs using 989.4% CPU
Optimizing NNI: done in 42.8537 secs using 989.6% CPU
Optimizing NNI: done in 43.3472 secs using 988.5% CPU
Optimizing NNI: done in 46.4541 secs using 989.3% CPU
Optimizing NNI: done in 46.1244 secs using 989.5% CPU
Optimizing NNI: done in 61.325 secs using 989% CPU
Iteration 50 / LogL: -40400.745 / Time: 0h:55m:51s (1h:46m:0s left)
Log-likelihood cutoff on original alignment: -40552.314
UFBoot trees printed to iqtree_gene_trees/COG2847.ufboot
Optimizing NNI: done in 42.9451 secs using 990.8% CPU
Optimizing NNI: done in 40.2876 secs using 989.6% CPU
Optimizing NNI: done in 33.9206 secs using 987.5% CPU
Optimizing NNI: done in 61.3689 secs using 988.5% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 54: -40388.072
Optimizing NNI: done in 48.112 secs using 982.3% CPU
Optimizing NNI: done in 40.6897 secs using 990.3% CPU
Optimizing NNI: done in 43.2354 secs using 983.9% CPU
Optimizing NNI: done in 37.7334 secs using 993.1% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 58: -40386.348
Optimizing NNI: done in 31.1581 secs using 994.1% CPU
Optimizing NNI: done in 38.247 secs using 992.7% CPU
Iteration 60 / LogL: -40388.712 / Time: 1h:3m:0s (1h:44m:38s left)
Optimizing NNI: done in 41.7274 secs using 990% CPU
Optimizing NNI: done in 38.7145 secs using 991.4% CPU
Optimizing NNI: done in 28.6913 secs using 996.2% CPU
Optimizing NNI: done in 30.4147 secs using 993.5% CPU
Optimizing NNI: done in 28.9537 secs using 995.2% CPU
Optimizing NNI: done in 33.9255 secs using 994.2% CPU
Optimizing NNI: done in 29.0452 secs using 993.6% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 67: -40386.095
Optimizing NNI: done in 24.0404 secs using 993.3% CPU
Optimizing NNI: done in 31.7034 secs using 994.8% CPU
Optimizing NNI: done in 37.1556 secs using 990.4% CPU
Iteration 70 / LogL: -40402.081 / Time: 1h:8m:30s (1h:36m:18s left)
Optimizing NNI: done in 34.9192 secs using 992.9% CPU
Optimizing NNI: done in 32.9271 secs using 994.5% CPU
Optimizing NNI: done in 33.1901 secs using 993.3% CPU
Optimizing NNI: done in 30.6278 secs using 989.2% CPU
Optimizing NNI: done in 38.9468 secs using 987.6% CPU
Optimizing NNI: done in 28.9987 secs using 993.1% CPU
Optimizing NNI: done in 27.9965 secs using 994.2% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 77: -40384.781
Optimizing NNI: done in 36.8232 secs using 993.8% CPU
Optimizing NNI: done in 43.1526 secs using 989.4% CPU
Optimizing NNI: done in 37.8305 secs using 988.8% CPU
Iteration 80 / LogL: -40387.918 / Time: 1h:14m:22s (1h:31m:19s left)
Optimizing NNI: done in 35.7438 secs using 987.5% CPU
Optimizing NNI: done in 42.7071 secs using 988.7% CPU
Optimizing NNI: done in 45.1027 secs using 990.4% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 83: -40384.300
Optimizing NNI: done in 38.8929 secs using 989.2% CPU
Optimizing NNI: done in 38.5795 secs using 989.5% CPU
Optimizing NNI: done in 44.349 secs using 987.9% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 86: -40383.309
Optimizing NNI: done in 29.9865 secs using 988.8% CPU
Optimizing NNI: done in 43.3209 secs using 989.4% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 88: -40382.863
Optimizing NNI: done in 37.9458 secs using 989% CPU
Optimizing NNI: done in 43.5685 secs using 989.4% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 90: -40374.661
Iteration 90 / LogL: -40374.661 / Time: 1h:21m:23s (1h:31m:27s left)
Optimizing NNI: done in 42.6512 secs using 987.6% CPU
Optimizing NNI: done in 45.7296 secs using 989.4% CPU
Optimizing NNI: done in 38.8241 secs using 987.3% CPU
Optimizing NNI: done in 36.4124 secs using 989% CPU
Optimizing NNI: done in 29.527 secs using 990.2% CPU
Optimizing NNI: done in 36.7458 secs using 988.2% CPU
Optimizing NNI: done in 44.8344 secs using 987.2% CPU
Optimizing NNI: done in 46.3595 secs using 989.6% CPU
Optimizing NNI: done in 28.3065 secs using 989.2% CPU
Optimizing NNI: done in 32.2811 secs using 988.6% CPU
Iteration 100 / LogL: -40378.916 / Time: 1h:27m:48s (1h:19m:49s left)
Log-likelihood cutoff on original alignment: -40550.039
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.817
NOTE: UFBoot does not converge, continue at least 100 more iterations
UFBoot trees printed to iqtree_gene_trees/COG2847.ufboot
Optimizing NNI: done in 50.7769 secs using 987.6% CPU
Optimizing NNI: done in 42.9391 secs using 987.4% CPU
Optimizing NNI: done in 41.0201 secs using 987% CPU
Optimizing NNI: done in 38.8793 secs using 988.3% CPU
Optimizing NNI: done in 29.4707 secs using 988.3% CPU
Optimizing NNI: done in 43.2794 secs using 988.8% CPU
Optimizing NNI: done in 46.3642 secs using 988.7% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 107: -40374.511
Optimizing NNI: done in 29.0915 secs using 987.4% CPU
Optimizing NNI: done in 42.6343 secs using 988.8% CPU
Optimizing NNI: done in 42.2471 secs using 987.7% CPU
Iteration 110 / LogL: -40379.654 / Time: 1h:34m:44s (1h:24m:18s left)
Optimizing NNI: done in 35.3714 secs using 988.8% CPU
Optimizing NNI: done in 36.3448 secs using 988.3% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 112: -40372.964
Optimizing NNI: done in 33.7731 secs using 987.4% CPU
Optimizing NNI: done in 34.8346 secs using 986.7% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 114: -40372.681
Optimizing NNI: done in 40.2742 secs using 988.3% CPU
Optimizing NNI: done in 37.8865 secs using 987.5% CPU
Optimizing NNI: done in 35.4876 secs using 988.8% CPU
Optimizing NNI: done in 38.7268 secs using 988% CPU
Optimizing NNI: done in 46.2126 secs using 987.4% CPU
Optimizing NNI: done in 33.4859 secs using 987.6% CPU
Iteration 120 / LogL: -40376.098 / Time: 1h:41m:8s (1h:19m:53s left)
Optimizing NNI: done in 47.4002 secs using 988.3% CPU
Optimizing NNI: done in 36.1747 secs using 988.2% CPU
Optimizing NNI: done in 33.965 secs using 989.6% CPU
Optimizing NNI: done in 32.6329 secs using 989.3% CPU
Optimizing NNI: done in 41.6568 secs using 989.6% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 125: -40372.398
Optimizing NNI: done in 49.7946 secs using 989.6% CPU
Optimizing NNI: done in 41.6964 secs using 987.6% CPU
Optimizing NNI: done in 35.0825 secs using 989% CPU
Optimizing NNI: done in 33.2254 secs using 990.1% CPU
Optimizing NNI: done in 41.8239 secs using 988% CPU
Iteration 130 / LogL: -40379.403 / Time: 1h:47m:50s (1h:19m:24s left)
Optimizing NNI: done in 37.2938 secs using 989.5% CPU
Optimizing NNI: done in 42.606 secs using 989.5% CPU
Optimizing NNI: done in 41.0429 secs using 989.4% CPU
Optimizing NNI: done in 43.2022 secs using 990.2% CPU
Optimizing NNI: done in 28.2317 secs using 989.6% CPU
Optimizing NNI: done in 30.8802 secs using 988.1% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 136: -40371.899
Optimizing NNI: done in 35.4343 secs using 988.9% CPU
Optimizing NNI: done in 36.6839 secs using 989.5% CPU
Optimizing NNI: done in 42.3905 secs using 989.4% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 139: -40371.663
Optimizing NNI: done in 43.2563 secs using 989.9% CPU
Iteration 140 / LogL: -40372.710 / Time: 1h:54m:22s (1h:21m:27s left)
Optimizing NNI: done in 54.0617 secs using 987.5% CPU
Optimizing NNI: done in 38.0057 secs using 991.3% CPU
Optimizing NNI: done in 30.8166 secs using 988.7% CPU
Optimizing NNI: done in 37.5508 secs using 989.1% CPU
Optimizing NNI: done in 39.7408 secs using 987.8% CPU
Optimizing NNI: done in 34.7356 secs using 987.5% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 146: -40368.466
Optimizing NNI: done in 39.4045 secs using 988.5% CPU
Optimizing NNI: done in 44.1936 secs using 989.8% CPU
Optimizing NNI: done in 30.5479 secs using 989.2% CPU
Optimizing NNI: done in 43.098 secs using 989.2% CPU
Iteration 150 / LogL: -40372.737 / Time: 2h:1m:1s (1h:17m:58s left)
Log-likelihood cutoff on original alignment: -40550.039
UFBoot trees printed to iqtree_gene_trees/COG2847.ufboot
Optimizing NNI: done in 35.817 secs using 987.9% CPU
Optimizing NNI: done in 43.4169 secs using 987.9% CPU
Optimizing NNI: done in 35.1137 secs using 989.8% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 153: -40368.050
Optimizing NNI: done in 31.0422 secs using 993.1% CPU
Optimizing NNI: done in 44.4275 secs using 994.4% CPU
Optimizing NNI: done in 30.9638 secs using 994.5% CPU
Optimizing NNI: done in 32.1957 secs using 993.7% CPU
Optimizing NNI: done in 31.1089 secs using 994.6% CPU
Optimizing NNI: done in 26.4552 secs using 994.3% CPU
Optimizing NNI: done in 41.0418 secs using 994.8% CPU
Iteration 160 / LogL: -40372.592 / Time: 2h:7m:2s (1h:14m:18s left)
Optimizing NNI: done in 33.1308 secs using 994.5% CPU
Optimizing NNI: done in 34.1819 secs using 994.3% CPU
Optimizing NNI: done in 29.6736 secs using 993.9% CPU
Optimizing NNI: done in 31.7744 secs using 994.7% CPU
Optimizing NNI: done in 35.8956 secs using 994.1% CPU
Optimizing NNI: done in 31.5601 secs using 994.6% CPU
Optimizing NNI: done in 39.3178 secs using 994.2% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 167: -40367.809
Optimizing NNI: done in 29.0481 secs using 994.5% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 168: -40367.350
Optimizing NNI: done in 35.0344 secs using 994.7% CPU
Optimizing NNI: done in 32.6698 secs using 993.4% CPU
Iteration 170 / LogL: -40371.004 / Time: 2h:12m:44s (1h:16m:58s left)
Optimizing NNI: done in 36.3747 secs using 994.6% CPU
Optimizing NNI: done in 35.5148 secs using 992.7% CPU
Optimizing NNI: done in 28.6317 secs using 993.7% CPU
Optimizing NNI: done in 32.1187 secs using 994.4% CPU
Optimizing NNI: done in 31.3474 secs using 994.3% CPU
Optimizing NNI: done in 32.5636 secs using 993.9% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 176: -40364.403
Optimizing NNI: done in 35.2151 secs using 994% CPU
Optimizing NNI: done in 29.5751 secs using 992.9% CPU
Optimizing NNI: done in 32.1234 secs using 994.7% CPU
Optimizing NNI: done in 38.6597 secs using 994.2% CPU
Iteration 180 / LogL: -40374.400 / Time: 2h:18m:23s (1h:14m:13s left)
Optimizing NNI: done in 36.9091 secs using 993.2% CPU
Optimizing NNI: done in 31.7151 secs using 993.8% CPU
Optimizing NNI: done in 33.3298 secs using 994.5% CPU
Optimizing NNI: done in 33.4886 secs using 992.2% CPU
Optimizing NNI: done in 34.7652 secs using 993% CPU
Optimizing NNI: done in 33.9165 secs using 992.7% CPU
Optimizing NNI: done in 27.8718 secs using 993.2% CPU
Optimizing NNI: done in 28.0661 secs using 994.1% CPU
Optimizing NNI: done in 30.5642 secs using 993.4% CPU
Optimizing NNI: done in 32.3156 secs using 992.3% CPU
Iteration 190 / LogL: -40407.548 / Time: 2h:23m:49s (1h:5m:26s left)
Optimizing NNI: done in 32.9809 secs using 991.9% CPU
Optimizing NNI: done in 30.359 secs using 993.8% CPU
Optimizing NNI: done in 35.6312 secs using 992.9% CPU
Optimizing NNI: done in 29.8356 secs using 994.4% CPU
Optimizing NNI: done in 30.2735 secs using 984.2% CPU
Optimizing NNI: done in 30.3794 secs using 991.9% CPU
Optimizing NNI: done in 29.0677 secs using 996.2% CPU
Optimizing NNI: done in 29.1135 secs using 995.9% CPU
Optimizing NNI: done in 29.0092 secs using 995.7% CPU
Optimizing NNI: done in 27.1694 secs using 996.1% CPU
Iteration 200 / LogL: -40365.189 / Time: 2h:28m:56s (0h:56m:53s left)
Log-likelihood cutoff on original alignment: -40550.039
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.902
NOTE: UFBoot does not converge, continue at least 100 more iterations
UFBoot trees printed to iqtree_gene_trees/COG2847.ufboot
Optimizing NNI: done in 49.2241 secs using 989.5% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 201: -40361.415
Optimizing NNI: done in 31.5165 secs using 988% CPU
Optimizing NNI: done in 30.5289 secs using 989.3% CPU
Optimizing NNI: done in 34.5727 secs using 989.1% CPU
Optimizing NNI: done in 30.0405 secs using 987.5% CPU
Optimizing NNI: done in 33.3891 secs using 987.7% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 206: -40361.303
Optimizing NNI: done in 32.7146 secs using 990.1% CPU
Optimizing NNI: done in 33.2813 secs using 987.9% CPU
Optimizing NNI: done in 32.6747 secs using 989.8% CPU
Optimizing NNI: done in 34.7419 secs using 989.2% CPU
Iteration 210 / LogL: -40364.403 / Time: 2h:34m:52s (1h:11m:8s left)
Optimizing NNI: done in 41.5433 secs using 989.3% CPU
Optimizing NNI: done in 42.2056 secs using 987.1% CPU
Optimizing NNI: done in 33.9697 secs using 989.1% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 213: -40359.983
Optimizing NNI: done in 33.5423 secs using 988.1% CPU
Optimizing NNI: done in 38.8711 secs using 987.5% CPU
Optimizing NNI: done in 39.9017 secs using 988% CPU
Optimizing NNI: done in 41.4551 secs using 989.3% CPU
Optimizing NNI: done in 38.7157 secs using 990.1% CPU
Optimizing NNI: done in 38.8699 secs using 989.4% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 219: -40358.598
Optimizing NNI: done in 36.8881 secs using 988.6% CPU
Iteration 220 / LogL: -40359.628 / Time: 2h:41m:29s (1h:13m:0s left)
Optimizing NNI: done in 33.2561 secs using 989.9% CPU
Optimizing NNI: done in 34.7644 secs using 989.4% CPU
Optimizing NNI: done in 42.5744 secs using 989.4% CPU
Optimizing NNI: done in 36.1424 secs using 988.8% CPU
Optimizing NNI: done in 32.6829 secs using 987.6% CPU
Optimizing NNI: done in 39.2152 secs using 989% CPU
Optimizing NNI: done in 42.93 secs using 988.1% CPU
Optimizing NNI: done in 29.8657 secs using 989% CPU
Optimizing NNI: done in 34.3143 secs using 986.6% CPU
Optimizing NNI: done in 39.1831 secs using 987% CPU
Iteration 230 / LogL: -40365.510 / Time: 2h:47m:38s (1h:5m:9s left)
Optimizing NNI: done in 43.6285 secs using 988% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 231: -40358.443
Optimizing NNI: done in 44.4274 secs using 987.5% CPU
Optimizing NNI: done in 31.2525 secs using 987.9% CPU
Optimizing NNI: done in 36.9296 secs using 990.8% CPU
Optimizing NNI: done in 33.9252 secs using 987.9% CPU
Optimizing NNI: done in 37.2282 secs using 989% CPU
Optimizing NNI: done in 31.5924 secs using 989.2% CPU
Optimizing NNI: done in 35.8762 secs using 987.4% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 238: -40358.315
Optimizing NNI: done in 29.287 secs using 988.4% CPU
Optimizing NNI: done in 30.9971 secs using 987.9% CPU
Iteration 240 / LogL: -40358.809 / Time: 2h:53m:45s (1h:11m:14s left)
Optimizing NNI: done in 36.199 secs using 989% CPU
Optimizing NNI: done in 32.1561 secs using 989.6% CPU
Optimizing NNI: done in 38.1928 secs using 987.5% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 243: -40354.469
Optimizing NNI: done in 39.5872 secs using 989.4% CPU
Optimizing NNI: done in 31.5749 secs using 984.9% CPU
Optimizing NNI: done in 37.2338 secs using 985.2% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 246: -40353.121
Optimizing NNI: done in 34.4002 secs using 986.6% CPU
Optimizing NNI: done in 45.7821 secs using 985.6% CPU
Optimizing NNI: done in 34.2069 secs using 987.1% CPU
Optimizing NNI: done in 34.4249 secs using 988.6% CPU
Iteration 250 / LogL: -40357.780 / Time: 3h:0m:0s (1h:9m:24s left)
Log-likelihood cutoff on original alignment: -40550.039
UFBoot trees printed to iqtree_gene_trees/COG2847.ufboot
Optimizing NNI: done in 33.1844 secs using 987.2% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 251: -40351.863
Optimizing NNI: done in 43.6213 secs using 988.1% CPU
Optimizing NNI: done in 34.2898 secs using 989.6% CPU
Optimizing NNI: done in 32.6449 secs using 988.4% CPU
Optimizing NNI: done in 34.456 secs using 988% CPU
Optimizing NNI: done in 37.7976 secs using 990.3% CPU
Optimizing NNI: done in 32.7604 secs using 987.4% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 257: -40349.594
Optimizing NNI: done in 40.6977 secs using 990.7% CPU
Optimizing NNI: done in 30.5697 secs using 988.7% CPU
Optimizing NNI: done in 36.1473 secs using 988.2% CPU
Iteration 260 / LogL: -40360.557 / Time: 3h:6m:10s (1h:9m:43s left)
Optimizing NNI: done in 35.841 secs using 985.3% CPU
Optimizing NNI: done in 33.6369 secs using 988.7% CPU
Optimizing NNI: done in 36.6391 secs using 990.6% CPU
Optimizing NNI: done in 33.6489 secs using 990.4% CPU
Optimizing NNI: done in 34.4109 secs using 987.1% CPU
Optimizing NNI: done in 30.4653 secs using 989.3% CPU
Optimizing NNI: done in 34.1907 secs using 989.3% CPU
Optimizing NNI: done in 44.0742 secs using 987.9% CPU
Optimizing NNI: done in 30.7108 secs using 988.4% CPU
Optimizing NNI: done in 30.6773 secs using 988.2% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 270: -40349.096
Iteration 270 / LogL: -40349.096 / Time: 3h:12m:2s (1h:11m:23s left)
Optimizing NNI: done in 30.3495 secs using 990.6% CPU
Optimizing NNI: done in 32.4456 secs using 988.8% CPU
Optimizing NNI: done in 34.0513 secs using 989% CPU
Optimizing NNI: done in 31.2197 secs using 988.2% CPU
Optimizing NNI: done in 39.8341 secs using 987% CPU
Optimizing NNI: done in 31.2645 secs using 987.7% CPU
Optimizing NNI: done in 33.6692 secs using 990.1% CPU
Optimizing NNI: done in 32.062 secs using 989.3% CPU
Optimizing NNI: done in 34.1017 secs using 989.3% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 279: -40348.483
Optimizing NNI: done in 30.0744 secs using 987.5% CPU
Iteration 280 / LogL: -40348.664 / Time: 3h:17m:39s (1h:10m:8s left)
Optimizing NNI: done in 26.7699 secs using 989.2% CPU
Optimizing NNI: done in 31.2874 secs using 988% CPU
Optimizing NNI: done in 30.9669 secs using 989.6% CPU
Optimizing NNI: done in 34.9214 secs using 987.7% CPU
Optimizing NNI: done in 26.6906 secs using 988.5% CPU
Optimizing NNI: done in 39.8982 secs using 988.2% CPU
Optimizing NNI: done in 29.3572 secs using 988.1% CPU
Optimizing NNI: done in 28.1414 secs using 987% CPU
Optimizing NNI: done in 30.0611 secs using 990.1% CPU
Optimizing NNI: done in 35.149 secs using 987.8% CPU
Iteration 290 / LogL: -40361.588 / Time: 3h:22m:56s (1h:2m:29s left)
Optimizing NNI: done in 32.1187 secs using 989.1% CPU
Optimizing NNI: done in 41.0393 secs using 989.7% CPU
Optimizing NNI: done in 51.1239 secs using 989.2% CPU
Optimizing NNI: done in 32.6837 secs using 989.6% CPU
Optimizing NNI: done in 28.2886 secs using 989.1% CPU
Optimizing NNI: done in 31.2358 secs using 988.8% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 296: -40347.200
Optimizing NNI: done in 38.4898 secs using 989.8% CPU
Optimizing NNI: done in 33.1857 secs using 987.4% CPU
Optimizing NNI: done in 31.5884 secs using 987.4% CPU
Optimizing NNI: done in 35.0163 secs using 987.4% CPU
Iteration 300 / LogL: -40348.090 / Time: 3h:28m:59s (1h:7m:6s left)
Log-likelihood cutoff on original alignment: -40550.039
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.829
NOTE: UFBoot does not converge, continue at least 100 more iterations
UFBoot trees printed to iqtree_gene_trees/COG2847.ufboot
Optimizing NNI: done in 36.3149 secs using 986.4% CPU
Optimizing NNI: done in 39.4979 secs using 987.9% CPU
Optimizing NNI: done in 24.8249 secs using 988.9% CPU
Optimizing NNI: done in 33.0057 secs using 987.7% CPU
Optimizing NNI: done in 34.4415 secs using 987.9% CPU
Optimizing NNI: done in 31.884 secs using 989.1% CPU
Optimizing NNI: done in 40.9169 secs using 988.9% CPU
Optimizing NNI: done in 31.0748 secs using 988.5% CPU
Optimizing NNI: done in 40.4033 secs using 987.7% CPU
Optimizing NNI: done in 25.7174 secs using 988.4% CPU
Iteration 310 / LogL: -40352.710 / Time: 3h:34m:43s (1h:2m:32s left)
Optimizing NNI: done in 31.312 secs using 989.1% CPU
Optimizing NNI: done in 31.9876 secs using 987% CPU
Optimizing NNI: done in 44.9963 secs using 989.4% CPU
Optimizing NNI: done in 24.5003 secs using 990.9% CPU
Optimizing NNI: done in 28.5059 secs using 988.4% CPU
Optimizing NNI: done in 33.2351 secs using 988% CPU
Optimizing NNI: done in 33.6929 secs using 989% CPU
Optimizing NNI: done in 28.5588 secs using 989.1% CPU
Optimizing NNI: done in 33.1057 secs using 988.2% CPU
Optimizing NNI: done in 30.6007 secs using 990% CPU
Iteration 320 / LogL: -40349.667 / Time: 3h:40m:8s (0h:55m:12s left)
Optimizing NNI: done in 33.7542 secs using 988.8% CPU
Optimizing NNI: done in 32.1413 secs using 989.6% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 322: -40346.876
Optimizing NNI: done in 31.9986 secs using 987.9% CPU
Optimizing NNI: done in 32.2823 secs using 990% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 324: -40345.598
Optimizing NNI: done in 33.7667 secs using 990.4% CPU
Optimizing NNI: done in 31.6232 secs using 989.2% CPU
Optimizing NNI: done in 40.5082 secs using 989.8% CPU
Optimizing NNI: done in 33.8032 secs using 990.7% CPU
Optimizing NNI: done in 35.5369 secs using 990.1% CPU
Optimizing NNI: done in 30.397 secs using 988.7% CPU
Iteration 330 / LogL: -40346.343 / Time: 3h:45m:54s (1h:4m:32s left)
Optimizing NNI: done in 32.3987 secs using 988.1% CPU
Optimizing NNI: done in 39.8225 secs using 988.3% CPU
Optimizing NNI: done in 36.7087 secs using 990.4% CPU
Optimizing NNI: done in 27.7169 secs using 986.4% CPU
Optimizing NNI: done in 34.8398 secs using 988.9% CPU
Optimizing NNI: done in 38.074 secs using 989.8% CPU
Optimizing NNI: done in 32.7 secs using 989.8% CPU
Optimizing NNI: done in 38.5 secs using 988.1% CPU
Optimizing NNI: done in 29.3955 secs using 987.5% CPU
Optimizing NNI: done in 30.3161 secs using 990.2% CPU
Iteration 340 / LogL: -40358.630 / Time: 3h:51m:39s (0h:57m:24s left)
Optimizing NNI: done in 32.4763 secs using 989.8% CPU
Optimizing NNI: done in 41.4844 secs using 988.6% CPU
Optimizing NNI: done in 36.8636 secs using 988.3% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 343: -40342.696
Optimizing NNI: done in 30.8971 secs using 988.9% CPU
Optimizing NNI: done in 34.5696 secs using 990.4% CPU
Optimizing NNI: done in 24.5748 secs using 988.5% CPU
Optimizing NNI: done in 27.9286 secs using 988.6% CPU
Optimizing NNI: done in 26.0073 secs using 989.4% CPU
Optimizing NNI: done in 31.9975 secs using 989.4% CPU
Optimizing NNI: done in 33.2318 secs using 988.6% CPU
Iteration 350 / LogL: -40347.973 / Time: 3h:57m:7s (1h:3m:11s left)
Log-likelihood cutoff on original alignment: -40550.039
UFBoot trees printed to iqtree_gene_trees/COG2847.ufboot
Optimizing NNI: done in 34.6054 secs using 990.2% CPU
Optimizing NNI: done in 32.3458 secs using 990.5% CPU
Optimizing NNI: done in 43.6778 secs using 988% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 353: -40342.599
Optimizing NNI: done in 31.5031 secs using 989.4% CPU
Optimizing NNI: done in 36.9369 secs using 988.5% CPU
Optimizing NNI: done in 43.1528 secs using 988.8% CPU
Optimizing NNI: done in 28.1831 secs using 990.8% CPU
Optimizing NNI: done in 32.6458 secs using 987.3% CPU
Optimizing NNI: done in 30.9913 secs using 988.3% CPU
Optimizing NNI: done in 31.9534 secs using 987.9% CPU
Iteration 360 / LogL: -40343.281 / Time: 4h:3m:2s (1h:2m:57s left)
Optimizing NNI: done in 32.7084 secs using 988.6% CPU
Optimizing NNI: done in 36.3442 secs using 988.7% CPU
Optimizing NNI: done in 36.5471 secs using 985.5% CPU
Optimizing NNI: done in 35.0298 secs using 985.9% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 364: -40340.385
Optimizing NNI: done in 39.6027 secs using 987.1% CPU
Optimizing NNI: done in 31.4277 secs using 986.8% CPU
Optimizing NNI: done in 32.182 secs using 986.1% CPU
Optimizing NNI: done in 29.5585 secs using 990.4% CPU
Optimizing NNI: done in 32.818 secs using 985.7% CPU
Optimizing NNI: done in 34.3081 secs using 986.7% CPU
Iteration 370 / LogL: -40340.771 / Time: 4h:8m:51s (1h:3m:23s left)
Optimizing NNI: done in 43.2908 secs using 987.8% CPU
Optimizing NNI: done in 34.7923 secs using 989.8% CPU
Optimizing NNI: done in 40.3105 secs using 990.5% CPU
Optimizing NNI: done in 34.8573 secs using 990.6% CPU
Optimizing NNI: done in 32.6514 secs using 991.1% CPU
Optimizing NNI: done in 37.6974 secs using 989.6% CPU
Optimizing NNI: done in 37.6764 secs using 986.6% CPU
Optimizing NNI: done in 32.552 secs using 988.5% CPU
Optimizing NNI: done in 34.3264 secs using 989% CPU
Optimizing NNI: done in 38.8503 secs using 987.9% CPU
Iteration 380 / LogL: -40350.166 / Time: 4h:15m:3s (0h:56m:31s left)
Optimizing NNI: done in 36.7769 secs using 989.8% CPU
Optimizing NNI: done in 33.955 secs using 990.6% CPU
Optimizing NNI: done in 35.7061 secs using 988.2% CPU
Optimizing NNI: done in 37.354 secs using 984.4% CPU
Optimizing NNI: done in 38.0852 secs using 985.1% CPU
Optimizing NNI: done in 31.7543 secs using 988.7% CPU
Optimizing NNI: done in 39.0148 secs using 987.6% CPU
Optimizing NNI: done in 38.5027 secs using 986.1% CPU
Optimizing NNI: done in 35.0456 secs using 989.4% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 389: -40340.158
Optimizing NNI: done in 34.0332 secs using 990.2% CPU
Iteration 390 / LogL: -40343.005 / Time: 4h:21m:12s (1h:6m:28s left)
Optimizing NNI: done in 33.3567 secs using 988.9% CPU
Optimizing NNI: done in 32.8949 secs using 987.4% CPU
Optimizing NNI: done in 36.5983 secs using 987.4% CPU
Optimizing NNI: done in 31.3162 secs using 987.8% CPU
Optimizing NNI: done in 42.5321 secs using 987.7% CPU
Optimizing NNI: done in 42.1658 secs using 990.3% CPU
Optimizing NNI: done in 38.3843 secs using 989.4% CPU
Optimizing NNI: done in 35.8625 secs using 988.7% CPU
Optimizing NNI: done in 37.6914 secs using 988.1% CPU
Optimizing NNI: done in 38.95 secs using 989.7% CPU
Iteration 400 / LogL: -40347.343 / Time: 4h:27m:26s (0h:59m:39s left)
Log-likelihood cutoff on original alignment: -40550.039
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.804
NOTE: UFBoot does not converge, continue at least 100 more iterations
UFBoot trees printed to iqtree_gene_trees/COG2847.ufboot
Optimizing NNI: done in 42.8416 secs using 990.5% CPU
Optimizing NNI: done in 41.1273 secs using 988.4% CPU
Optimizing NNI: done in 37.9998 secs using 987.6% CPU
Optimizing NNI: done in 33.4491 secs using 987.2% CPU
Optimizing NNI: done in 41.1274 secs using 988% CPU
Optimizing NNI: done in 40.8497 secs using 988.6% CPU
Optimizing NNI: done in 41.856 secs using 989.5% CPU
Optimizing NNI: done in 39.2346 secs using 989.9% CPU
Optimizing NNI: done in 32.579 secs using 989.3% CPU
Optimizing NNI: done in 44.6872 secs using 987.8% CPU
Iteration 410 / LogL: -40343.662 / Time: 4h:34m:9s (1h:0m:19s left)
Optimizing NNI: done in 31.0272 secs using 987.7% CPU
Optimizing NNI: done in 40.8278 secs using 987.6% CPU
Optimizing NNI: done in 32.0654 secs using 990.7% CPU
Optimizing NNI: done in 36.8374 secs using 987.5% CPU
Optimizing NNI: done in 39.8719 secs using 987.5% CPU
Optimizing NNI: done in 39.0109 secs using 987.3% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 416: -40338.830
Optimizing NNI: done in 38.2458 secs using 987.9% CPU
Optimizing NNI: done in 36.4997 secs using 988.9% CPU
Optimizing NNI: done in 37.3346 secs using 988.5% CPU
Optimizing NNI: done in 33.7911 secs using 985.8% CPU
Iteration 420 / LogL: -40340.460 / Time: 4h:40m:23s (1h:4m:14s left)
Optimizing NNI: done in 38.7854 secs using 989.3% CPU
Optimizing NNI: done in 38.0433 secs using 988.5% CPU
Optimizing NNI: done in 35.6186 secs using 988% CPU
Optimizing NNI: done in 43.8134 secs using 989.9% CPU
Optimizing NNI: done in 31.6071 secs using 989% CPU
Optimizing NNI: done in 32.7074 secs using 988% CPU
Optimizing NNI: done in 39.09 secs using 987.8% CPU
Optimizing NNI: done in 34.7287 secs using 989.7% CPU
Optimizing NNI: done in 35.7517 secs using 988.1% CPU
Optimizing NNI: done in 35.4324 secs using 990.2% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 430: -40337.992
Iteration 430 / LogL: -40337.992 / Time: 4h:46m:39s (1h:6m:49s left)
Optimizing NNI: done in 41.7307 secs using 985.9% CPU
Optimizing NNI: done in 43.9419 secs using 987% CPU
Optimizing NNI: done in 46.5165 secs using 986.2% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 433: -40337.668
Optimizing NNI: done in 43.983 secs using 987.5% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 434: -40335.982
Optimizing NNI: done in 34.3216 secs using 990% CPU
Optimizing NNI: done in 32.83 secs using 989.3% CPU
Optimizing NNI: done in 37.4189 secs using 988.6% CPU
Optimizing NNI: done in 46.6888 secs using 985% CPU
Optimizing NNI: done in 33.0846 secs using 988.5% CPU
Optimizing NNI: done in 46.0561 secs using 988.7% CPU
Iteration 440 / LogL: -40340.346 / Time: 4h:53m:39s (1h:2m:52s left)
Optimizing NNI: done in 42.0898 secs using 989.5% CPU
Optimizing NNI: done in 38.8911 secs using 988.6% CPU
Optimizing NNI: done in 35.6399 secs using 990.1% CPU
Optimizing NNI: done in 39.1386 secs using 989.1% CPU
Optimizing NNI: done in 36.4245 secs using 987.9% CPU
Optimizing NNI: done in 34.3525 secs using 989.3% CPU
Optimizing NNI: done in 37.3524 secs using 989.2% CPU
Optimizing NNI: done in 42.3722 secs using 988.8% CPU
Optimizing NNI: done in 39.4526 secs using 989.4% CPU
Optimizing NNI: done in 29.8808 secs using 988.2% CPU
Iteration 450 / LogL: -40337.795 / Time: 5h:0m:0s (0h:56m:7s left)
Log-likelihood cutoff on original alignment: -40550.039
UFBoot trees printed to iqtree_gene_trees/COG2847.ufboot
Optimizing NNI: done in 48.3999 secs using 985.6% CPU
Optimizing NNI: done in 37.4469 secs using 987.1% CPU
Optimizing NNI: done in 48.079 secs using 987.8% CPU
Optimizing NNI: done in 28.9319 secs using 987.4% CPU
Optimizing NNI: done in 37.4814 secs using 989.9% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 455: -40334.447
Optimizing NNI: done in 40.4935 secs using 988.8% CPU
Optimizing NNI: done in 40.2961 secs using 988.1% CPU
Optimizing NNI: done in 38.1613 secs using 989.4% CPU
Optimizing NNI: done in 47.5196 secs using 988.3% CPU
Optimizing NNI: done in 39.9053 secs using 987.8% CPU
Iteration 460 / LogL: -40336.427 / Time: 5h:6m:58s (1h:3m:32s left)
Optimizing NNI: done in 36.0645 secs using 988.6% CPU
Optimizing NNI: done in 41.0379 secs using 987.8% CPU
Optimizing NNI: done in 39.4738 secs using 988.1% CPU
Optimizing NNI: done in 41.5943 secs using 988.8% CPU
Optimizing NNI: done in 35.829 secs using 990.2% CPU
Optimizing NNI: done in 38.0646 secs using 988.6% CPU
Optimizing NNI: done in 38.7489 secs using 988.8% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 467: -40334.187
Optimizing NNI: done in 35.1281 secs using 988.1% CPU
Optimizing NNI: done in 34.1968 secs using 988.7% CPU
Optimizing NNI: done in 41.5339 secs using 988.8% CPU
Iteration 470 / LogL: -40339.951 / Time: 5h:13m:29s (1h:4m:50s left)
Optimizing NNI: done in 44.3949 secs using 988% CPU
Optimizing NNI: done in 39.0871 secs using 989.1% CPU
Optimizing NNI: done in 44.0717 secs using 989.1% CPU
Optimizing NNI: done in 40.247 secs using 987.7% CPU
Optimizing NNI: done in 37.6809 secs using 989% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 475: -40334.031
Optimizing NNI: done in 33.7156 secs using 988.5% CPU
Optimizing NNI: done in 36.6375 secs using 989.1% CPU
Optimizing NNI: done in 46.3092 secs using 987.2% CPU
Optimizing NNI: done in 38.173 secs using 989.4% CPU
Optimizing NNI: done in 47.5663 secs using 989.1% CPU
Iteration 480 / LogL: -40335.753 / Time: 5h:20m:26s (1h:3m:33s left)
Optimizing NNI: done in 39.3741 secs using 988.6% CPU
Optimizing NNI: done in 41.0691 secs using 989.2% CPU
Optimizing NNI: done in 37.5626 secs using 989.9% CPU
Optimizing NNI: done in 42.0938 secs using 990.1% CPU
Optimizing NNI: done in 41.1409 secs using 989.5% CPU
Optimizing NNI: done in 41.3501 secs using 988.2% CPU
Optimizing NNI: done in 34.4487 secs using 989.1% CPU
Optimizing NNI: done in 49.9622 secs using 990.6% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 488: -40333.807
Optimizing NNI: done in 30.4246 secs using 988.7% CPU
Optimizing NNI: done in 48.64 secs using 989% CPU
Iteration 490 / LogL: -40336.216 / Time: 5h:27m:21s (1h:5m:36s left)
Optimizing NNI: done in 37.5641 secs using 985.9% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 491: -40333.629
Optimizing NNI: done in 33.7131 secs using 989.3% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 492: -40333.260
Optimizing NNI: done in 31.4142 secs using 987.8% CPU
Optimizing NNI: done in 32.5819 secs using 987.8% CPU
Optimizing NNI: done in 41.8306 secs using 988.4% CPU
Optimizing NNI: done in 36.548 secs using 988.5% CPU
Optimizing NNI: done in 29.1703 secs using 988.5% CPU
Optimizing NNI: done in 39.2266 secs using 988.7% CPU
Optimizing NNI: done in 38.2161 secs using 986.8% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 499: -40333.143
Optimizing NNI: done in 36.181 secs using 989.3% CPU
Iteration 500 / LogL: -40336.156 / Time: 5h:33m:36s (1h:6m:11s left)
Log-likelihood cutoff on original alignment: -40550.039
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.827
NOTE: UFBoot does not converge, continue at least 100 more iterations
UFBoot trees printed to iqtree_gene_trees/COG2847.ufboot
Optimizing NNI: done in 40.1717 secs using 987.5% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 501: -40333.087
Optimizing NNI: done in 41.8086 secs using 988.9% CPU
Optimizing NNI: done in 37.5947 secs using 987.3% CPU
Optimizing NNI: done in 44.9381 secs using 987.6% CPU
Optimizing NNI: done in 42.3633 secs using 987.1% CPU
Optimizing NNI: done in 41.8008 secs using 989.4% CPU
Optimizing NNI: done in 38.5665 secs using 987% CPU
Optimizing NNI: done in 31.9642 secs using 989.3% CPU
Optimizing NNI: done in 35.2509 secs using 988.3% CPU
Optimizing NNI: done in 39.8156 secs using 988% CPU
Iteration 510 / LogL: -40335.253 / Time: 5h:40m:22s (1h:0m:51s left)
Optimizing NNI: done in 47.82 secs using 988.1% CPU
Optimizing NNI: done in 34.0205 secs using 988.3% CPU
Optimizing NNI: done in 38.3761 secs using 987.7% CPU
Optimizing NNI: done in 47.5785 secs using 988.5% CPU
Optimizing NNI: done in 36.9653 secs using 987.3% CPU
Optimizing NNI: done in 40.4858 secs using 988.1% CPU
Optimizing NNI: done in 34.5198 secs using 988.6% CPU
Optimizing NNI: done in 38.246 secs using 989.2% CPU
Optimizing NNI: done in 42.4281 secs using 987.4% CPU
Optimizing NNI: done in 40.0152 secs using 986.7% CPU
Iteration 520 / LogL: -40335.397 / Time: 5h:47m:8s (0h:54m:10s left)
Optimizing NNI: done in 31.8781 secs using 989.7% CPU
Optimizing NNI: done in 53.3551 secs using 989.8% CPU
Optimizing NNI: done in 41.7491 secs using 989.5% CPU
Optimizing NNI: done in 37.4273 secs using 989.3% CPU
Optimizing NNI: done in 49.307 secs using 988.6% CPU
Optimizing NNI: done in 41.6084 secs using 989% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 526: -40331.588
Optimizing NNI: done in 41.1531 secs using 989.4% CPU
Optimizing NNI: done in 37.4998 secs using 988.2% CPU
Optimizing NNI: done in 38.4721 secs using 988.6% CPU
Optimizing NNI: done in 40.6589 secs using 988.1% CPU
Iteration 530 / LogL: -40331.685 / Time: 5h:54m:11s (1h:4m:16s left)
Optimizing NNI: done in 43.1282 secs using 988.9% CPU
Optimizing NNI: done in 39.4215 secs using 988% CPU
Optimizing NNI: done in 34.7349 secs using 988.6% CPU
Optimizing NNI: done in 36.7705 secs using 989.7% CPU
Optimizing NNI: done in 35.4457 secs using 988.5% CPU
Optimizing NNI: done in 38.3736 secs using 989.8% CPU
Optimizing NNI: done in 36.4645 secs using 989.7% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 537: -40331.513
Optimizing NNI: done in 38.6935 secs using 987.8% CPU
Optimizing NNI: done in 46.8122 secs using 988.2% CPU
Optimizing NNI: done in 44.1776 secs using 988.8% CPU
Iteration 540 / LogL: -40334.301 / Time: 6h:0m:55s (1h:4m:57s left)
Optimizing NNI: done in 40.5028 secs using 988.3% CPU
Optimizing NNI: done in 42.1101 secs using 988.7% CPU
Optimizing NNI: done in 38.114 secs using 988.3% CPU
Optimizing NNI: done in 39.4204 secs using 987.5% CPU
Optimizing NNI: done in 44.6332 secs using 983.2% CPU
Optimizing NNI: done in 37.5355 secs using 987.7% CPU
Optimizing NNI: done in 44.2431 secs using 988.3% CPU
Optimizing NNI: done in 40.7295 secs using 989.4% CPU
Optimizing NNI: done in 36.1858 secs using 985.2% CPU
Optimizing NNI: done in 41.7281 secs using 989.7% CPU
Iteration 550 / LogL: -40344.220 / Time: 6h:7m:46s (0h:58m:16s left)
Log-likelihood cutoff on original alignment: -40550.039
UFBoot trees printed to iqtree_gene_trees/COG2847.ufboot
Optimizing NNI: done in 51.2435 secs using 987.2% CPU
Optimizing NNI: done in 39.9366 secs using 988.1% CPU
Optimizing NNI: done in 43.233 secs using 986.7% CPU
Optimizing NNI: done in 53.6371 secs using 986.9% CPU
Optimizing NNI: done in 46.3433 secs using 988% CPU
Optimizing NNI: done in 40.6154 secs using 987.7% CPU
Optimizing NNI: done in 38.9152 secs using 987.7% CPU
Optimizing NNI: done in 48.7605 secs using 986.1% CPU
Optimizing NNI: done in 39.4102 secs using 988.8% CPU
Optimizing NNI: done in 37.632 secs using 988.8% CPU
Iteration 560 / LogL: -40336.435 / Time: 6h:15m:13s (0h:51m:41s left)
Optimizing NNI: done in 34.9823 secs using 988% CPU
Optimizing NNI: done in 40.6412 secs using 988.5% CPU
Optimizing NNI: done in 39.1061 secs using 989.4% CPU
Optimizing NNI: done in 56.1548 secs using 986.7% CPU
Optimizing NNI: done in 50.5084 secs using 988.2% CPU
Optimizing NNI: done in 35.837 secs using 988.5% CPU
Optimizing NNI: done in 36.4673 secs using 989.4% CPU
Optimizing NNI: done in 38.9983 secs using 989.1% CPU
Optimizing NNI: done in 44.8268 secs using 985% CPU
Optimizing NNI: done in 48.1359 secs using 982% CPU
Iteration 570 / LogL: -40332.443 / Time: 6h:22m:24s (0h:45m:1s left)
Optimizing NNI: done in 55.833 secs using 983.8% CPU
Optimizing NNI: done in 35.5696 secs using 989.1% CPU
Optimizing NNI: done in 40.775 secs using 986.4% CPU
Optimizing NNI: done in 51.321 secs using 987.9% CPU
Optimizing NNI: done in 49.3219 secs using 988.2% CPU
Optimizing NNI: done in 41.5072 secs using 989.4% CPU
Optimizing NNI: done in 42.2821 secs using 988.7% CPU
Optimizing NNI: done in 42.0545 secs using 991.6% CPU
Optimizing NNI: done in 33.1213 secs using 990.1% CPU
Optimizing NNI: done in 53.7883 secs using 987.4% CPU
Iteration 580 / LogL: -40336.738 / Time: 6h:29m:56s (0h:38m:23s left)
Optimizing NNI: done in 51.2896 secs using 988% CPU
Optimizing NNI: done in 55.6749 secs using 989.1% CPU
Optimizing NNI: done in 45.3979 secs using 987.4% CPU
Optimizing NNI: done in 40.0447 secs using 988.5% CPU
Optimizing NNI: done in 63.5708 secs using 985.4% CPU
Optimizing NNI: done in 50.6992 secs using 985.8% CPU
Optimizing NNI: done in 42.4525 secs using 989.9% CPU
Optimizing NNI: done in 35.7871 secs using 991.6% CPU
Optimizing NNI: done in 53.3305 secs using 991.9% CPU
Optimizing NNI: done in 52.9635 secs using 987.1% CPU
Iteration 590 / LogL: -40337.715 / Time: 6h:38m:13s (0h:31m:46s left)
Optimizing NNI: done in 54.7982 secs using 987.6% CPU
Optimizing NNI: done in 40.4705 secs using 989.7% CPU
Optimizing NNI: done in 52.2611 secs using 984.9% CPU
Optimizing NNI: done in 45.4565 secs using 985.6% CPU
Optimizing NNI: done in 46.9827 secs using 988.2% CPU
Optimizing NNI: done in 37.9547 secs using 988.9% CPU
Optimizing NNI: done in 41.9037 secs using 987.5% CPU
Optimizing NNI: done in 50.2474 secs using 989.2% CPU
Optimizing NNI: done in 34.6501 secs using 987.2% CPU
Optimizing NNI: done in 49.9534 secs using 988.8% CPU
Iteration 600 / LogL: -40340.232 / Time: 6h:45m:53s (0h:25m:4s left)
Log-likelihood cutoff on original alignment: -40542.038
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.855
NOTE: UFBoot does not converge, continue at least 100 more iterations
UFBoot trees printed to iqtree_gene_trees/COG2847.ufboot
Optimizing NNI: done in 47.4007 secs using 988.4% CPU
Optimizing NNI: done in 43.0812 secs using 988.6% CPU
Optimizing NNI: done in 38.2263 secs using 990.1% CPU
Optimizing NNI: done in 44.5999 secs using 990% CPU
Optimizing NNI: done in 41.8101 secs using 991.3% CPU
BETTER TREE FOUND at iteration 605: -40331.506
Optimizing NNI: done in 39.7117 secs using 989.6% CPU
Optimizing NNI: done in 53.2214 secs using 989.5% CPU
Optimizing NNI: done in 40.6576 secs using 991% CPU
Optimizing NNI: done in 34.5583 secs using 990.1% CPU
Optimizing NNI: done in 41.0599 secs using 991.1% CPU
Iteration 610 / LogL: -40331.687 / Time: 6h:53m:5s (1h:4m:26s left)
Optimizing NNI: done in 64.9392 secs using 984.1% CPU
Optimizing NNI: done in 60.7052 secs using 986.6% CPU
Optimizing NNI: done in 43.9651 secs using 988.9% CPU
Optimizing NNI: done in 55.0756 secs using 985.7% CPU
Optimizing NNI: done in 44.2301 secs using 987.6% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 615: -40331.233
Optimizing NNI: done in 47.5999 secs using 989% CPU
Optimizing NNI: done in 36.2693 secs using 989.7% CPU
Optimizing NNI: done in 34.745 secs using 988.3% CPU
Optimizing NNI: done in 40.271 secs using 989.5% CPU
Optimizing NNI: done in 46.4881 secs using 986.4% CPU
Iteration 620 / LogL: -40335.151 / Time: 7h:1m:10s (1h:4m:38s left)
Optimizing NNI: done in 40.1383 secs using 986.1% CPU
Optimizing NNI: done in 36.4531 secs using 987.3% CPU
Optimizing NNI: done in 41.2242 secs using 986.9% CPU
Optimizing NNI: done in 33.35 secs using 987.5% CPU
Optimizing NNI: done in 39.9592 secs using 987.1% CPU
Optimizing NNI: done in 43.7318 secs using 983.6% CPU
Optimizing NNI: done in 40.2587 secs using 986.9% CPU
Optimizing NNI: done in 42.3262 secs using 986.3% CPU
Optimizing NNI: done in 40.5607 secs using 984.9% CPU
Optimizing NNI: done in 48.1236 secs using 984.9% CPU
Iteration 630 / LogL: -40335.421 / Time: 7h:8m:2s (0h:57m:50s left)
Optimizing NNI: done in 36.4576 secs using 986% CPU
Optimizing NNI: done in 43.9151 secs using 985.7% CPU
Optimizing NNI: done in 50.1591 secs using 986.1% CPU
Optimizing NNI: done in 35.1387 secs using 986.1% CPU
Optimizing NNI: done in 40.8395 secs using 987.8% CPU
Optimizing NNI: done in 34.502 secs using 987.7% CPU
Optimizing NNI: done in 36.842 secs using 986.2% CPU
Optimizing NNI: done in 40.1088 secs using 987% CPU
Optimizing NNI: done in 43.8249 secs using 985.3% CPU
Optimizing NNI: done in 41.7103 secs using 987% CPU
Iteration 640 / LogL: -40335.294 / Time: 7h:14m:51s (0h:51m:2s left)
Optimizing NNI: done in 37.0688 secs using 985.6% CPU
Optimizing NNI: done in 40.7428 secs using 986.1% CPU
Optimizing NNI: done in 50.3213 secs using 984.7% CPU
Optimizing NNI: done in 34.7186 secs using 984.8% CPU
Optimizing NNI: done in 50.6978 secs using 986.7% CPU
Optimizing NNI: done in 36.3711 secs using 986.8% CPU
Optimizing NNI: done in 44.743 secs using 985% CPU
Optimizing NNI: done in 46.8476 secs using 984.9% CPU
Optimizing NNI: done in 35.6272 secs using 985% CPU
Optimizing NNI: done in 42.9819 secs using 986.1% CPU
Iteration 650 / LogL: -40342.251 / Time: 7h:21m:57s (0h:44m:15s left)
Log-likelihood cutoff on original alignment: -40542.038
UFBoot trees printed to iqtree_gene_trees/COG2847.ufboot
Optimizing NNI: done in 38.9146 secs using 984% CPU
Optimizing NNI: done in 41.0189 secs using 985.8% CPU
Optimizing NNI: done in 39.0244 secs using 985.2% CPU
Optimizing NNI: done in 45.0186 secs using 984.5% CPU
Optimizing NNI: done in 38.1253 secs using 986.5% CPU
Optimizing NNI: done in 30.8553 secs using 986.2% CPU
Optimizing NNI: done in 43.1819 secs using 982.1% CPU
Optimizing NNI: done in 48.1285 secs using 985.1% CPU
Optimizing NNI: done in 32.6317 secs using 987.1% CPU
Optimizing NNI: done in 38.2495 secs using 986.8% CPU
Iteration 660 / LogL: -40331.497 / Time: 7h:28m:40s (0h:37m:26s left)
Optimizing NNI: done in 42.0884 secs using 984.9% CPU
Optimizing NNI: done in 41.2984 secs using 983.9% CPU
Optimizing NNI: done in 42.1364 secs using 985.3% CPU
Optimizing NNI: done in 46.6242 secs using 983.3% CPU
Optimizing NNI: done in 45.5299 secs using 985.6% CPU
Optimizing NNI: done in 34.0671 secs using 987.6% CPU
Optimizing NNI: done in 41.5654 secs using 984.9% CPU
Optimizing NNI: done in 43.0458 secs using 985% CPU
Optimizing NNI: done in 51.3534 secs using 983.3% CPU
Optimizing NNI: done in 41.4264 secs using 987.4% CPU
Iteration 670 / LogL: -40332.107 / Time: 7h:35m:55s (0h:30m:40s left)
Optimizing NNI: done in 55.0669 secs using 984.4% CPU
Optimizing NNI: done in 43.0307 secs using 985.8% CPU
Optimizing NNI: done in 32.4419 secs using 986.8% CPU
Optimizing NNI: done in 39.0885 secs using 983.9% CPU
Optimizing NNI: done in 49.1431 secs using 986.7% CPU
Optimizing NNI: done in 38.4852 secs using 986.9% CPU
Optimizing NNI: done in 31.1831 secs using 995% CPU
Optimizing NNI: done in 31.1381 secs using 995.9% CPU
Optimizing NNI: done in 30.7234 secs using 996% CPU
Optimizing NNI: done in 41.7985 secs using 995.9% CPU
Iteration 680 / LogL: -40336.762 / Time: 7h:42m:32s (0h:23m:50s left)
Optimizing NNI: done in 35.0482 secs using 996% CPU
Optimizing NNI: done in 25.0154 secs using 995.9% CPU
Optimizing NNI: done in 30.3382 secs using 995.5% CPU
Optimizing NNI: done in 28.6548 secs using 995.6% CPU
Optimizing NNI: done in 30.4017 secs using 995.8% CPU
Optimizing NNI: done in 29.813 secs using 995.9% CPU
Optimizing NNI: done in 33.5397 secs using 995.9% CPU
Optimizing NNI: done in 31.6033 secs using 995.9% CPU
Optimizing NNI: done in 33.8321 secs using 995% CPU
Optimizing NNI: done in 34.245 secs using 995.8% CPU
Iteration 690 / LogL: -40348.208 / Time: 7h:47m:50s (0h:16m:58s left)
Optimizing NNI: done in 26.4575 secs using 996.3% CPU
Optimizing NNI: done in 33.607 secs using 996.1% CPU
Optimizing NNI: done in 29.6128 secs using 993% CPU
Optimizing NNI: done in 36.228 secs using 994.5% CPU
Optimizing NNI: done in 29.1221 secs using 987.4% CPU
Optimizing NNI: done in 27.5783 secs using 987.3% CPU
Optimizing NNI: done in 32.8779 secs using 996% CPU
Optimizing NNI: done in 26.4317 secs using 996.7% CPU
Optimizing NNI: done in 40.3992 secs using 990.9% CPU
Optimizing NNI: done in 46.2032 secs using 988.4% CPU
Iteration 700 / LogL: -40331.295 / Time: 7h:53m:23s (0h:10m:9s left)
Log-likelihood cutoff on original alignment: -40542.038
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.879
NOTE: UFBoot does not converge, continue at least 100 more iterations
UFBoot trees printed to iqtree_gene_trees/COG2847.ufboot
Optimizing NNI: done in 33.6706 secs using 992.6% CPU
Optimizing NNI: done in 33.7528 secs using 986.5% CPU
Optimizing NNI: done in 37.0439 secs using 986.9% CPU
Optimizing NNI: done in 41.3049 secs using 987.3% CPU
Optimizing NNI: done in 33.3159 secs using 987.2% CPU
Optimizing NNI: done in 47.7707 secs using 985.9% CPU
Optimizing NNI: done in 40.5468 secs using 986.5% CPU
Optimizing NNI: done in 40.9799 secs using 987% CPU
Optimizing NNI: done in 31.3485 secs using 987.4% CPU
Optimizing NNI: done in 33.7279 secs using 987.9% CPU
Iteration 710 / LogL: -40342.480 / Time: 7h:59m:44s (1h:0m:53s left)
Optimizing NNI: done in 26.6554 secs using 992% CPU
Optimizing NNI: done in 31.1883 secs using 996.3% CPU
Optimizing NNI: done in 33.3378 secs using 996.4% CPU
Optimizing NNI: done in 30.7646 secs using 994.7% CPU
