IQ-TREE multicore version 2.2.0.3 COVID-edition for Linux 64-bit built Aug  2 2022
Developed by Bui Quang Minh, James Barbetti, Nguyen Lam Tung,
Olga Chernomor, Heiko Schmidt, Dominik Schrempf, Michael Woodhams, Ly Trong Nhan.

Host:    baross.its.carleton.edu (AVX2, FMA3, 755 GB RAM)
Command: iqtree -s gene_alignments/trimv2_COG1631.afa -m MFP -bb 1000 -wbtl -ntmax 10 -nt AUTO -T 10 --prefix iqtree_gene_trees/COG1631 -madd C10,C20,C30,C40,C50,C60,EX2,EX3,EHO,UL2,UL3,EX_EHO,LG4M,LG4X,CF4,LG+C10,LG+C20,LG+C30,LG+C40,LG+C50,LG+C60 -mrate E,I,G,I+G,R
Seed:    876864 (Using SPRNG - Scalable Parallel Random Number Generator)
Time:    Fri Apr  7 10:24:18 2023
Kernel:  AVX+FMA - 10 threads (96 CPU cores detected)

Reading alignment file gene_alignments/trimv2_COG1631.afa ... Fasta format detected
Reading fasta file: done in 0.000636901 secs using 54.33% CPU
Alignment most likely contains protein sequences
Constructing alignment: done in 0.00079225 secs using 796% CPU
Alignment has 80 sequences with 101 columns, 100 distinct patterns
91 parsimony-informative, 7 singleton sites, 3 constant sites
                                                                Gap/Ambiguity  Composition  p-value
Analyzing sequences: done in 4.68148e-05 secs using 818.1% CPU
   1  GCF.000091205.1.Eukaryota.Rhodophyta_XP_005535273.1               0.00%    passed     64.16%
   2  GCF.000970205.1.Archaea.Halobacteriota_NZ_CP009512.1_3057         9.90%    passed     81.43%
   3  GCA.002841105.1.Archaea.Altiarchaeota_PHDY01000094.1_6            6.93%    passed     67.66%
   4  GCA.002011085.1.Archaea.Thermoproteota_MTMB01000003.1_303         8.91%    passed     67.31%
   5  GCA.015473125.1.Eukaryota.Viridiplantae_GHP04969.1                0.00%    passed     91.42%
   6  GCA.001766825.1.Archaea.Halobacteriota_LYOR01000004.1_69          8.91%    passed     95.92%
   7  GCA.000002865.1.Eukaryota.Choanoflagellata_EDQ92915.1             0.00%    passed     97.01%
   8  GCA.003194435.1.Archaea.Halobacteriota_PQXC01000003.1_90         11.88%    passed     35.86%
   9  GCA.003034855.1.Archaea.Halobacteriota_PZKD01000076.1_40          9.90%    passed     58.48%
  10  GCA.001515205.2.Archaea.Hadarchaeota_LQMQ01000014.1_17            7.92%    passed     61.16%
  11  GCA.002779595.1.Archaea.Nanoarchaeota_PEWF01000004.1_6            5.94%    passed     91.02%
  12  GCA.000189635.1.Eukaryota.Ciliophora_EAR89808.1                   0.00%    passed     17.23%
  13  GCA.002011395.1.Archaea.Thermoplasmatota_MTNG01000031.1_4         6.93%    passed     61.57%
  14  GCF.000165345.1.Eukaryota.Apicocomplexa_XP_628365.1               0.99%    passed     79.70%
  15  GCA.001587715.1.Archaea.Methanobacteriota.B_LNGC01000048.1_9      8.91%    passed     99.00%
  16  GCF.000019605.1.Archaea.Thermoproteota_NC_010482.1_1598           8.91%    passed     80.79%
  17  GCA.001940665.1.Archaea.Asgardarchaeota_MDVT01000007.1_694        9.90%    passed     99.55%
  18  GCA.002789275.1.Archaea.Huberarchaeota_PFSX01000043.1_6           7.92%    passed     78.67%
  19  GCF.002201895.1.Archaea.Euryarchaeota_NZ_CP019436.1_750           7.92%    passed     87.99%
  20  GCA.003009755.1.Archaea.Thermoplasmatota_PXUB01000029.1_31        7.92%    passed     21.76%
  21  GCA.001593875.1.Archaea.Thermoproteota_LUCA01000040.1_3           9.90%    passed     74.89%
  22  GCA.001940655.1.Archaea.Asgardarchaeota_MBAA01000165.1_38         9.90%    passed     13.09%
  23  GCA.003144275.1.Archaea.Asgardarchaeota_NJBF01000079.1_2          7.92%    passed     32.57%
  24  GCA.001800745.1.Archaea.Thermoplasmatota_MGVZ01000073.1_26        5.94%    passed     45.11%
  25  GCF.000011205.1.Archaea.Thermoproteota_NC_003106.2_1062           5.94%    passed     97.44%
  26  GCF.000092185.1.Archaea.Thermoproteota_NC_014160.1_1166           5.94%    passed     97.94%
  27  GCA.000315625.1.Eukaryota.Cryptophyceae_EKX46434.1                0.00%    passed     64.76%
  28  GCA.001595885.1.Archaea.Thermoplasmatota_LSSH01000107.1_9         7.92%    passed     73.78%
  29  GCF.002214485.1.Archaea.Methanobacteriota.B_NZ_CP015102.1_1001    7.92%    passed     91.11%
  30  GCA.000002435.2.Eukaryota.Fornicata_KAE8304941.1                  0.00%    passed     82.08%
  31  GCA.002011165.1.Archaea.Halobacteriota_MTMI01000012.1_11          8.91%    passed     26.37%
  32  GCA.003158275.1.Archaea.Halobacteriota_PMIN01000187.1_2          10.89%    passed     78.14%
  33  GCA.000405685.1.Archaea.Thermoproteota_ASPF01000013.1_29          8.91%    passed     80.68%
  34  GCA.002412085.1.Archaea.Nanoarchaeota_EFD92830.1                  9.90%    passed     98.85%
  35  GCA.002254415.1.Archaea.EX4484.52_NJDR01000034.1_3                8.91%    passed     49.32%
  36  GCA.000315625.1.Eukaryota.Cryptophyceae_EKX34566.1               15.84%    passed     68.39%
  37  GCA.001775995.1.Archaea.Thermoproteota_MEZH01000007.1_270         8.91%    passed     70.55%
  38  GCA.002011075.1.Archaea.Thermoproteota_MTMA01000001.1_48          8.91%    passed     11.98%
  39  GCA.001564035.1.Archaea.Nanohaloarchaeota_LKMX01000003.1_5        7.92%    passed      6.99%
  40  GCA.001421185.1.Archaea.Thermoplasmatota_LJKK01000004.1_29        8.91%    passed     87.17%
  41  GCA.001412335.1.Archaea.Halobacteriota_LKUF01000175.1_8           9.90%    passed     96.35%
  42  GCA.002495185.1.Archaea.Thermoplasmatota_DAEB01000024.1_4         6.93%    passed     73.61%
  43  GCA.002502685.1.Archaea.Thermoplasmatota_DAQA01000042.1_10        8.91%    passed     85.99%
  44  GCA.000387965.1.Archaea.Nanoarchaeota_APJZ01000003.1_10           5.94%    passed     44.69%
  45  GCF.000011005.1.Archaea.Euryarchaeota_NC_013665.1_1569            8.91%    passed     99.49%
  46  GCA.001940755.1.Archaea.Asgardarchaeota_MEHH01000033.1_8          7.92%    passed     97.80%
  47  GCA.002495485.1.Archaea.Thermoproteota_DAFH01000007.1_5           8.91%    passed     92.57%
  48  GCF.000148385.1.Archaea.Thermoproteota_NC_014537.1_2078           6.93%    passed     94.75%
  49  GCF.002114285.1.Archaea.Halobacteriota_NZ_NEDJ01000002.1_59       8.91%    passed     21.59%
  50  GCA.003230355.1.Archaea.Hydrothermarchaeota_QIDD01000007.1_10     8.91%    passed     99.67%
  51  GCA.001940645.1.Archaea.Asgardarchaeota_MDVS01000129.1_2          7.92%    passed     36.19%
  52  GCA.001742785.1.Archaea.Altiarchaeota_MCBF01000001.1_943          8.91%    passed     87.77%
  53  GCA.000004985.1.Eukaryota.Heterolobosea_EFC37628.1                2.97%    passed     53.47%
  54  GCA.001563325.1.Archaea.Asgardarchaeota_LRSK01000008.1_19         7.92%    passed     92.17%
  55  GCA.002494765.1.Archaea.Thermoplasmatota_DACJ01000044.1_7         7.92%    passed     67.73%
  56  GCA.002254565.1.Archaea.Altiarchaeota_NJEG01000018.1_71           8.91%    passed     98.89%
  57  GCA.002049455.2.Eukaryota.Rhodophyta_OSX77080.1                   0.00%    passed     51.51%
  58  GCA.001717025.1.Archaea.Thermoproteota_MAGU01000041.1_2           9.90%    passed     66.96%
  59  GCA.002255045.1.Archaea.Thermoproteota_NJEE01000026.1_26          7.92%    passed     99.01%
  60  GCF.000194625.1.Archaea.Halobacteriota_NC_015320.1_1916           8.91%    passed     95.65%
  61  GCA.000188695.1.Eukaryota.Choanoflagellata_EGD82083.1             0.00%    passed     84.33%
  62  GCA.002255025.1.Archaea.Thermoproteota_NJEJ01000032.1_18          9.90%    passed     98.64%
  63  GCF.001481685.1.Archaea.Thermoproteota_NZ_CP006867.1_448          9.90%    passed     88.75%
  64  GCA.001593855.1.Archaea.Thermoproteota_LUCC01000045.1_3           9.90%    passed     44.20%
  65  GCA.002254745.1.Archaea.Thermoproteota_NJED01000016.1_27          7.92%    passed     75.92%
  66  GCA.001510295.1.Archaea.Thermoproteota_LFEZ01000018.1_4           7.92%    passed     87.98%
  67  GCA.000315625.1.Eukaryota.Cryptophyceae_EKX34565.1                0.00%    passed     70.15%
  68  GCF.002078355.1.Archaea.Thermoplasmatota_NZ_CP015363.1_1621       7.92%    passed     98.09%
  69  GCA.003019535.1.Archaea.Thermoproteota_NEXG01000001.1_156         8.91%    passed     96.10%
  70  GCA.000209225.1.Eukaryota.Cnidaria_EDO38414.1                     0.00%    passed     66.77%
  71  GCA.001889985.1.Archaea.Micrarchaeota_MOEG01000020.1_53           9.90%    passed     44.77%
  72  GCA.001595945.1.Archaea.Thermoplasmatota_LSSI01000025.1_94        7.92%    passed     38.15%
  73  GCA.001273335.1.Archaea.Thermoproteota_LFWV01000039.1_11          9.90%    passed     95.49%
  74  GCA.001774245.1.Archaea.Thermoproteota_MEZF01000072.1_16          9.90%    passed     87.36%
  75  GCA.002256595.1.Archaea.Halobacteriota_NOLC01000088.1_6          10.89%    passed     38.98%
  76  GCA.001593865.1.Archaea.Thermoproteota_LUCB01000024.1_16          9.90%    passed     99.61%
  77  GCA.002789635.1.Archaea.Aenigmatarchaeota_PFTQ01000061.1_5        8.91%    passed     61.51%
  78  GCA.002506605.1.Archaea.Thermoproteota_DAXX01000014.1_4           3.96%    passed     34.85%
  79  GCA.002878135.1.Archaea.Thermoplasmatota_PNIT01000151.1_9         6.93%    passed     59.98%
  80  GCF.000025525.1.Archaea.Methanobacteriota.A_NC_013887.1_1826      8.91%    passed     91.19%
****  TOTAL                                                             7.40%  0 sequences failed composition chi2 test (p-value<5%; df=19)
Checking for duplicate sequences: done in 0.000881936 secs using 909.7% CPU


Create initial parsimony tree by phylogenetic likelihood library (PLL)... 0.020 seconds
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
Perform fast likelihood tree search using LG+I+G model...
Estimate model parameters (epsilon = 5.000)
Perform nearest neighbor interchange...
Optimizing NNI: done in 0.575684 secs using 992.8% CPU
Estimate model parameters (epsilon = 1.000)
1. Initial log-likelihood: -10518.614
Optimal log-likelihood: -10518.490
Proportion of invariable sites: 0.026
Gamma shape alpha: 1.101
Parameters optimization took 1 rounds (0.079 sec)
Time for fast ML tree search: 0.833 seconds

NOTE: ModelFinder requires 15 MB RAM!
ModelFinder will test up to 749 protein models (sample size: 101) ...
 No. Model         -LnL         df  AIC          AICc         BIC
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  1  LG            10902.854    157 22119.707    71731.707    22530.281
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  2  LG+I          10829.772    158 21975.544    72219.544    22388.733
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  3  LG+G4         10521.428    158 21358.857    71602.857    21772.046
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  4  LG+I+G4       10518.487    159 21354.973    72234.973    21770.777
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  5  LG+R2         10606.714    159 21531.428    72411.428    21947.232
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  6  LG+R3         10533.383    161 21388.767    73552.767    21809.801
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  7  LG+R4         10499.952    163 21325.905    74789.905    21752.169
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  8  LG+R5         10475.600    165 21281.201    76061.201    21712.696
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  9  LG+R6         10475.557    167 21285.114    77397.114    21721.839
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 14  LG+F          11001.560    176 22355.121    84659.121    22815.382
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 15  LG+F+I        10945.000    177 22244.000    85256.000    22706.876
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 16  LG+F+G4       10583.652    177 21521.303    84533.303    21984.180
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 17  LG+F+I+G4     10578.493    178 21512.987    85236.987    21978.478
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 18  LG+F+R2       10677.743    178 21711.487    85435.487    22176.978
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 19  LG+F+R3       10600.497    180 21560.993    86720.993    22031.715
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 20  LG+F+R4       10564.435    182 21492.870    88104.870    21968.822
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 21  LG+F+R5       10542.105    184 21452.211    89532.211    21933.393
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 22  LG+F+R6       10541.327    186 21454.653    91018.653    21941.066
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 27  WAG           10816.778    157 21947.556    71559.556    22358.130
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 28  WAG+I         10785.636    158 21887.272    72131.272    22300.461
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 29  WAG+G4        10527.014    158 21370.029    71614.029    21783.218
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 30  WAG+I+G4      10521.032    159 21360.064    72240.064    21775.868
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 31  WAG+R2        10576.118    159 21470.235    72350.235    21886.040
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 32  WAG+R3        10528.193    161 21378.385    73542.385    21799.420
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 33  WAG+R4        10496.944    163 21319.888    74783.888    21746.153
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 34  WAG+R5        10487.367    165 21304.735    76084.735    21736.230
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
WARNING: Log-likelihood -10489.8 of WAG+R6 worse than WAG+R5 -10487.4
 35  WAG+R6        10489.788    167 21313.576    77425.576    21750.302
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 40  WAG+F         10875.371    176 22102.742    84406.742    22563.003
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 41  WAG+F+I       10852.119    177 22058.238    85070.238    22521.114
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 42  WAG+F+G4      10538.697    177 21431.393    84443.393    21894.269
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 43  WAG+F+I+G4    10537.882    178 21431.764    85155.764    21897.256
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 44  WAG+F+R2      10595.839    178 21547.678    85271.678    22013.169
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 45  WAG+F+R3      10543.071    180 21446.143    86606.143    21916.864
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 46  WAG+F+R4      10515.623    182 21395.245    88007.245    21871.197
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 47  WAG+F+R5      10503.767    184 21375.534    89455.534    21856.716
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 48  WAG+F+R6      10503.525    186 21379.051    90943.051    21865.463
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 53  JTT           10988.291    157 22290.582    71902.582    22701.156
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 54  JTT+I         10945.770    158 22207.539    72451.539    22620.728
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 55  JTT+G4        10612.363    158 21540.726    71784.726    21953.915
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 56  JTT+I+G4      10604.946    159 21527.893    72407.893    21943.697
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 57  JTT+R2        10691.316    159 21700.632    72580.632    22116.436
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 58  JTT+R3        10628.125    161 21578.250    73742.250    21999.284
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 59  JTT+R4        10597.412    163 21520.824    74984.824    21947.088
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 60  JTT+R5        10574.766    165 21479.533    76259.533    21911.028
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
WARNING: Log-likelihood -10577 of JTT+R6 worse than JTT+R5 -10574.8
 61  JTT+R6        10576.954    167 21487.908    77599.908    21924.633
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 66  JTT+F         11067.947    176 22487.894    84791.894    22948.155
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 67  JTT+F+I       11028.159    177 22410.318    85422.318    22873.195
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 68  JTT+F+G4      10636.698    177 21627.396    84639.396    22090.273
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 69  JTT+F+I+G4    10636.815    178 21629.631    85353.631    22095.122
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 70  JTT+F+R2      10723.900    178 21803.800    85527.800    22269.291
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 71  JTT+F+R3      10652.121    180 21664.243    86824.243    22134.964
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 72  JTT+F+R4      10621.395    182 21606.790    88218.790    22082.742
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 73  JTT+F+R5      10601.609    184 21571.218    89651.218    22052.400
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 74  JTT+F+R6      10601.025    186 21574.051    91138.051    22060.463
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 79  Q.pfam        10934.436    157 22182.872    71794.872    22593.446
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 80  Q.pfam+I      10840.648    158 21997.296    72241.296    22410.485
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 81  Q.pfam+G4     10531.238    158 21378.477    71622.477    21791.666
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 82  Q.pfam+I+G4   10518.601    159 21355.203    72235.203    21771.007
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 83  Q.pfam+R2     10615.425    159 21548.850    72428.850    21964.655
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 84  Q.pfam+R3     10542.405    161 21406.810    73570.810    21827.844
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 85  Q.pfam+R4     10504.945    163 21335.889    74799.889    21762.154
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 86  Q.pfam+R5     10486.725    165 21303.451    76083.451    21734.945
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 87  Q.pfam+R6     10486.647    167 21307.294    77419.294    21744.019
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 92  Q.pfam+F      10990.425    176 22332.851    84636.851    22793.112
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 93  Q.pfam+F+I    10917.078    177 22188.155    85200.155    22651.032
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 94  Q.pfam+F+G4   10573.470    177 21500.940    84512.940    21963.817
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 95  Q.pfam+F+I+G4 10563.200    178 21482.399    85206.399    21947.891
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 96  Q.pfam+F+R2   10669.819    178 21695.638    85419.638    22161.129
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 97  Q.pfam+F+R3   10583.655    180 21527.311    86687.311    21998.032
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 98  Q.pfam+F+R4   10549.363    182 21462.725    88074.725    21938.677
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 99  Q.pfam+F+R5   10528.213    184 21424.426    89504.426    21905.608
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
100  Q.pfam+F+R6   10527.261    186 21426.522    90990.522    21912.934
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
105  Q.bird        11435.576    157 23185.152    72797.152    23595.726
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
106  Q.bird+I      11359.063    158 23034.126    73278.126    23447.315
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
107  Q.bird+G4     10909.541    158 22135.082    72379.082    22548.271
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
108  Q.bird+I+G4   10879.696    159 22077.391    72957.391    22493.196
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
109  Q.bird+R2     11023.556    159 22365.113    73245.113    22780.917
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
110  Q.bird+R3     10927.669    161 22177.338    74341.338    22598.372
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
111  Q.bird+R4     10891.751    163 22109.503    75573.503    22535.767
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
112  Q.bird+R5     10847.227    165 22024.455    76804.455    22455.950
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
113  Q.bird+R6     10847.212    167 22028.424    78140.424    22465.149
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
118  Q.bird+F      11527.799    176 23407.597    85711.597    23867.858
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
119  Q.bird+F+I    11447.724    177 23249.448    86261.448    23712.325
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
120  Q.bird+F+G4   10943.253    177 22240.506    85252.506    22703.383
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
121  Q.bird+F+I+G4 10941.602    178 22239.204    85963.204    22704.695
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
122  Q.bird+F+R2   11078.373    178 22512.747    86236.747    22978.238
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
123  Q.bird+F+R3   10967.815    180 22295.630    87455.630    22766.352
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
124  Q.bird+F+R4   10927.513    182 22219.025    88831.025    22694.977
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
125  Q.bird+F+R5   10891.191    184 22150.382    90230.382    22631.565
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
126  Q.bird+F+R6   10889.370    186 22150.740    91714.740    22637.152
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
131  Q.mammal      11254.634    157 22823.269    72435.269    23233.843
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
132  Q.mammal+I    11183.899    158 22683.797    72927.797    23096.986
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
133  Q.mammal+G4   10750.427    158 21816.854    72060.854    22230.043
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
134  Q.mammal+I+G4 10746.908    159 21811.816    72691.816    22227.621
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
135  Q.mammal+R2   10876.696    159 22071.391    72951.391    22487.195
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
136  Q.mammal+R3   10786.775    161 21895.550    74059.550    22316.584
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
137  Q.mammal+R4   10752.584    163 21831.168    75295.168    22257.433
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
138  Q.mammal+R5   10714.382    165 21758.764    76538.764    22190.259
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
139  Q.mammal+R6   10715.102    167 21764.204    77876.204    22200.929
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
144  Q.mammal+F    11334.136    176 23020.272    85324.272    23480.533
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
145  Q.mammal+F+I  11261.337    177 22876.674    85888.674    23339.550
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
146  Q.mammal+F+G4 10800.306    177 21954.611    84966.611    22417.488
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
147  Q.mammal+F+I+G4 10798.423    178 21952.846    85676.846    22418.337
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
148  Q.mammal+F+R2 10918.417    178 22192.834    85916.834    22658.325
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
149  Q.mammal+F+R3 10824.711    180 22009.421    87169.421    22480.143
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
150  Q.mammal+F+R4 10772.397    182 21908.794    88520.794    22384.746
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
151  Q.mammal+F+R5 10753.176    184 21874.353    89954.353    22355.535
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
152  Q.mammal+F+R6 10751.663    186 21875.326    91439.326    22361.738
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
157  Q.insect      10989.603    157 22293.206    71905.206    22703.780
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
158  Q.insect+I    10905.126    158 22126.252    72370.252    22539.441
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
159  Q.insect+G4   10518.086    158 21352.172    71596.172    21765.361
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
160  Q.insect+I+G4 10506.956    159 21331.913    72211.913    21747.717
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
161  Q.insect+R2   10628.936    159 21575.873    72455.873    21991.677
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
162  Q.insect+R3   10550.744    161 21423.488    73587.488    21844.522
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
163  Q.insect+R4   10499.809    163 21325.618    74789.618    21751.883
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
164  Q.insect+R5   10479.497    165 21288.995    76068.995    21720.490
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
165  Q.insect+R6   10479.949    167 21293.898    77405.898    21730.623
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
170  Q.insect+F    11068.886    176 22489.772    84793.772    22950.034
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
171  Q.insect+F+I  10998.162    177 22350.324    85362.324    22813.201
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
172  Q.insect+F+G4 10584.233    177 21522.466    84534.466    21985.343
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
173  Q.insect+F+I+G4 10582.776    178 21521.553    85245.553    21987.044
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
174  Q.insect+F+R2 10702.317    178 21760.635    85484.635    22226.126
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
175  Q.insect+F+R3 10618.348    180 21596.696    86756.696    22067.418
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
176  Q.insect+F+R4 10565.552    182 21495.105    88107.105    21971.056
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
177  Q.insect+F+R5 10550.625    184 21469.250    89549.250    21950.433
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
178  Q.insect+F+R6 10550.609    186 21473.217    91037.217    21959.629
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
183  Q.plant       11277.455    157 22868.909    72480.909    23279.483
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
184  Q.plant+I     11156.023    158 22628.046    72872.046    23041.235
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
185  Q.plant+G4    10738.391    158 21792.782    72036.782    22205.971
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
186  Q.plant+I+G4  10722.201    159 21762.402    72642.402    22178.206
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
187  Q.plant+R2    10875.614    159 22069.228    72949.228    22485.032
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
188  Q.plant+R3    10777.060    161 21876.120    74040.120    22297.154
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
189  Q.plant+R4    10735.795    163 21797.590    75261.590    22223.855
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
190  Q.plant+R5    10691.263    165 21712.525    76492.525    22144.020
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
191  Q.plant+R6    10691.323    167 21716.646    77828.646    22153.371
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
196  Q.plant+F     11414.908    176 23181.816    85485.816    23642.077
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
197  Q.plant+F+I   11307.263    177 22968.527    85980.527    23431.403
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
198  Q.plant+F+G4  10836.233    177 22026.466    85038.466    22489.342
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
199  Q.plant+F+I+G4 10834.793    178 22025.585    85749.585    22491.077
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
200  Q.plant+F+R2  10979.396    178 22314.793    86038.793    22780.284
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
201  Q.plant+F+R3  10861.036    180 22082.072    87242.072    22552.794
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
202  Q.plant+F+R4  10817.815    182 21999.630    88611.630    22475.582
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
203  Q.plant+F+R5  10776.051    184 21920.103    90000.103    22401.285
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
204  Q.plant+F+R6  10775.678    186 21923.357    91487.357    22409.769
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
209  Q.yeast       11043.884    157 22401.769    72013.769    22812.342
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
210  Q.yeast+I     10929.973    158 22175.945    72419.945    22589.134
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
211  Q.yeast+G4    10560.319    158 21436.637    71680.637    21849.826
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
212  Q.yeast+I+G4  10544.767    159 21407.534    72287.534    21823.338
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
213  Q.yeast+R2    10671.709    159 21661.418    72541.418    22077.222
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
214  Q.yeast+R3    10583.210    161 21488.419    73652.419    21909.453
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
215  Q.yeast+R4    10539.317    163 21404.633    74868.633    21830.898
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
216  Q.yeast+R5    10518.315    165 21366.629    76146.629    21798.124
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
217  Q.yeast+R6    10518.309    167 21370.617    77482.617    21807.342
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
222  Q.yeast+F     11123.758    176 22599.517    84903.517    23059.778
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
223  Q.yeast+F+I   11034.626    177 22423.251    85435.251    22886.127
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
224  Q.yeast+F+G4  10626.355    177 21606.709    84618.709    22069.585
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
225  Q.yeast+F+I+G4 10621.813    178 21599.627    85323.627    22065.118
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
226  Q.yeast+F+R2  10750.970    178 21857.940    85581.940    22323.431
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
227  Q.yeast+F+R3  10656.709    180 21673.418    86833.418    22144.140
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
228  Q.yeast+F+R4  10622.595    182 21609.189    88221.189    22085.141
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
229  Q.yeast+F+R5  10588.688    184 21545.375    89625.375    22026.557
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
230  Q.yeast+F+R6  10588.715    186 21549.430    91113.430    22035.843
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
235  JTTDCMut      10977.604    157 22269.208    71881.208    22679.782
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
236  JTTDCMut+I    10936.686    158 22189.373    72433.373    22602.562
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
237  JTTDCMut+G4   10606.314    158 21528.629    71772.629    21941.818
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
238  JTTDCMut+I+G4 10599.151    159 21516.303    72396.303    21932.107
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
239  JTTDCMut+R2   10684.167    159 21686.334    72566.334    22102.138
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
240  JTTDCMut+R3   10620.909    161 21563.818    73727.818    21984.853
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
241  JTTDCMut+R4   10590.687    163 21507.373    74971.373    21933.638
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
242  JTTDCMut+R5   10569.090    165 21468.179    76248.179    21899.674
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
WARNING: Log-likelihood -10571.4 of JTTDCMut+R6 worse than JTTDCMut+R5 -10569.1
243  JTTDCMut+R6   10571.387    167 21476.774    77588.774    21913.499
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
248  JTTDCMut+F    11059.556    176 22471.112    84775.112    22931.373
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
249  JTTDCMut+F+I  11021.470    177 22396.940    85408.940    22859.816
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
250  JTTDCMut+F+G4 10630.143    177 21614.286    84626.286    22077.162
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
251  JTTDCMut+F+I+G4 10630.236    178 21616.471    85340.471    22081.963
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
252  JTTDCMut+F+R2 10716.443    178 21788.887    85512.887    22254.378
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
253  JTTDCMut+F+R3 10645.235    180 21650.469    86810.469    22121.191
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
254  JTTDCMut+F+R4 10615.051    182 21594.102    88206.102    22070.054
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
255  JTTDCMut+F+R5 10595.486    184 21558.971    89638.971    22040.154
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
256  JTTDCMut+F+R6 10594.966    186 21561.933    91125.933    22048.345
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
261  DCMut         11038.093    157 22390.186    72002.186    22800.760
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
262  DCMut+I       11023.056    158 22362.113    72606.113    22775.302
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
263  DCMut+G4      10700.321    158 21716.642    71960.642    22129.831
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
264  DCMut+I+G4    10698.773    159 21715.546    72595.546    22131.350
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
265  DCMut+R2      10762.694    159 21843.389    72723.389    22259.193
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
266  DCMut+R3      10705.484    161 21732.968    73896.968    22154.002
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
267  DCMut+R4      10683.169    163 21692.338    75156.338    22118.602
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
268  DCMut+R5      10669.891    165 21669.782    76449.782    22101.276
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
WARNING: Log-likelihood -10672.1 of DCMut+R6 worse than DCMut+R5 -10669.9
269  DCMut+R6      10672.080    167 21678.161    77790.161    22114.886
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
274  DCMut+F       10946.432    176 22244.864    84548.864    22705.125
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
275  DCMut+F+I     10935.128    177 22224.255    85236.255    22687.131
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
276  DCMut+F+G4    10593.578    177 21541.157    84553.157    22004.033
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
277  DCMut+F+I+G4  10595.900    178 21547.800    85271.800    22013.291
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
278  DCMut+F+R2    10664.290    178 21684.579    85408.579    22150.071
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
279  DCMut+F+R3    10606.529    180 21573.057    86733.057    22043.779
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
280  DCMut+F+R4    10576.032    182 21516.063    88128.063    21992.015
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
281  DCMut+F+R5    10559.765    184 21487.530    89567.530    21968.712
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
WARNING: Log-likelihood -10561.7 of DCMut+F+R6 worse than DCMut+F+R5 -10559.8
282  DCMut+F+R6    10561.715    186 21495.429    91059.429    21981.841
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
287  VT            10822.531    157 21959.061    71571.061    22369.635
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
288  VT+I          10772.721    158 21861.441    72105.441    22274.631
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
289  VT+G4         10513.536    158 21343.073    71587.073    21756.262
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
290  VT+I+G4       10502.979    159 21323.959    72203.959    21739.763
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
291  VT+R2         10560.772    159 21439.544    72319.544    21855.348
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
292  VT+R3         10516.101    161 21354.202    73518.202    21775.237
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
293  VT+R4         10480.880    163 21287.761    74751.761    21714.025
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
294  VT+R5         10470.401    165 21270.801    76050.801    21702.296
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
WARNING: Log-likelihood -10472.3 of VT+R6 worse than VT+R5 -10470.4
295  VT+R6         10472.251    167 21278.503    77390.503    21715.228
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
300  VT+F          10882.440    176 22116.879    84420.879    22577.141
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
301  VT+F+I        10841.021    177 22036.041    85048.041    22498.918
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
302  VT+F+G4       10530.180    177 21414.360    84426.360    21877.236
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
303  VT+F+I+G4     10530.011    178 21416.022    85140.022    21881.513
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
304  VT+F+R2       10599.469    178 21554.938    85278.938    22020.430
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
305  VT+F+R3       10536.615    180 21433.230    86593.230    21903.951
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
306  VT+F+R4       10511.036    182 21386.071    87998.071    21862.023
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
307  VT+F+R5       10500.237    184 21368.474    89448.474    21849.657
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
308  VT+F+R6       10501.070    186 21374.139    90938.139    21860.552
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
313  PMB           10765.723    157 21845.446    71457.446    22256.020
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
314  PMB+I         10734.826    158 21785.651    72029.651    22198.840
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
315  PMB+G4        10495.518    158 21307.037    71551.037    21720.226
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
316  PMB+I+G4      10495.272    159 21308.543    72188.543    21724.347
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
317  PMB+R2        10545.145    159 21408.290    72288.290    21824.094
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
318  PMB+R3        10495.457    161 21312.915    73476.915    21733.949
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
319  PMB+R4        10473.283    163 21272.567    74736.567    21698.832
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
320  PMB+R5        10465.553    165 21261.105    76041.105    21692.600
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
WARNING: Log-likelihood -10467.7 of PMB+R6 worse than PMB+R5 -10465.6
321  PMB+R6        10467.702    167 21269.403    77381.403    21706.128
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
326  PMB+F         10809.641    176 21971.282    84275.282    22431.543
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
327  PMB+F+I       10785.009    177 21924.018    84936.018    22386.894
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
328  PMB+F+G4      10506.115    177 21366.230    84378.230    21829.106
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
329  PMB+F+I+G4    10506.216    178 21368.432    85092.432    21833.923
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
330  PMB+F+R2      10564.047    178 21484.095    85208.095    21949.586
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
331  PMB+F+R3      10509.438    180 21378.877    86538.877    21849.598
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
332  PMB+F+R4      10486.297    182 21336.594    87948.594    21812.546
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
333  PMB+F+R5      10478.351    184 21324.702    89404.702    21805.884
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
WARNING: Log-likelihood -10480.4 of PMB+F+R6 worse than PMB+F+R5 -10478.4
334  PMB+F+R6      10480.357    186 21332.714    90896.714    21819.126
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
339  Blosum62      10784.504    157 21883.008    71495.008    22293.582
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
340  Blosum62+I    10747.872    158 21811.743    72055.743    22224.932
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
341  Blosum62+G4   10495.730    158 21307.460    71551.460    21720.649
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
342  Blosum62+I+G4 10495.240    159 21308.479    72188.479    21724.283
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
343  Blosum62+R2   10550.737    159 21419.474    72299.474    21835.278
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
344  Blosum62+R3   10499.053    161 21320.105    73484.105    21741.140
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
345  Blosum62+R4   10474.106    163 21274.212    74738.212    21700.476
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
346  Blosum62+R5   10467.329    165 21264.657    76044.657    21696.152
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
WARNING: Log-likelihood -10469.8 of Blosum62+R6 worse than Blosum62+R5 -10467.3
347  Blosum62+R6   10469.759    167 21273.518    77385.518    21710.243
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
352  Blosum62+F    10860.373    176 22072.747    84376.747    22533.008
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
353  Blosum62+F+I  10832.495    177 22018.989    85030.989    22481.865
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
354  Blosum62+F+G4 10542.652    177 21439.303    84451.303    21902.179
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
355  Blosum62+F+I+G4 10542.768    178 21441.535    85165.535    21907.027
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
356  Blosum62+F+R2 10603.137    178 21562.274    85286.274    22027.766
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
357  Blosum62+F+R3 10546.962    180 21453.923    86613.923    21924.645
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
358  Blosum62+F+R4 10524.430    182 21412.859    88024.859    21888.811
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
359  Blosum62+F+R5 10514.831    184 21397.662    89477.662    21878.844
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
WARNING: Log-likelihood -10516.6 of Blosum62+F+R6 worse than Blosum62+F+R5 -10514.8
360  Blosum62+F+R6 10516.642    186 21405.285    90969.285    21891.697
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
365  Dayhoff       11038.909    157 22391.818    72003.818    22802.392
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
366  Dayhoff+I     11023.830    158 22363.661    72607.661    22776.850
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
367  Dayhoff+G4    10700.510    158 21717.020    71961.020    22130.209
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
368  Dayhoff+I+G4  10700.551    159 21719.102    72599.102    22134.906
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
369  Dayhoff+R2    10763.335    159 21844.669    72724.669    22260.473
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
370  Dayhoff+R3    10705.736    161 21733.472    73897.472    22154.506
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
371  Dayhoff+R4    10683.360    163 21692.720    75156.720    22118.984
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
372  Dayhoff+R5    10669.935    165 21669.869    76449.869    22101.364
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
WARNING: Log-likelihood -10671.4 of Dayhoff+R6 worse than Dayhoff+R5 -10669.9
373  Dayhoff+R6    10671.449    167 21676.899    77788.899    22113.624
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
378  Dayhoff+F     10947.048    176 22246.096    84550.096    22706.357
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
379  Dayhoff+F+I   10935.738    177 22225.475    85237.475    22688.352
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
380  Dayhoff+F+G4  10593.755    177 21541.509    84553.509    22004.386
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
381  Dayhoff+F+I+G4 10593.771    178 21543.543    85267.543    22009.034
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
382  Dayhoff+F+R2  10664.338    178 21684.677    85408.677    22150.168
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
383  Dayhoff+F+R3  10607.659    180 21575.319    86735.319    22046.040
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
384  Dayhoff+F+R4  10576.175    182 21516.349    88128.349    21992.301
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
385  Dayhoff+F+R5  10559.707    184 21487.414    89567.414    21968.596
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
WARNING: Log-likelihood -10561.8 of Dayhoff+F+R6 worse than Dayhoff+F+R5 -10559.7
386  Dayhoff+F+R6  10561.824    186 21495.649    91059.649    21982.061
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
391  mtREV         11896.781    157 24107.562    73719.562    24518.136
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
392  mtREV+I       11820.737    158 23957.475    74201.475    24370.664
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
393  mtREV+G4      11386.433    158 23088.865    73332.865    23502.054
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
394  mtREV+I+G4    11375.991    159 23069.982    73949.982    23485.786
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
395  mtREV+R2      11529.374    159 23376.748    74256.748    23792.552
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
396  mtREV+R3      11413.237    161 23148.473    75312.473    23569.508
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
397  mtREV+R4      11372.654    163 23071.308    76535.308    23497.572
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
398  mtREV+R5      11354.943    165 23039.885    77819.885    23471.380
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
399  mtREV+R6      11354.789    167 23043.579    79155.579    23480.304
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
404  mtREV+F       11298.513    176 22949.025    85253.025    23409.287
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
405  mtREV+F+I     11232.151    177 22818.301    85830.301    23281.178
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
406  mtREV+F+G4    10849.937    177 22053.875    85065.875    22516.751
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
407  mtREV+F+I+G4  10845.765    178 22047.529    85771.529    22513.021
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
408  mtREV+F+R2    10960.456    178 22276.912    86000.912    22742.403
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
409  mtREV+F+R3    10875.296    180 22110.592    87270.592    22581.313
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
410  mtREV+F+R4    10835.978    182 22035.956    88647.956    22511.908
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
411  mtREV+F+R5    10828.600    184 22025.199    90105.199    22506.382
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
WARNING: Log-likelihood -10830.1 of mtREV+F+R6 worse than mtREV+F+R5 -10828.6
412  mtREV+F+R6    10830.063    186 22032.125    91596.125    22518.538
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
417  mtART         12371.381    157 25056.762    74668.762    25467.336
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
418  mtART+I       12160.924    158 24637.849    74881.849    25051.038
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
419  mtART+G4      11583.217    158 23482.434    73726.434    23895.623
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
420  mtART+I+G4    11556.776    159 23431.553    74311.553    23847.357
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
421  mtART+R2      11817.255    159 23952.510    74832.510    24368.314
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
422  mtART+R3      11627.805    161 23577.610    75741.610    23998.645
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
423  mtART+R4      11560.041    163 23446.081    76910.081    23872.346
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
424  mtART+R5      11530.357    165 23390.714    78170.714    23822.209
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
425  mtART+R6      11525.639    167 23385.279    79497.279    23822.004
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
426  mtART+R7      11522.377    169 23382.753    80842.753    23824.708
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
430  mtART+F       11492.811    176 23337.621    85641.621    23797.882
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
431  mtART+F+I     11361.562    177 23077.125    86089.125    23540.001
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
432  mtART+F+G4    10937.319    177 22228.639    85240.639    22691.515
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
433  mtART+F+I+G4  10923.460    178 22202.920    85926.920    22668.411
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
434  mtART+F+R2    11106.913    178 22569.825    86293.825    23035.317
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
435  mtART+F+R3    10973.363    180 22306.726    87466.726    22777.448
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
436  mtART+F+R4    10913.762    182 22191.524    88803.524    22667.476
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
437  mtART+F+R5    10895.304    184 22158.608    90238.608    22639.790
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
438  mtART+F+R6    10895.065    186 22162.129    91726.129    22648.542
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
443  mtZOA         11868.568    157 24051.136    73663.136    24461.709
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
444  mtZOA+I       11684.186    158 23684.371    73928.371    24097.560
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
445  mtZOA+G4      11196.237    158 22708.473    72952.473    23121.662
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
446  mtZOA+I+G4    11174.742    159 22667.484    73547.484    23083.288
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
447  mtZOA+R2      11389.537    159 23097.073    73977.073    23512.877
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
448  mtZOA+R3      11229.391    161 22780.783    74944.783    23201.817
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
449  mtZOA+R4      11175.693    163 22677.387    76141.387    23103.651
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
450  mtZOA+R5      11153.906    165 22637.812    77417.812    23069.307
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
451  mtZOA+R6      11153.138    167 22640.275    78752.275    23077.000
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
456  mtZOA+F       11289.271    176 22930.541    85234.541    23390.803
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
457  mtZOA+F+I     11175.449    177 22704.898    85716.898    23167.775
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
458  mtZOA+F+G4    10813.027    177 21980.053    84992.053    22442.930
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
459  mtZOA+F+I+G4  10808.350    178 21972.700    85696.700    22438.192
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
460  mtZOA+F+R2    10942.335    178 22240.671    85964.671    22706.162
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
461  mtZOA+F+R3    10844.871    180 22049.742    87209.742    22520.464
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
462  mtZOA+F+R4    10788.282    182 21940.565    88552.565    22416.517
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
463  mtZOA+F+R5    10772.565    184 21913.131    89993.131    22394.313
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
464  mtZOA+F+R6    10768.374    186 21908.748    91472.748    22395.161
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
469  mtMet         11913.347    157 24140.695    73752.695    24551.269
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
470  mtMet+I       11786.675    158 23889.350    74133.350    24302.539
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
471  mtMet+G4      11332.600    158 22981.200    73225.200    23394.389
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
472  mtMet+I+G4    11313.509    159 22945.017    73825.017    23360.821
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
473  mtMet+R2      11487.589    159 23293.178    74173.178    23708.982
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
474  mtMet+R3      11361.104    161 23044.207    75208.207    23465.242
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
475  mtMet+R4      11319.213    163 22964.425    76428.425    23390.690
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
476  mtMet+R5      11296.365    165 22922.729    77702.729    23354.224
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
477  mtMet+R6      11295.615    167 22925.231    79037.231    23361.956
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
482  mtMet+F       11275.750    176 22903.500    85207.500    23363.761
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
483  mtMet+F+I     11182.812    177 22719.625    85731.625    23182.501
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
484  mtMet+F+G4    10826.508    177 22007.017    85019.017    22469.893
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
485  mtMet+F+I+G4  10809.476    178 21974.953    85698.953    22440.444
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
486  mtMet+F+R2    10926.730    178 22209.460    85933.460    22674.952
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
487  mtMet+F+R3    10846.297    180 22052.595    87212.595    22523.316
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
488  mtMet+F+R4    10802.240    182 21968.480    88580.480    22444.431
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
489  mtMet+F+R5    10788.104    184 21944.207    90024.207    22425.389
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
490  mtMet+F+R6    10788.043    186 21948.085    91512.085    22434.498
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
495  mtVer         12245.746    157 24805.493    74417.493    25216.067
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
496  mtVer+I       12125.911    158 24567.822    74811.822    24981.011
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
497  mtVer+G4      11600.405    158 23516.810    73760.810    23929.999
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
498  mtVer+I+G4    11574.083    159 23466.165    74346.165    23881.970
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
499  mtVer+R2      11756.132    159 23830.264    74710.264    24246.068
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
500  mtVer+R3      11618.666    161 23559.332    75723.332    23980.366
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
501  mtVer+R4      11581.058    163 23488.117    76952.117    23914.382
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
502  mtVer+R5      11554.503    165 23439.007    78219.007    23870.502
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
503  mtVer+R6      11554.689    167 23443.377    79555.377    23880.102
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
508  mtVer+F       11649.377    176 23650.754    85954.754    24111.015
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
509  mtVer+F+I     11532.115    177 23418.230    86430.230    23881.106
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
510  mtVer+F+G4    11089.044    177 22532.089    85544.089    22994.965
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
511  mtVer+F+I+G4  11071.946    178 22499.891    86223.891    22965.383
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
512  mtVer+F+R2    11211.290    178 22778.581    86502.581    23244.072
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
513  mtVer+F+R3    11117.689    180 22595.377    87755.377    23066.099
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
514  mtVer+F+R4    11076.265    182 22516.530    89128.530    22992.482
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
515  mtVer+F+R5    11054.891    184 22477.782    90557.782    22958.964
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
516  mtVer+F+R6    11050.118    186 22472.236    92036.236    22958.648
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
517  mtVer+F+R7    11049.278    188 22474.556    93538.556    22966.199
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
521  mtInv         11826.619    157 23967.237    73579.237    24377.811
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
522  mtInv+I       11703.067    158 23722.134    73966.134    24135.323
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
523  mtInv+G4      11315.066    158 22946.131    73190.131    23359.320
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
524  mtInv+I+G4    11281.458    159 22880.916    73760.916    23296.720
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
525  mtInv+R2      11442.074    159 23202.148    74082.148    23617.952
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
526  mtInv+R3      11325.711    161 22973.421    75137.421    23394.456
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
527  mtInv+R4      11285.338    163 22896.676    76360.676    23322.940
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
528  mtInv+R5      11263.705    165 22857.410    77637.410    23288.904
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
529  mtInv+R6      11263.346    167 22860.692    78972.692    23297.417
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
534  mtInv+F       11121.914    176 22595.827    84899.827    23056.089
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
535  mtInv+F+I     11034.917    177 22423.833    85435.833    22886.710
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
536  mtInv+F+G4    10709.522    177 21773.045    84785.045    22235.921
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
537  mtInv+F+I+G4  10694.904    178 21745.808    85469.808    22211.299
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
538  mtInv+F+R2    10798.318    178 21952.635    85676.635    22418.127
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
539  mtInv+F+R3    10726.682    180 21813.364    86973.364    22284.086
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
540  mtInv+F+R4    10683.637    182 21731.274    88343.274    22207.226
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
541  mtInv+F+R5    10666.667    184 21701.334    89781.334    22182.516
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
542  mtInv+F+R6    10666.620    186 21705.239    91269.239    22191.651
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
547  mtMAM         12612.995    157 25539.989    75151.989    25950.563
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
548  mtMAM+I       12501.236    158 25318.472    75562.472    25731.661
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
549  mtMAM+G4      11826.842    158 23969.685    74213.685    24382.874
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
550  mtMAM+I+G4    11799.189    159 23916.378    74796.378    24332.182
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
551  mtMAM+R2      12024.200    159 24366.400    75246.400    24782.205
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
552  mtMAM+R3      11849.490    161 24020.979    76184.979    24442.014
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
553  mtMAM+R4      11804.863    163 23935.725    77399.725    24361.990
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
554  mtMAM+R5      11778.474    165 23886.948    78666.948    24318.443
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
555  mtMAM+R6      11771.500    167 23877.001    79989.001    24313.726
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
556  mtMAM+R7      11770.457    169 23878.914    81338.914    24320.869
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
560  mtMAM+F       11856.282    176 24064.565    86368.565    24524.826
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
561  mtMAM+F+I     11742.718    177 23839.436    86851.436    24302.312
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
562  mtMAM+F+G4    11182.566    177 22719.132    85731.132    23182.008
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
563  mtMAM+F+I+G4  11167.805    178 22691.610    86415.610    23157.102
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
564  mtMAM+F+R2    11361.179    178 23078.359    86802.359    23543.850
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
565  mtMAM+F+R3    11217.797    180 22795.594    87955.594    23266.316
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
566  mtMAM+F+R4    11179.473    182 22722.945    89334.945    23198.897
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
567  mtMAM+F+R5    11153.714    184 22675.427    90755.427    23156.609
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
568  mtMAM+F+R6    11152.815    186 22677.630    92241.630    23164.043
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
573  FLAVI         11645.578    157 23605.156    73217.156    24015.730
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
574  FLAVI+I       11618.119    158 23552.237    73796.237    23965.427
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
575  FLAVI+G4      11109.037    158 22534.074    72778.074    22947.263
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
576  FLAVI+I+G4    11098.177    159 22514.355    73394.355    22930.159
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
577  FLAVI+R2      11227.471    159 22772.942    73652.942    23188.746
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
578  FLAVI+R3      11143.651    161 22609.302    74773.302    23030.336
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
579  FLAVI+R4      11083.888    163 22493.775    75957.775    22920.040
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
580  FLAVI+R5      11064.302    165 22458.604    77238.604    22890.098
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
581  FLAVI+R6      11063.608    167 22461.215    78573.215    22897.940
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
586  FLAVI+F       11850.269    176 24052.539    86356.539    24512.800
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
587  FLAVI+F+I     11817.002    177 23988.005    87000.005    24450.881
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
588  FLAVI+F+G4    11236.331    177 22826.662    85838.662    23289.538
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
589  FLAVI+F+I+G4  11236.332    178 22828.663    86552.663    23294.155
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
590  FLAVI+F+R2    11381.305    178 23118.610    86842.610    23584.101
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
591  FLAVI+F+R3    11267.096    180 22894.192    88054.192    23364.914
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
592  FLAVI+F+R4    11229.775    182 22823.549    89435.549    23299.501
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
593  FLAVI+F+R5    11200.659    184 22769.318    90849.318    23250.501
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
594  FLAVI+F+R6    11196.987    186 22765.974    92329.974    23252.386
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
599  HIVb          11378.294    157 23070.589    72682.589    23481.162
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
600  HIVb+I        11338.529    158 22993.059    73237.059    23406.248
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
601  HIVb+G4       10911.921    158 22139.843    72383.843    22553.032
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
602  HIVb+I+G4     10912.026    159 22142.051    73022.051    22557.855
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
603  HIVb+R2       11003.952    159 22325.903    73205.903    22741.707
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
604  HIVb+R3       10930.659    161 22183.317    74347.317    22604.352
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
605  HIVb+R4       10873.368    163 22072.735    75536.735    22499.000
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
606  HIVb+R5       10852.218    165 22034.437    76814.437    22465.932
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
607  HIVb+R6       10848.592    167 22031.183    78143.183    22467.908
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
612  HIVb+F        11538.496    176 23428.993    85732.993    23889.254
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
613  HIVb+F+I      11498.532    177 23351.063    86363.063    23813.940
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
614  HIVb+F+G4     10974.352    177 22302.703    85314.703    22765.579
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
615  HIVb+F+I+G4   10974.397    178 22304.793    86028.793    22770.285
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
616  HIVb+F+R2     11095.489    178 22546.979    86270.979    23012.470
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
617  HIVb+F+R3     11002.885    180 22365.771    87525.771    22836.492
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
618  HIVb+F+R4     10957.906    182 22279.813    88891.813    22755.765
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
619  HIVb+F+R5     10922.255    184 22212.509    90292.509    22693.691
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
620  HIVb+F+R6     10921.892    186 22215.784    91779.784    22702.196
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
625  HIVw          11786.090    157 23886.179    73498.179    24296.753
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
626  HIVw+I        11782.890    158 23881.780    74125.780    24294.969
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
627  HIVw+G4       11283.509    158 22883.017    73127.017    23296.206
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
628  HIVw+I+G4     11283.529    159 22885.057    73765.057    23300.861
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
629  HIVw+R2       11397.323    159 23112.646    73992.646    23528.450
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
630  HIVw+R3       11330.064    161 22982.128    75146.128    23403.163
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
631  HIVw+R4       11273.428    163 22872.856    76336.856    23299.120
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
632  HIVw+R5       11254.799    165 22839.598    77619.598    23271.093
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
633  HIVw+R6       11253.555    167 22841.110    78953.110    23277.836
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
638  HIVw+F        11865.695    176 24083.391    86387.391    24543.652
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
639  HIVw+F+I      11855.177    177 24064.355    87076.355    24527.231
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
640  HIVw+F+G4     11272.894    177 22899.788    85911.788    23362.665
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
641  HIVw+F+I+G4   11272.906    178 22901.812    86625.812    23367.303
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
642  HIVw+F+R2     11404.874    178 23165.747    86889.747    23631.239
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
643  HIVw+F+R3     11298.971    180 22957.942    88117.942    23428.664
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
644  HIVw+F+R4     11260.555    182 22885.110    89497.110    23361.062
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
645  HIVw+F+R5     11225.383    184 22818.766    90898.766    23299.948
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
646  HIVw+F+R6     11224.571    186 22821.141    92385.141    23307.554
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
651  FLU           11129.442    157 22572.884    72184.884    22983.458
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
652  FLU+I         11129.439    158 22574.877    72818.877    22988.066
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
653  FLU+G4        10748.911    158 21813.822    72057.822    22227.012
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
654  FLU+I+G4      10748.880    159 21815.760    72695.760    22231.564
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
655  FLU+R2        10829.880    159 21977.759    72857.759    22393.563
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
656  FLU+R3        10771.268    161 21864.536    74028.536    22285.570
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
657  FLU+R4        10725.289    163 21776.578    75240.578    22202.843
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
658  FLU+R5        10714.898    165 21759.796    76539.796    22191.291
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
659  FLU+R6        10715.039    167 21764.077    77876.077    22200.803
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
664  FLU+F         11299.167    176 22950.333    85254.333    23410.595
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
665  FLU+F+I       11299.164    177 22952.328    85964.328    23415.204
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
666  FLU+F+G4      10816.995    177 21987.989    84999.989    22450.866
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
667  FLU+F+I+G4    10816.997    178 21989.994    85713.994    22455.485
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
668  FLU+F+R2      10933.669    178 22223.338    85947.338    22688.830
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
669  FLU+F+R3      10843.175    180 22046.350    87206.350    22517.072
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
670  FLU+F+R4      10795.859    182 21955.717    88567.717    22431.669
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
671  FLU+F+R5      10777.568    184 21923.136    90003.136    22404.318
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
672  FLU+F+R6      10775.591    186 21923.183    91487.183    22409.595
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
677  rtREV         10946.852    157 22207.705    71819.705    22618.278
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
678  rtREV+I       10849.647    158 22015.294    72259.294    22428.483
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
679  rtREV+G4      10540.694    158 21397.388    71641.388    21810.577
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
680  rtREV+I+G4    10535.452    159 21388.904    72268.904    21804.708
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
681  rtREV+R2      10634.425    159 21586.849    72466.849    22002.653
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
682  rtREV+R3      10554.581    161 21431.162    73595.162    21852.196
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
683  rtREV+R4      10513.199    163 21352.398    74816.398    21778.662
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
684  rtREV+R5      10499.507    165 21329.014    76109.014    21760.509
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
685  rtREV+R6      10499.492    167 21332.984    77444.984    21769.709
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
690  rtREV+F       11045.847    176 22443.694    84747.694    22903.956
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
691  rtREV+F+I     10965.013    177 22284.026    85296.026    22746.902
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
692  rtREV+F+G4    10612.613    177 21579.227    84591.227    22042.103
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
693  rtREV+F+I+G4  10610.773    178 21577.546    85301.546    22043.038
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
694  rtREV+F+R2    10719.883    178 21795.765    85519.765    22261.257
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
695  rtREV+F+R3    10631.313    180 21622.626    86782.626    22093.347
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
696  rtREV+F+R4    10584.380    182 21532.761    88144.761    22008.713
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
697  rtREV+F+R5    10571.980    184 21511.960    89591.960    21993.142
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
698  rtREV+F+R6    10569.749    186 21511.497    91075.497    21997.910
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
703  cpREV         11051.788    157 22417.575    72029.575    22828.149
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
704  cpREV+I       10974.238    158 22264.476    72508.476    22677.665
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
705  cpREV+G4      10669.898    158 21655.795    71899.795    22068.984
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
706  cpREV+I+G4    10664.188    159 21646.376    72526.376    22062.180
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
707  cpREV+R2      10755.666    159 21829.333    72709.333    22245.137
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
708  cpREV+R3      10692.912    161 21707.824    73871.824    22128.859
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
709  cpREV+R4      10647.669    163 21621.338    75085.338    22047.603
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
710  cpREV+R5      10641.882    165 21613.764    76393.764    22045.259
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
711  cpREV+R6      10641.232    167 21616.464    77728.464    22053.190
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
716  cpREV+F       11228.327    176 22808.654    85112.654    23268.915
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
717  cpREV+F+I     11164.012    177 22682.024    85694.024    23144.901
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
718  cpREV+F+G4    10795.512    177 21945.024    84957.024    22407.900
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
719  cpREV+F+I+G4  10791.563    178 21939.125    85663.125    22404.617
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
720  cpREV+F+R2    10897.937    178 22151.874    85875.874    22617.365
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
721  cpREV+F+R3    10812.416    180 21984.831    87144.831    22455.553
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
722  cpREV+F+R4    10774.986    182 21913.972    88525.972    22389.924
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
723  cpREV+F+R5    10766.055    184 21900.110    89980.110    22381.293
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
724  cpREV+F+R6    10765.512    186 21903.025    91467.025    22389.437
Model C10 is alias for POISSON+G+FMIX{C10pi1:1:0.1191344178,C10pi2:1:0.0874372456,C10pi3:1:0.1037105070,C10pi4:1:0.0922584809,C10pi5:1:0.1070492801,C10pi6:1:0.1329945166,C10pi7:1:0.0538028458,C10pi8:1:0.0691986212,C10pi9:1:0.1319937434,C10pi10:1:0.1024203429}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
729  C10           10479.322    158 21274.643    71518.643    21687.832
Model C20 is alias for POISSON+G+FMIX{C20pi1:1:0.0559910600,C20pi2:1:0.0514824870,C20pi3:1:0.0812922124,C20pi4:1:0.0721976867,C20pi5:1:0.0556718858,C20pi6:1:0.0331003080,C20pi7:1:0.0589501763,C20pi8:1:0.0263756889,C20pi9:1:0.0307584220,C20pi10:1:0.0376701125,C20pi11:1:0.0303058290,C20pi12:1:0.0808775576,C20pi13:1:0.0263349134,C20pi14:1:0.0579101455,C20pi15:1:0.0371248064,C20pi16:1:0.0586867766,C20pi17:1:0.0561479138,C20pi18:1:0.0349810886,C20pi19:1:0.0544937394,C20pi20:1:0.0596471901}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
730  C20           10369.906    158 21055.812    71299.812    21469.001
Model C30 is alias for POISSON+G+FMIX{C30pi1:1:0.0095783264,C30pi2:1:0.0248476365,C30pi3:1:0.0636309366,C30pi4:1:0.0537939225,C30pi5:1:0.0295885587,C30pi6:1:0.0117587936,C30pi7:1:0.0132013428,C30pi8:1:0.0236868805,C30pi9:1:0.0261687659,C30pi10:1:0.0239821974,C30pi11:1:0.0257100906,C30pi12:1:0.0465072425,C30pi13:1:0.0546794546,C30pi14:1:0.0536085131,C30pi15:1:0.0270622670,C30pi16:1:0.0403913593,C30pi17:1:0.0474212700,C30pi18:1:0.0458816478,C30pi19:1:0.0214036510,C30pi20:1:0.0290385981,C30pi21:1:0.0123391793,C30pi22:1:0.0569350229,C30pi23:1:0.0419687568,C30pi24:1:0.0339027062,C30pi25:1:0.0388777376,C30pi26:1:0.0196343766,C30pi27:1:0.0233086174,C30pi28:1:0.0622722654,C30pi29:1:0.0184803385,C30pi30:1:0.0203395454}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
731  C30           10333.586    158 20983.171    71227.171    21396.360
Model C40 is alias for POISSON+G+FMIX{C40pi1:1:0.0223853788,C40pi2:1:0.0338891820,C40pi3:1:0.0577169375,C40pi4:1:0.0252416233,C40pi5:1:0.0108607921,C40pi6:1:0.0462373793,C40pi7:1:0.0102293175,C40pi8:1:0.0147523625,C40pi9:1:0.0143161352,C40pi10:1:0.0182302541,C40pi11:1:0.0204025079,C40pi12:1:0.0425505156,C40pi13:1:0.0248627269,C40pi14:1:0.0105892988,C40pi15:1:0.0188238725,C40pi16:1:0.0086663445,C40pi17:1:0.0148496147,C40pi18:1:0.0343037402,C40pi19:1:0.0225335203,C40pi20:1:0.0174068578,C40pi21:1:0.0112207827,C40pi22:1:0.0443532245,C40pi23:1:0.0392573370,C40pi24:1:0.0196756555,C40pi25:1:0.0287690328,C40pi26:1:0.0114441177,C40pi27:1:0.0112338740,C40pi28:1:0.0582694099,C40pi29:1:0.0444272279,C40pi30:1:0.0112010942,C40pi31:1:0.0145176111,C40pi32:1:0.0114629026,C40pi33:1:0.0239628061,C40pi34:1:0.0266266492,C40pi35:1:0.0481201159,C40pi36:1:0.0371147423,C40pi37:1:0.0160476688,C40pi38:1:0.0237249267,C40pi39:1:0.0235226203,C40pi40:1:0.0261998398}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
732  C40           10323.506    158 20963.012    71207.012    21376.201
Model C50 is alias for POISSON+G+FMIX{C50pi1:1:0.0164297003,C50pi2:1:0.0273175755,C50pi3:1:0.0460247610,C50pi4:1:0.0084864734,C50pi5:1:0.0125389252,C50pi6:1:0.0343549036,C50pi7:1:0.0130241102,C50pi8:1:0.0094755681,C50pi9:1:0.0190040551,C50pi10:1:0.0151902354,C50pi11:1:0.0320534760,C50pi12:1:0.0210059850,C50pi13:1:0.0237408547,C50pi14:1:0.0239841203,C50pi15:1:0.0213748021,C50pi16:1:0.0210717705,C50pi17:1:0.0050241805,C50pi18:1:0.0166262276,C50pi19:1:0.0143945956,C50pi20:1:0.0104391130,C50pi21:1:0.0107628277,C50pi22:1:0.0148818171,C50pi23:1:0.0321480239,C50pi24:1:0.0145477978,C50pi25:1:0.0332355807,C50pi26:1:0.0143190281,C50pi27:1:0.0234478734,C50pi28:1:0.0183044983,C50pi29:1:0.0403269452,C50pi30:1:0.0135629530,C50pi31:1:0.0091880799,C50pi32:1:0.0158270022,C50pi33:1:0.0121019379,C50pi34:1:0.0353560982,C50pi35:1:0.0404495617,C50pi36:1:0.0104569232,C50pi37:1:0.0146187792,C50pi38:1:0.0093984095,C50pi39:1:0.0146773809,C50pi40:1:0.0201635562,C50pi41:1:0.0255640273,C50pi42:1:0.0039486842,C50pi43:1:0.0393652608,C50pi44:1:0.0056415419,C50pi45:1:0.0382833580,C50pi46:1:0.0039735086,C50pi47:1:0.0140269355,C50pi48:1:0.0476703673,C50pi49:1:0.0204062788,C50pi50:1:0.0117835304}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
733  C50           10278.736    158 20873.473    71117.473    21286.662
Model C60 is alias for POISSON+G+FMIX{C60pi1:1:0.0169698865,C60pi2:1:0.0211683374,C60pi3:1:0.0276589079,C60pi4:1:0.0065675964,C60pi5:1:0.0141221416,C60pi6:1:0.0068774834,C60pi7:1:0.0146909701,C60pi8:1:0.0067225777,C60pi9:1:0.0018396660,C60pi10:1:0.0102547197,C60pi11:1:0.0230896163,C60pi12:1:0.0057941033,C60pi13:1:0.0125394534,C60pi14:1:0.0204526478,C60pi15:1:0.0070629602,C60pi16:1:0.0117982741,C60pi17:1:0.0068334668,C60pi18:1:0.0433775839,C60pi19:1:0.0318278731,C60pi20:1:0.0222546108,C60pi21:1:0.0102264969,C60pi22:1:0.0150545891,C60pi23:1:0.0134159878,C60pi24:1:0.0148552065,C60pi25:1:0.0239111516,C60pi26:1:0.0128776278,C60pi27:1:0.0222318842,C60pi28:1:0.0247444742,C60pi29:1:0.0214274810,C60pi30:1:0.0115001882,C60pi31:1:0.0076017389,C60pi32:1:0.0130258568,C60pi33:1:0.0093701965,C60pi34:1:0.0467194264,C60pi35:1:0.0441940314,C60pi36:1:0.0322263154,C60pi37:1:0.0402999891,C60pi38:1:0.0150234227,C60pi39:1:0.0104589903,C60pi40:1:0.0214742395,C60pi41:1:0.0154957836,C60pi42:1:0.0101789953,C60pi43:1:0.0227980379,C60pi44:1:0.0123204539,C60pi45:1:0.0066777583,C60pi46:1:0.0004150083,C60pi47:1:0.0344385130,C60pi48:1:0.0113663379,C60pi49:1:0.0127143049,C60pi50:1:0.0124323741,C60pi51:1:0.0262124415,C60pi52:1:0.0064994957,C60pi53:1:0.0103203293,C60pi54:1:0.0142463512,C60pi55:1:0.0215600067,C60pi56:1:0.0199150700,C60pi57:1:0.0038964200,C60pi58:1:0.0113448855,C60pi59:1:0.0128595846,C60pi60:1:0.0117656776}
WARNING: Your input class weight 0.000415008 is very small and may cause numerical issues
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
734  C60           10297.895    158 20911.790    71155.790    21324.979
Model EX2 is alias for MIX{BurEX2:0.672020808818762,ExpEX2:1.6413466609931}
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
735  EX2           10700.872    158 21717.745    71961.745    22130.934
Model EX3 is alias for MIX{BurEX3:0.427672756793791,IntEX3:0.837595938019774,HExEX3:1.51863631431518}
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
736  EX3           10588.374    159 21494.747    72374.747    21910.551
Model EHO is alias for MIX{ExtEHO:0.720274356,HelEHO:0.976798797,OthEHO:0.783109376}
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
737  EHO           10828.359    159 21974.718    72854.718    22390.522
Model UL2 is alias for MIX{M1_UL2:0.581348617,M2_UL2:1.465482789}
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
738  UL2           10701.282    158 21718.565    71962.565    22131.754
Model UL3 is alias for MIX{Q1_UL3:0.484340397,Q2_UL3:0.492780514,Q3_UL3:1.15597274}
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
739  UL3           10883.514    159 22085.027    72965.027    22500.832
Model EX_EHO is alias for MIX{BUR_EXT:0.761816796788931,BUR_HEL:0.744425646802117,BUR_OTH:0.532457759429489,EXP_EXT:1.5639387472863,EXP_HEL:2.06403411829438,EXP_OTH:1.43336795177594}
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
740  EX_EHO        10568.172    162 21460.344    74272.344    21883.994
Model LG4M is alias for MIX{LG4M1,LG4M2,LG4M3,LG4M4}*G4
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
741  LG4M          10547.236    158 21410.472    71654.472    21823.661
Model LG4X is alias for MIX{LG4X1,LG4X2,LG4X3,LG4X4}*R4
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
742  LG4X          10476.639    163 21279.277    74743.277    21705.542
Model CF4 is alias for POISSON+FMIX{Fclass1,Fclass2,Fclass3,Fclass4}+F+G
WARNING: Normalizing State frequencies so that sum of them equals to 1
WARNING: Normalizing State frequencies so that sum of them equals to 1
WARNING: Normalizing State frequencies so that sum of them equals to 1
WARNING: Normalizing State frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
743  CF4           10776.454    181 21914.907    87798.907    22388.244
Model LG+C10 is alias for LG+POISSON+G+FMIX{C10pi1:1:0.1191344178,C10pi2:1:0.0874372456,C10pi3:1:0.1037105070,C10pi4:1:0.0922584809,C10pi5:1:0.1070492801,C10pi6:1:0.1329945166,C10pi7:1:0.0538028458,C10pi8:1:0.0691986212,C10pi9:1:0.1319937434,C10pi10:1:0.1024203429}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
744  LG+C10        10530.089    158 21376.178    71620.178    21789.367
Model LG+C20 is alias for LG+POISSON+G+FMIX{C20pi1:1:0.0559910600,C20pi2:1:0.0514824870,C20pi3:1:0.0812922124,C20pi4:1:0.0721976867,C20pi5:1:0.0556718858,C20pi6:1:0.0331003080,C20pi7:1:0.0589501763,C20pi8:1:0.0263756889,C20pi9:1:0.0307584220,C20pi10:1:0.0376701125,C20pi11:1:0.0303058290,C20pi12:1:0.0808775576,C20pi13:1:0.0263349134,C20pi14:1:0.0579101455,C20pi15:1:0.0371248064,C20pi16:1:0.0586867766,C20pi17:1:0.0561479138,C20pi18:1:0.0349810886,C20pi19:1:0.0544937394,C20pi20:1:0.0596471901}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
745  LG+C20        10445.900    158 21207.801    71451.801    21620.990
Model LG+C30 is alias for LG+POISSON+G+FMIX{C30pi1:1:0.0095783264,C30pi2:1:0.0248476365,C30pi3:1:0.0636309366,C30pi4:1:0.0537939225,C30pi5:1:0.0295885587,C30pi6:1:0.0117587936,C30pi7:1:0.0132013428,C30pi8:1:0.0236868805,C30pi9:1:0.0261687659,C30pi10:1:0.0239821974,C30pi11:1:0.0257100906,C30pi12:1:0.0465072425,C30pi13:1:0.0546794546,C30pi14:1:0.0536085131,C30pi15:1:0.0270622670,C30pi16:1:0.0403913593,C30pi17:1:0.0474212700,C30pi18:1:0.0458816478,C30pi19:1:0.0214036510,C30pi20:1:0.0290385981,C30pi21:1:0.0123391793,C30pi22:1:0.0569350229,C30pi23:1:0.0419687568,C30pi24:1:0.0339027062,C30pi25:1:0.0388777376,C30pi26:1:0.0196343766,C30pi27:1:0.0233086174,C30pi28:1:0.0622722654,C30pi29:1:0.0184803385,C30pi30:1:0.0203395454}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
746  LG+C30        10425.100    158 21166.199    71410.199    21579.388
Model LG+C40 is alias for LG+POISSON+G+FMIX{C40pi1:1:0.0223853788,C40pi2:1:0.0338891820,C40pi3:1:0.0577169375,C40pi4:1:0.0252416233,C40pi5:1:0.0108607921,C40pi6:1:0.0462373793,C40pi7:1:0.0102293175,C40pi8:1:0.0147523625,C40pi9:1:0.0143161352,C40pi10:1:0.0182302541,C40pi11:1:0.0204025079,C40pi12:1:0.0425505156,C40pi13:1:0.0248627269,C40pi14:1:0.0105892988,C40pi15:1:0.0188238725,C40pi16:1:0.0086663445,C40pi17:1:0.0148496147,C40pi18:1:0.0343037402,C40pi19:1:0.0225335203,C40pi20:1:0.0174068578,C40pi21:1:0.0112207827,C40pi22:1:0.0443532245,C40pi23:1:0.0392573370,C40pi24:1:0.0196756555,C40pi25:1:0.0287690328,C40pi26:1:0.0114441177,C40pi27:1:0.0112338740,C40pi28:1:0.0582694099,C40pi29:1:0.0444272279,C40pi30:1:0.0112010942,C40pi31:1:0.0145176111,C40pi32:1:0.0114629026,C40pi33:1:0.0239628061,C40pi34:1:0.0266266492,C40pi35:1:0.0481201159,C40pi36:1:0.0371147423,C40pi37:1:0.0160476688,C40pi38:1:0.0237249267,C40pi39:1:0.0235226203,C40pi40:1:0.0261998398}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
747  LG+C40        10397.617    158 21111.234    71355.234    21524.423
Model LG+C50 is alias for LG+POISSON+G+FMIX{C50pi1:1:0.0164297003,C50pi2:1:0.0273175755,C50pi3:1:0.0460247610,C50pi4:1:0.0084864734,C50pi5:1:0.0125389252,C50pi6:1:0.0343549036,C50pi7:1:0.0130241102,C50pi8:1:0.0094755681,C50pi9:1:0.0190040551,C50pi10:1:0.0151902354,C50pi11:1:0.0320534760,C50pi12:1:0.0210059850,C50pi13:1:0.0237408547,C50pi14:1:0.0239841203,C50pi15:1:0.0213748021,C50pi16:1:0.0210717705,C50pi17:1:0.0050241805,C50pi18:1:0.0166262276,C50pi19:1:0.0143945956,C50pi20:1:0.0104391130,C50pi21:1:0.0107628277,C50pi22:1:0.0148818171,C50pi23:1:0.0321480239,C50pi24:1:0.0145477978,C50pi25:1:0.0332355807,C50pi26:1:0.0143190281,C50pi27:1:0.0234478734,C50pi28:1:0.0183044983,C50pi29:1:0.0403269452,C50pi30:1:0.0135629530,C50pi31:1:0.0091880799,C50pi32:1:0.0158270022,C50pi33:1:0.0121019379,C50pi34:1:0.0353560982,C50pi35:1:0.0404495617,C50pi36:1:0.0104569232,C50pi37:1:0.0146187792,C50pi38:1:0.0093984095,C50pi39:1:0.0146773809,C50pi40:1:0.0201635562,C50pi41:1:0.0255640273,C50pi42:1:0.0039486842,C50pi43:1:0.0393652608,C50pi44:1:0.0056415419,C50pi45:1:0.0382833580,C50pi46:1:0.0039735086,C50pi47:1:0.0140269355,C50pi48:1:0.0476703673,C50pi49:1:0.0204062788,C50pi50:1:0.0117835304}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
748  LG+C50        10376.263    158 21068.525    71312.525    21481.714
Model LG+C60 is alias for LG+POISSON+G+FMIX{C60pi1:1:0.0169698865,C60pi2:1:0.0211683374,C60pi3:1:0.0276589079,C60pi4:1:0.0065675964,C60pi5:1:0.0141221416,C60pi6:1:0.0068774834,C60pi7:1:0.0146909701,C60pi8:1:0.0067225777,C60pi9:1:0.0018396660,C60pi10:1:0.0102547197,C60pi11:1:0.0230896163,C60pi12:1:0.0057941033,C60pi13:1:0.0125394534,C60pi14:1:0.0204526478,C60pi15:1:0.0070629602,C60pi16:1:0.0117982741,C60pi17:1:0.0068334668,C60pi18:1:0.0433775839,C60pi19:1:0.0318278731,C60pi20:1:0.0222546108,C60pi21:1:0.0102264969,C60pi22:1:0.0150545891,C60pi23:1:0.0134159878,C60pi24:1:0.0148552065,C60pi25:1:0.0239111516,C60pi26:1:0.0128776278,C60pi27:1:0.0222318842,C60pi28:1:0.0247444742,C60pi29:1:0.0214274810,C60pi30:1:0.0115001882,C60pi31:1:0.0076017389,C60pi32:1:0.0130258568,C60pi33:1:0.0093701965,C60pi34:1:0.0467194264,C60pi35:1:0.0441940314,C60pi36:1:0.0322263154,C60pi37:1:0.0402999891,C60pi38:1:0.0150234227,C60pi39:1:0.0104589903,C60pi40:1:0.0214742395,C60pi41:1:0.0154957836,C60pi42:1:0.0101789953,C60pi43:1:0.0227980379,C60pi44:1:0.0123204539,C60pi45:1:0.0066777583,C60pi46:1:0.0004150083,C60pi47:1:0.0344385130,C60pi48:1:0.0113663379,C60pi49:1:0.0127143049,C60pi50:1:0.0124323741,C60pi51:1:0.0262124415,C60pi52:1:0.0064994957,C60pi53:1:0.0103203293,C60pi54:1:0.0142463512,C60pi55:1:0.0215600067,C60pi56:1:0.0199150700,C60pi57:1:0.0038964200,C60pi58:1:0.0113448855,C60pi59:1:0.0128595846,C60pi60:1:0.0117656776}
WARNING: Your input class weight 0.000415008 is very small and may cause numerical issues
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
749  LG+C60        10400.836    158 21117.673    71361.673    21530.862
Akaike Information Criterion:           C50
Corrected Akaike Information Criterion: C50
Bayesian Information Criterion:         C50
Best-fit model: C50 chosen according to BIC

All model information printed to iqtree_gene_trees/COG1631.model.gz
CPU time for ModelFinder: 8028.745 seconds (2h:13m:48s)
Wall-clock time for ModelFinder: 811.815 seconds (0h:13m:31s)
Generating 1000 samples for ultrafast bootstrap (seed: 876864)...
Model C50 is alias for POISSON+G+FMIX{C50pi1:1:0.0164297003,C50pi2:1:0.0273175755,C50pi3:1:0.0460247610,C50pi4:1:0.0084864734,C50pi5:1:0.0125389252,C50pi6:1:0.0343549036,C50pi7:1:0.0130241102,C50pi8:1:0.0094755681,C50pi9:1:0.0190040551,C50pi10:1:0.0151902354,C50pi11:1:0.0320534760,C50pi12:1:0.0210059850,C50pi13:1:0.0237408547,C50pi14:1:0.0239841203,C50pi15:1:0.0213748021,C50pi16:1:0.0210717705,C50pi17:1:0.0050241805,C50pi18:1:0.0166262276,C50pi19:1:0.0143945956,C50pi20:1:0.0104391130,C50pi21:1:0.0107628277,C50pi22:1:0.0148818171,C50pi23:1:0.0321480239,C50pi24:1:0.0145477978,C50pi25:1:0.0332355807,C50pi26:1:0.0143190281,C50pi27:1:0.0234478734,C50pi28:1:0.0183044983,C50pi29:1:0.0403269452,C50pi30:1:0.0135629530,C50pi31:1:0.0091880799,C50pi32:1:0.0158270022,C50pi33:1:0.0121019379,C50pi34:1:0.0353560982,C50pi35:1:0.0404495617,C50pi36:1:0.0104569232,C50pi37:1:0.0146187792,C50pi38:1:0.0093984095,C50pi39:1:0.0146773809,C50pi40:1:0.0201635562,C50pi41:1:0.0255640273,C50pi42:1:0.0039486842,C50pi43:1:0.0393652608,C50pi44:1:0.0056415419,C50pi45:1:0.0382833580,C50pi46:1:0.0039735086,C50pi47:1:0.0140269355,C50pi48:1:0.0476703673,C50pi49:1:0.0204062788,C50pi50:1:0.0117835304}

NOTE: 297 MB RAM (0 GB) is required!
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
Estimate model parameters (epsilon = 0.100)
1. Initial log-likelihood: -10278.736
Optimal log-likelihood: -10278.730
Mixture weights: 0.016 0.027 0.046 0.008 0.013 0.034 0.013 0.009 0.019 0.015 0.032 0.021 0.024 0.024 0.021 0.021 0.005 0.017 0.014 0.010 0.011 0.015 0.032 0.015 0.033 0.014 0.023 0.018 0.040 0.014 0.009 0.016 0.012 0.035 0.040 0.010 0.015 0.009 0.015 0.020 0.026 0.004 0.039 0.006 0.038 0.004 0.014 0.048 0.020 0.012
Gamma shape alpha: 1.132
Parameters optimization took 1 rounds (1.486 sec)
Wrote distance file to... 
Computing ML distances based on estimated model parameters...
Calculating distance matrix: done in 0.121045 secs using 997.6% CPU
Computing ML distances took 0.121258 sec (of wall-clock time) 1.209209 sec (of CPU time)
Setting up auxiliary I and S matrices: done in 0.00194909 secs using 401.9% CPU
Constructing RapidNJ tree: done in 0.106591 secs using 198.8% CPU
Computing RapidNJ tree took 0.108773 sec (of wall-clock time) 0.220610 sec (of CPU time)
Log-likelihood of RapidNJ tree: -10348.642
--------------------------------------------------------------------
|             INITIALIZING CANDIDATE TREE SET                      |
--------------------------------------------------------------------
Generating 98 parsimony trees... 1.433 second
Computing log-likelihood of 98 initial trees ... 60.521 seconds
Current best score: -10242.047

Do NNI search on 20 best initial trees
Optimizing NNI: done in 10.156 secs using 981.4% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 1: -10226.594
Optimizing NNI: done in 12.648 secs using 981.2% CPU
Optimizing NNI: done in 13.5655 secs using 980.4% CPU
Optimizing NNI: done in 12.186 secs using 975.8% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 4: -10217.628
Optimizing NNI: done in 14.4179 secs using 979.3% CPU
Optimizing NNI: done in 12.8052 secs using 979% CPU
Optimizing NNI: done in 18.5563 secs using 983.9% CPU
Optimizing NNI: done in 10.8648 secs using 976.1% CPU
Optimizing NNI: done in 11.5116 secs using 977% CPU
Optimizing NNI: done in 10.9507 secs using 979.7% CPU
Iteration 10 / LogL: -10236.816 / Time: 0h:3m:22s
Optimizing NNI: done in 8.7917 secs using 979.1% CPU
Optimizing NNI: done in 12.9106 secs using 979.9% CPU
Optimizing NNI: done in 17.714 secs using 982.8% CPU
Optimizing NNI: done in 12.6398 secs using 978.3% CPU
Optimizing NNI: done in 14.4689 secs using 981.6% CPU
Optimizing NNI: done in 10.6199 secs using 979.3% CPU
Optimizing NNI: done in 8.4461 secs using 981.7% CPU
Optimizing NNI: done in 11.329 secs using 979% CPU
Optimizing NNI: done in 10.4684 secs using 976.9% CPU
Optimizing NNI: done in 13.2504 secs using 980.5% CPU
Iteration 20 / LogL: -10235.937 / Time: 0h:5m:24s
Finish initializing candidate tree set (20)
Current best tree score: -10217.628 / CPU time: 318.095
Number of iterations: 20
--------------------------------------------------------------------
|               OPTIMIZING CANDIDATE TREE SET                      |
--------------------------------------------------------------------
Optimizing NNI: done in 17.2176 secs using 981.9% CPU
Optimizing NNI: done in 15.1932 secs using 979.9% CPU
Optimizing NNI: done in 16.1876 secs using 978.8% CPU
Optimizing NNI: done in 11.8151 secs using 978.7% CPU
Optimizing NNI: done in 16.0354 secs using 978.9% CPU
Optimizing NNI: done in 17.0152 secs using 980.3% CPU
Optimizing NNI: done in 15.7268 secs using 979.2% CPU
Optimizing NNI: done in 12.0651 secs using 976.5% CPU
Optimizing NNI: done in 16.5411 secs using 980.9% CPU
Optimizing NNI: done in 12.0862 secs using 979% CPU
Iteration 30 / LogL: -10223.820 / Time: 0h:7m:55s (0h:20m:13s left)
Optimizing NNI: done in 19.132 secs using 981.3% CPU
Optimizing NNI: done in 18.9337 secs using 979.4% CPU
Optimizing NNI: done in 18.6473 secs using 979.7% CPU
Optimizing NNI: done in 15.3082 secs using 976.9% CPU
Optimizing NNI: done in 13.4154 secs using 980.6% CPU
Optimizing NNI: done in 9.92764 secs using 976.7% CPU
Optimizing NNI: done in 15.9277 secs using 976.9% CPU
Optimizing NNI: done in 17.9843 secs using 978.4% CPU
Optimizing NNI: done in 13.1669 secs using 976.4% CPU
Optimizing NNI: done in 12.3727 secs using 980.9% CPU
Iteration 40 / LogL: -10219.928 / Time: 0h:10m:31s (0h:17m:16s left)
Optimizing NNI: done in 19.5467 secs using 980.1% CPU
Optimizing NNI: done in 18.2466 secs using 978.6% CPU
Optimizing NNI: done in 13.6936 secs using 976.8% CPU
Optimizing NNI: done in 15.4457 secs using 979.2% CPU
Optimizing NNI: done in 14.9038 secs using 979% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 45: -10215.052
Optimizing NNI: done in 13.6257 secs using 979.7% CPU
Optimizing NNI: done in 18.7279 secs using 981.9% CPU
Optimizing NNI: done in 15.5678 secs using 980.5% CPU
Optimizing NNI: done in 15.4781 secs using 981.6% CPU
Optimizing NNI: done in 12.6853 secs using 979.7% CPU
Iteration 50 / LogL: -10222.276 / Time: 0h:13m:11s (0h:25m:35s left)
Log-likelihood cutoff on original alignment: -10277.775
UFBoot trees printed to iqtree_gene_trees/COG1631.ufboot
Optimizing NNI: done in 19.2227 secs using 980.8% CPU
Optimizing NNI: done in 20.4516 secs using 981.3% CPU
Optimizing NNI: done in 15.1329 secs using 979.3% CPU
Optimizing NNI: done in 16.1204 secs using 981% CPU
Optimizing NNI: done in 13.0797 secs using 982.4% CPU
Optimizing NNI: done in 18.0688 secs using 980.9% CPU
Optimizing NNI: done in 11.6463 secs using 979.1% CPU
Optimizing NNI: done in 12.5982 secs using 982.9% CPU
Optimizing NNI: done in 13.0008 secs using 979.3% CPU
BETTER TREE FOUND at iteration 59: -10215.045
Optimizing NNI: done in 15.686 secs using 980.3% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 60: -10214.950
Iteration 60 / LogL: -10214.950 / Time: 0h:15m:50s (0h:26m:51s left)
Optimizing NNI: done in 9.18585 secs using 979.3% CPU
Optimizing NNI: done in 11.316 secs using 981.6% CPU
Optimizing NNI: done in 15.3544 secs using 981.8% CPU
Optimizing NNI: done in 10.6526 secs using 979% CPU
Optimizing NNI: done in 13.1001 secs using 980.8% CPU
Optimizing NNI: done in 15.1237 secs using 982.8% CPU
Optimizing NNI: done in 16.7709 secs using 978% CPU
Optimizing NNI: done in 19.6378 secs using 979.1% CPU
Optimizing NNI: done in 19.3155 secs using 980.3% CPU
Optimizing NNI: done in 17.2201 secs using 977% CPU
Iteration 70 / LogL: -10214.950 / Time: 0h:18m:19s (0h:23m:53s left)
Optimizing NNI: done in 10.374 secs using 978.8% CPU
Optimizing NNI: done in 10.5938 secs using 980.4% CPU
Optimizing NNI: done in 18.6252 secs using 979.7% CPU
Optimizing NNI: done in 14.4312 secs using 977.4% CPU
Optimizing NNI: done in 15.6983 secs using 979% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 75: -10214.508
Optimizing NNI: done in 11.832 secs using 977.3% CPU
Optimizing NNI: done in 14.129 secs using 981.8% CPU
Optimizing NNI: done in 14.5313 secs using 975.9% CPU
Optimizing NNI: done in 12.0151 secs using 982.9% CPU
Optimizing NNI: done in 16.505 secs using 981.7% CPU
Iteration 80 / LogL: -10218.389 / Time: 0h:20m:40s (0h:24m:52s left)
Optimizing NNI: done in 14.9785 secs using 982.3% CPU
Optimizing NNI: done in 13.4719 secs using 979.3% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 82: -10213.489
Optimizing NNI: done in 17.9108 secs using 980.7% CPU
Optimizing NNI: done in 14.2152 secs using 979.6% CPU
Optimizing NNI: done in 9.94262 secs using 979.5% CPU
Optimizing NNI: done in 17.5095 secs using 979.8% CPU
Optimizing NNI: done in 13.6571 secs using 978.5% CPU
Optimizing NNI: done in 17.2609 secs using 981.4% CPU
Optimizing NNI: done in 15.1452 secs using 979.7% CPU
Optimizing NNI: done in 13.9154 secs using 980.8% CPU
Iteration 90 / LogL: -10221.701 / Time: 0h:23m:11s (0h:23m:58s left)
Optimizing NNI: done in 18.9851 secs using 980.5% CPU
Optimizing NNI: done in 13.5901 secs using 977% CPU
Optimizing NNI: done in 16.7484 secs using 977.3% CPU
Optimizing NNI: done in 13.5457 secs using 979.2% CPU
Optimizing NNI: done in 16.8408 secs using 979.2% CPU
Optimizing NNI: done in 13.246 secs using 979.3% CPU
Optimizing NNI: done in 15.7951 secs using 979.3% CPU
Optimizing NNI: done in 11.2079 secs using 977.7% CPU
Optimizing NNI: done in 14.9959 secs using 977.6% CPU
Optimizing NNI: done in 13.9899 secs using 978.8% CPU
Iteration 100 / LogL: -10214.509 / Time: 0h:25m:41s (0h:21m:16s left)
Log-likelihood cutoff on original alignment: -10277.775
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.986
NOTE: UFBoot does not converge, continue at least 100 more iterations
UFBoot trees printed to iqtree_gene_trees/COG1631.ufboot
Optimizing NNI: done in 15.5431 secs using 981% CPU
Optimizing NNI: done in 17.354 secs using 978.6% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 102: -10212.803
Optimizing NNI: done in 15.7347 secs using 978% CPU
Optimizing NNI: done in 18.4636 secs using 978.3% CPU
Optimizing NNI: done in 11.6184 secs using 976.4% CPU
Optimizing NNI: done in 15.6778 secs using 978.4% CPU
Optimizing NNI: done in 16.6062 secs using 979.7% CPU
Optimizing NNI: done in 18.4323 secs using 977.2% CPU
Optimizing NNI: done in 16.4077 secs using 978.6% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 109: -10212.558
Optimizing NNI: done in 15.6197 secs using 979.5% CPU
Iteration 110 / LogL: -10235.111 / Time: 0h:28m:29s (0h:25m:52s left)
Optimizing NNI: done in 13.6553 secs using 978.8% CPU
Optimizing NNI: done in 16.679 secs using 979.7% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 112: -10212.208
Optimizing NNI: done in 23.0061 secs using 979% CPU
Optimizing NNI: done in 13.035 secs using 978% CPU
Optimizing NNI: done in 17.15 secs using 978.5% CPU
Optimizing NNI: done in 16.5113 secs using 978.5% CPU
Optimizing NNI: done in 16.5213 secs using 977.9% CPU
Optimizing NNI: done in 12.669 secs using 979.6% CPU
Optimizing NNI: done in 13.423 secs using 979.9% CPU
Optimizing NNI: done in 18.2273 secs using 977.8% CPU
Iteration 120 / LogL: -10247.573 / Time: 0h:31m:12s (0h:24m:8s left)
Optimizing NNI: done in 16.27 secs using 978.3% CPU
Optimizing NNI: done in 15.6819 secs using 978.9% CPU
Optimizing NNI: done in 16.6091 secs using 979% CPU
Optimizing NNI: done in 16.6339 secs using 978.3% CPU
Optimizing NNI: done in 15.8347 secs using 978.5% CPU
Optimizing NNI: done in 14.3038 secs using 979.6% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 126: -10212.031
Optimizing NNI: done in 16.4361 secs using 977.8% CPU
Optimizing NNI: done in 17.6127 secs using 977% CPU
Optimizing NNI: done in 15.2666 secs using 977.5% CPU
Optimizing NNI: done in 15.2648 secs using 978% CPU
Iteration 130 / LogL: -10212.766 / Time: 0h:33m:55s (0h:25m:15s left)
Optimizing NNI: done in 18.6718 secs using 981% CPU
Optimizing NNI: done in 11.5526 secs using 978.4% CPU
Optimizing NNI: done in 17.7433 secs using 981.7% CPU
Optimizing NNI: done in 13.472 secs using 980.2% CPU
Optimizing NNI: done in 19.5839 secs using 983% CPU
Optimizing NNI: done in 17.7431 secs using 980.1% CPU
Optimizing NNI: done in 14.7575 secs using 980.2% CPU
Optimizing NNI: done in 20.4729 secs using 979.8% CPU
Optimizing NNI: done in 13.5841 secs using 983.2% CPU
Optimizing NNI: done in 18.0938 secs using 981.9% CPU
Iteration 140 / LogL: -10212.480 / Time: 0h:36m:42s (0h:22m:42s left)
Optimizing NNI: done in 15.745 secs using 983.1% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 141: -10211.110
Optimizing NNI: done in 10.6125 secs using 980% CPU
Optimizing NNI: done in 13.5237 secs using 980.7% CPU
Optimizing NNI: done in 16.8016 secs using 979.4% CPU
Optimizing NNI: done in 17.9181 secs using 983.2% CPU
Optimizing NNI: done in 14.142 secs using 982.2% CPU
Optimizing NNI: done in 17.1807 secs using 981% CPU
Optimizing NNI: done in 12.5523 secs using 980.1% CPU
Optimizing NNI: done in 22.9635 secs using 983.9% CPU
Optimizing NNI: done in 16.335 secs using 980.9% CPU
Iteration 150 / LogL: -10213.195 / Time: 0h:39m:23s (0h:24m:3s left)
Log-likelihood cutoff on original alignment: -10277.775
UFBoot trees printed to iqtree_gene_trees/COG1631.ufboot
Optimizing NNI: done in 16.979 secs using 981.5% CPU
Optimizing NNI: done in 14.3118 secs using 981.5% CPU
Optimizing NNI: done in 11.3888 secs using 983.7% CPU
Optimizing NNI: done in 16.0894 secs using 980.5% CPU
Optimizing NNI: done in 14.0414 secs using 982.6% CPU
Optimizing NNI: done in 13.0067 secs using 981.9% CPU
Optimizing NNI: done in 13.0387 secs using 982.5% CPU
Optimizing NNI: done in 16.5329 secs using 982.5% CPU
Optimizing NNI: done in 16.1738 secs using 981.1% CPU
Optimizing NNI: done in 16.8914 secs using 983.7% CPU
Iteration 160 / LogL: -10215.426 / Time: 0h:41m:53s (0h:21m:20s left)
Optimizing NNI: done in 18.0155 secs using 976.9% CPU
Optimizing NNI: done in 15.4156 secs using 980.1% CPU
Optimizing NNI: done in 13.0292 secs using 981.6% CPU
Optimizing NNI: done in 14.7188 secs using 981.5% CPU
Optimizing NNI: done in 22.4451 secs using 980.3% CPU
Optimizing NNI: done in 16.8243 secs using 982.4% CPU
Optimizing NNI: done in 19.9196 secs using 980.2% CPU
Optimizing NNI: done in 12.6578 secs using 978.4% CPU
Optimizing NNI: done in 22.4402 secs using 981.9% CPU
Optimizing NNI: done in 13.5721 secs using 981.5% CPU
Iteration 170 / LogL: -10213.171 / Time: 0h:44m:44s (0h:18m:47s left)
Optimizing NNI: done in 13.1373 secs using 978.4% CPU
Optimizing NNI: done in 19.129 secs using 979.9% CPU
Optimizing NNI: done in 19.2281 secs using 982.4% CPU
Optimizing NNI: done in 16.2035 secs using 983.5% CPU
Optimizing NNI: done in 13.972 secs using 983.5% CPU
Optimizing NNI: done in 14.0156 secs using 982.2% CPU
Optimizing NNI: done in 16.5584 secs using 981.6% CPU
Optimizing NNI: done in 18.1292 secs using 982.6% CPU
Optimizing NNI: done in 15.2876 secs using 977.4% CPU
Optimizing NNI: done in 17.8004 secs using 978.6% CPU
Iteration 180 / LogL: -10213.767 / Time: 0h:47m:29s (0h:16m:10s left)
Optimizing NNI: done in 13.3399 secs using 978.7% CPU
Optimizing NNI: done in 15.3084 secs using 980.2% CPU
Optimizing NNI: done in 20.2184 secs using 978.4% CPU
Optimizing NNI: done in 20.4793 secs using 978.3% CPU
Optimizing NNI: done in 14.6483 secs using 978.3% CPU
Optimizing NNI: done in 14.282 secs using 976.4% CPU
Optimizing NNI: done in 17.7011 secs using 977.6% CPU
Optimizing NNI: done in 14.7436 secs using 979.3% CPU
Optimizing NNI: done in 14.9684 secs using 978.4% CPU
Optimizing NNI: done in 15.1798 secs using 978% CPU
Iteration 190 / LogL: -10212.373 / Time: 0h:50m:11s (0h:13m:32s left)
Optimizing NNI: done in 17.9695 secs using 981% CPU
Optimizing NNI: done in 19.4664 secs using 982% CPU
Optimizing NNI: done in 14.3992 secs using 981.8% CPU
Optimizing NNI: done in 17.9199 secs using 981.5% CPU
Optimizing NNI: done in 23.4466 secs using 982.8% CPU
Optimizing NNI: done in 20.5946 secs using 978.6% CPU
Optimizing NNI: done in 21.2347 secs using 979.9% CPU
Optimizing NNI: done in 15.3671 secs using 981.2% CPU
Optimizing NNI: done in 13.3071 secs using 981.4% CPU
Optimizing NNI: done in 22.0177 secs using 977.3% CPU
Iteration 200 / LogL: -10234.782 / Time: 0h:53m:18s (0h:10m:58s left)
Log-likelihood cutoff on original alignment: -10277.775
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.988
NOTE: UFBoot does not converge, continue at least 100 more iterations
UFBoot trees printed to iqtree_gene_trees/COG1631.ufboot
Optimizing NNI: done in 12.5709 secs using 981.6% CPU
Optimizing NNI: done in 15.7544 secs using 983.3% CPU
Optimizing NNI: done in 17.3814 secs using 981.9% CPU
Optimizing NNI: done in 20.8067 secs using 980.1% CPU
Optimizing NNI: done in 18.5239 secs using 982.3% CPU
Optimizing NNI: done in 16.0575 secs using 984.2% CPU
Optimizing NNI: done in 16.7913 secs using 983.3% CPU
Optimizing NNI: done in 13.1019 secs using 983.4% CPU
Optimizing NNI: done in 12.3642 secs using 984.1% CPU
Optimizing NNI: done in 12.1447 secs using 985.5% CPU
Iteration 210 / LogL: -10217.422 / Time: 0h:55m:56s (0h:24m:5s left)
Optimizing NNI: done in 14.7571 secs using 984.4% CPU
Optimizing NNI: done in 12.5021 secs using 985.2% CPU
Optimizing NNI: done in 16.5223 secs using 985.3% CPU
Optimizing NNI: done in 11.8709 secs using 984.8% CPU
Optimizing NNI: done in 16.629 secs using 983.4% CPU
Optimizing NNI: done in 11.4237 secs using 984.5% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 216: -10209.890
Optimizing NNI: done in 10.6399 secs using 987.9% CPU
Optimizing NNI: done in 9.90548 secs using 989.9% CPU
Optimizing NNI: done in 10.781 secs using 985.6% CPU
Optimizing NNI: done in 16.1125 secs using 983.3% CPU
Iteration 220 / LogL: -10211.429 / Time: 0h:58m:9s (0h:25m:29s left)
Optimizing NNI: done in 10.8721 secs using 989.5% CPU
Optimizing NNI: done in 10.96 secs using 985.5% CPU
Optimizing NNI: done in 9.97444 secs using 986.8% CPU
Optimizing NNI: done in 8.55768 secs using 987.4% CPU
Optimizing NNI: done in 10.5378 secs using 983.1% CPU
Optimizing NNI: done in 18.3301 secs using 984.2% CPU
Optimizing NNI: done in 10.2822 secs using 987.7% CPU
Optimizing NNI: done in 9.0392 secs using 989.5% CPU
Optimizing NNI: done in 10.5667 secs using 986.9% CPU
Optimizing NNI: done in 11.4318 secs using 988.5% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 230: -10209.847
Iteration 230 / LogL: -10209.847 / Time: 1h:0m:3s (0h:26m:13s left)
Optimizing NNI: done in 10.6069 secs using 988.9% CPU
Optimizing NNI: done in 11.6731 secs using 989.1% CPU
Optimizing NNI: done in 12.167 secs using 989.4% CPU
Optimizing NNI: done in 9.81939 secs using 989.2% CPU
Optimizing NNI: done in 12.6834 secs using 987.5% CPU
Optimizing NNI: done in 8.5843 secs using 987.4% CPU
Optimizing NNI: done in 10.6387 secs using 988.3% CPU
Optimizing NNI: done in 11.1573 secs using 989.8% CPU
Optimizing NNI: done in 10.5517 secs using 989.1% CPU
Optimizing NNI: done in 11.6099 secs using 989.6% CPU
Iteration 240 / LogL: -10239.837 / Time: 1h:1m:53s (0h:23m:18s left)
Optimizing NNI: done in 9.87489 secs using 990.5% CPU
Optimizing NNI: done in 10.0166 secs using 990.9% CPU
Optimizing NNI: done in 11.9605 secs using 990.4% CPU
Optimizing NNI: done in 9.66742 secs using 991.7% CPU
Optimizing NNI: done in 10.4535 secs using 992.4% CPU
Optimizing NNI: done in 11.392 secs using 990.9% CPU
Optimizing NNI: done in 9.10414 secs using 990.2% CPU
Optimizing NNI: done in 7.54327 secs using 989.8% CPU
Optimizing NNI: done in 10.4131 secs using 988.9% CPU
Optimizing NNI: done in 8.02512 secs using 990.6% CPU
Iteration 250 / LogL: -10213.883 / Time: 1h:3m:33s (0h:20m:25s left)
Log-likelihood cutoff on original alignment: -10277.775
UFBoot trees printed to iqtree_gene_trees/COG1631.ufboot
Optimizing NNI: done in 9.50827 secs using 988.1% CPU
Optimizing NNI: done in 11.0255 secs using 989.8% CPU
Optimizing NNI: done in 10.6972 secs using 988.5% CPU
Optimizing NNI: done in 8.70518 secs using 990.2% CPU
Optimizing NNI: done in 10.4104 secs using 989.5% CPU
Optimizing NNI: done in 10.741 secs using 991% CPU
Optimizing NNI: done in 10.4353 secs using 989.6% CPU
Optimizing NNI: done in 12.6139 secs using 991.1% CPU
Optimizing NNI: done in 9.31189 secs using 991.2% CPU
Optimizing NNI: done in 10.4061 secs using 992% CPU
Iteration 260 / LogL: -10212.508 / Time: 1h:5m:19s (0h:17m:39s left)
Optimizing NNI: done in 10.885 secs using 990.6% CPU
Optimizing NNI: done in 8.21481 secs using 990.3% CPU
Optimizing NNI: done in 9.88152 secs using 991.7% CPU
Optimizing NNI: done in 7.1031 secs using 990.9% CPU
Optimizing NNI: done in 12.824 secs using 988.3% CPU
Optimizing NNI: done in 9.92897 secs using 991.7% CPU
Optimizing NNI: done in 9.64068 secs using 990.2% CPU
Optimizing NNI: done in 11.9423 secs using 991.2% CPU
Optimizing NNI: done in 10.3602 secs using 990.4% CPU
Optimizing NNI: done in 10.8621 secs using 989.7% CPU
Iteration 270 / LogL: -10221.440 / Time: 1h:7m:2s (0h:14m:57s left)
Optimizing NNI: done in 10.7169 secs using 990.4% CPU
Optimizing NNI: done in 8.49432 secs using 990.1% CPU
Optimizing NNI: done in 7.36327 secs using 991% CPU
Optimizing NNI: done in 10.068 secs using 987.7% CPU
Optimizing NNI: done in 13.0844 secs using 989.4% CPU
Optimizing NNI: done in 10.7276 secs using 989.4% CPU
Optimizing NNI: done in 9.84416 secs using 988.6% CPU
Optimizing NNI: done in 8.41135 secs using 987.3% CPU
Optimizing NNI: done in 9.4189 secs using 991.4% CPU
Optimizing NNI: done in 12.3582 secs using 988% CPU
Iteration 280 / LogL: -10219.868 / Time: 1h:8m:44s (0h:12m:19s left)
Optimizing NNI: done in 11.4305 secs using 990.3% CPU
Optimizing NNI: done in 9.30596 secs using 990% CPU
Optimizing NNI: done in 8.65109 secs using 990.1% CPU
Optimizing NNI: done in 8.56089 secs using 990.2% CPU
Optimizing NNI: done in 8.48419 secs using 989.9% CPU
Optimizing NNI: done in 8.42517 secs using 989.7% CPU
Optimizing NNI: done in 12.9489 secs using 990.5% CPU
Optimizing NNI: done in 9.19488 secs using 989.7% CPU
Optimizing NNI: done in 9.64484 secs using 990.7% CPU
Optimizing NNI: done in 9.4563 secs using 990.5% CPU
Iteration 290 / LogL: -10212.749 / Time: 1h:10m:22s (0h:9m:44s left)
Optimizing NNI: done in 8.52435 secs using 988.1% CPU
Optimizing NNI: done in 7.56069 secs using 989.9% CPU
Optimizing NNI: done in 8.93778 secs using 991.4% CPU
Optimizing NNI: done in 10.5224 secs using 990.7% CPU
Optimizing NNI: done in 8.35892 secs using 990.8% CPU
Optimizing NNI: done in 9.41388 secs using 988.9% CPU
Optimizing NNI: done in 9.97971 secs using 989.1% CPU
Optimizing NNI: done in 11.0021 secs using 990.7% CPU
Optimizing NNI: done in 10.0764 secs using 991% CPU
Optimizing NNI: done in 12.1232 secs using 988.8% CPU
Iteration 300 / LogL: -10211.688 / Time: 1h:12m:0s (0h:7m:13s left)
Log-likelihood cutoff on original alignment: -10277.775
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.993
UFBoot trees printed to iqtree_gene_trees/COG1631.ufboot
Optimizing NNI: done in 11.5164 secs using 989.6% CPU
Optimizing NNI: done in 9.30166 secs using 988.3% CPU
Optimizing NNI: done in 8.78272 secs using 991.2% CPU
Optimizing NNI: done in 8.57119 secs using 990.3% CPU
Optimizing NNI: done in 10.8445 secs using 991.1% CPU
Optimizing NNI: done in 10.319 secs using 990.5% CPU
Optimizing NNI: done in 9.81965 secs using 989.1% CPU
Optimizing NNI: done in 10.8367 secs using 991% CPU
Optimizing NNI: done in 12.1346 secs using 990.8% CPU
Optimizing NNI: done in 12.579 secs using 989.7% CPU
Iteration 310 / LogL: -10262.829 / Time: 1h:13m:47s (0h:21m:29s left)
Optimizing NNI: done in 12.8907 secs using 989.4% CPU
Optimizing NNI: done in 8.01379 secs using 988.7% CPU
Optimizing NNI: done in 9.33265 secs using 989.9% CPU
Optimizing NNI: done in 10.0549 secs using 989.2% CPU
Optimizing NNI: done in 10.1914 secs using 988.6% CPU
Optimizing NNI: done in 12.3259 secs using 990.1% CPU
Optimizing NNI: done in 9.21195 secs using 991% CPU
Optimizing NNI: done in 10.8237 secs using 991.1% CPU
Optimizing NNI: done in 9.92508 secs using 990.8% CPU
Optimizing NNI: done in 7.90126 secs using 989.2% CPU
Iteration 320 / LogL: -10213.641 / Time: 1h:15m:29s (0h:18m:55s left)
Optimizing NNI: done in 12.2321 secs using 989.2% CPU
Optimizing NNI: done in 14.1143 secs using 989.9% CPU
Optimizing NNI: done in 8.4803 secs using 990.4% CPU
Optimizing NNI: done in 11.422 secs using 989.7% CPU
Optimizing NNI: done in 9.61888 secs using 990.8% CPU
Optimizing NNI: done in 9.4051 secs using 990% CPU
Optimizing NNI: done in 9.45902 secs using 986% CPU
Optimizing NNI: done in 8.19438 secs using 990.8% CPU
Optimizing NNI: done in 8.08368 secs using 988.8% CPU
Optimizing NNI: done in 8.60665 secs using 989.2% CPU
Iteration 330 / LogL: -10212.019 / Time: 1h:17m:10s (0h:16m:25s left)
Optimizing NNI: done in 9.92131 secs using 989.2% CPU
TREE SEARCH COMPLETED AFTER 331 ITERATIONS / Time: 1h:17m:20s

--------------------------------------------------------------------
|                    FINALIZING TREE SEARCH                        |
--------------------------------------------------------------------
Performs final model parameters optimization
Estimate model parameters (epsilon = 0.010)
1. Initial log-likelihood: -10209.847
Optimal log-likelihood: -10209.847
Mixture weights: 0.016 0.027 0.046 0.008 0.013 0.034 0.013 0.009 0.019 0.015 0.032 0.021 0.024 0.024 0.021 0.021 0.005 0.017 0.014 0.010 0.011 0.015 0.032 0.015 0.033 0.014 0.023 0.018 0.040 0.014 0.009 0.016 0.012 0.035 0.040 0.010 0.015 0.009 0.015 0.020 0.026 0.004 0.039 0.006 0.038 0.004 0.014 0.048 0.020 0.012
Gamma shape alpha: 1.117
Parameters optimization took 1 rounds (1.235 sec)
BEST SCORE FOUND : -10209.847
Creating bootstrap support values...
Split supports printed to NEXUS file iqtree_gene_trees/COG1631.splits.nex
Total tree length: 28.606

Total number of iterations: 331
CPU time used for tree search: 45303.199 sec (12h:35m:3s)
Wall-clock time used for tree search: 4634.390 sec (1h:17m:14s)
Total CPU time used: 45374.940 sec (12h:36m:14s)
Total wall-clock time used: 4642.442 sec (1h:17m:22s)
UFBoot trees printed to iqtree_gene_trees/COG1631.ufboot

Computing bootstrap consensus tree...
Reading input file iqtree_gene_trees/COG1631.splits.nex...
80 taxa and 1011 splits.
Consensus tree written to iqtree_gene_trees/COG1631.contree
Reading input trees file iqtree_gene_trees/COG1631.contree
Log-likelihood of consensus tree: -10214.251

Analysis results written to: 
  IQ-TREE report:                iqtree_gene_trees/COG1631.iqtree
  Maximum-likelihood tree:       iqtree_gene_trees/COG1631.treefile
  Likelihood distances:          iqtree_gene_trees/COG1631.mldist

Ultrafast bootstrap approximation results written to:
  Split support values:          iqtree_gene_trees/COG1631.splits.nex
  Consensus tree:                iqtree_gene_trees/COG1631.contree
  UFBoot trees:                  iqtree_gene_trees/COG1631.ufboot
  Screen log file:               iqtree_gene_trees/COG1631.log

ALISIM COMMAND
--------------
Currently, we only support exporting AliSim commands from common models of DNA, Protein, Binary, and Morphological data. To simulate data from other models (mixture, lie-markov, etc), please refer to the User Manual of AliSim. Thanks!

Date and Time: Fri Apr  7 11:55:18 2023
