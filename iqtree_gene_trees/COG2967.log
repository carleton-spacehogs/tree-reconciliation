IQ-TREE multicore version 2.2.0.3 COVID-edition for Linux 64-bit built Aug  2 2022
Developed by Bui Quang Minh, James Barbetti, Nguyen Lam Tung,
Olga Chernomor, Heiko Schmidt, Dominik Schrempf, Michael Woodhams, Ly Trong Nhan.

Host:    baross.its.carleton.edu (AVX2, FMA3, 755 GB RAM)
Command: iqtree -s gene_alignments/trimv2_COG2967.afa --nmax 3000 -m MFP -bb 1000 -wbtl -ntmax 10 -nt AUTO -T 10 --prefix iqtree_gene_trees/COG2967 -madd C10,C20,C30,C40,C50,C60,EX2,EX3,EHO,UL2,UL3,EX_EHO,LG4M,LG4X,CF4,LG+C10,LG+C20,LG+C30,LG+C40,LG+C50,LG+C60 -mrate E,I,G,I+G,R
Seed:    397083 (Using SPRNG - Scalable Parallel Random Number Generator)
Time:    Sun Apr  9 12:20:22 2023
Kernel:  AVX+FMA - 10 threads (96 CPU cores detected)

Reading alignment file gene_alignments/trimv2_COG2967.afa ... Fasta format detected
Reading fasta file: done in 0.00136103 secs using 98.53% CPU
Alignment most likely contains protein sequences
Constructing alignment: done in 0.0016431 secs using 880.2% CPU
Alignment has 159 sequences with 136 columns, 136 distinct patterns
132 parsimony-informative, 3 singleton sites, 1 constant sites
                                                                  Gap/Ambiguity  Composition  p-value
Analyzing sequences: done in 8.69138e-05 secs using 596% CPU
   1  GCA.002746535.1.Bacteria.Planctomycetota_NVWA01000008.1_78          3.68%    failed      0.02%
   2  GCA.001464965.1.Bacteria.Proteobacteria_LNEJ01000059.1_10           6.62%    passed     96.93%
   3  GCA.002722565.1.Bacteria.Actinobacteriota_PBMG01000010.1_43        14.71%    passed     61.03%
   4  GCA.002746185.1.Bacteria.Hydrogenedentota_NVWG01000116.1_4          5.15%    passed     85.81%
   5  GCA.001769655.1.Bacteria.Bacteroidota_MEPC01000008.1_13             5.88%    passed     17.24%
   6  GCA.003133645.1.Bacteria.Acidobacteriota_PKYI01000045.1_4          11.03%    passed     86.82%
   7  GCA.015473125.1.Eukaryota.Viridiplantae_GHP07696.1                  0.00%    passed     30.93%
   8  GCA.000002865.1.Eukaryota.Choanoflagellata_EDQ88420.1               0.00%    failed      4.86%
   9  GCA.002898195.1.Bacteria.AABM5.125.24_BDTN01000416.1_6              3.68%    passed     98.67%
  10  GCA.000315625.1.Eukaryota.Cryptophyceae_EKX44727.1                  2.94%    passed     59.91%
  11  GCA.003454415.1.Bacteria.Proteobacteria_DMKG01000158.1_3            4.41%    passed     98.84%
  12  GCF.002148795.1.Bacteria.Proteobacteria_NZ_MPOB01000002.1_260       4.41%    passed     99.52%
  13  GCF.900112605.1.Bacteria.Proteobacteria_NZ_FOMJ01000006.1_185       4.41%    passed     81.65%
  14  GCA.002863065.1.Bacteria.Myxococcota_PKDL01000198.1_6               2.94%    passed     90.30%
  15  GCF.002940605.1.Bacteria.Proteobacteria_WP_128420398.1              6.62%    passed     15.33%
  16  GCA.002724675.1.Bacteria.Myxococcota.A_PBPL01000095.1_22            5.15%    passed     95.33%
  17  GCF.003443735.1.Bacteria.Actinobacteriota_NZ_CP031969.1_4915        9.56%    failed      0.17%
  18  GCA.002049455.2.Eukaryota.Rhodophyta_OSX70692.1                     3.68%    failed      1.39%
  19  GCA.002007405.1.Bacteria.Proteobacteria_JYIN01000011.1_8            8.09%    passed     64.21%
  20  GCF.000192575.1.Bacteria.Proteobacteria_NZ_GL876933.1_774           2.94%    passed     96.20%
  21  GCF.001591405.1.Bacteria.Actinobacteria_NZ_BCUV01000007.1_599      10.29%    passed     52.35%
  22  GCF.000091205.1.Eukaryota.Rhodophyta_XP_005538229.1                 0.00%    passed     25.28%
  23  GCA.002451085.1.Bacteria.Proteobacteria_DKBE01000085.1_14           6.62%    passed     99.03%
  24  GCF.900106035.1.Bacteria.Actinobacteriota_NZ_FNUC01000004.1_286    10.29%    passed     27.53%
  25  GCA.003170275.1.Bacteria.Myxococcota_PNAM01000036.1_54              6.62%    passed     99.06%
  26  GCF.900172325.1.Bacteria.Proteobacteria_NZ_FWFR01000001.1_759       4.41%    passed     99.91%
  27  GCA.001447805.1.Bacteria.Proteobacteria_CP013099.1_398              6.62%    passed     88.09%
  28  GCA.001897475.1.Bacteria.Proteobacteria_MKSY01000017.1_67           4.41%    passed     58.28%
  29  GCA.002007425.1.Bacteria.Proteobacteria_MUGK01000008.1_28           7.35%    passed     98.28%
  30  GCA.002348425.1.Bacteria.Proteobacteria_DEBE01000230.1_22           4.41%    passed     98.71%
  31  GCA.002747435.1.Bacteria.Proteobacteria_PDPH01000034.1_10           6.62%    passed     88.14%
  32  GCA.002721815.1.Bacteria.Myxococcota_PBLQ01000029.1_5               2.94%    passed     79.16%
  33  GCA.002686135.1.Bacteria.Proteobacteria_NZAO01000086.1_12           4.41%    passed     84.18%
  34  GCA.002483345.1.Bacteria.Bacteroidota_DLHS01000016.1_317            6.62%    passed     49.68%
  35  GCA.003230795.1.Bacteria.Bdellovibrionota.C_QIGM01000102.1_3        5.15%    passed     95.72%
  36  GCA.002352565.1.Bacteria.Proteobacteria_DEIQ01000104.1_3            3.68%    passed     95.92%
  37  GCA.002238415.1.Bacteria.Desulfobacterota.B_MPMI01000004.1_56       5.15%    passed     78.74%
  38  GCF.000315795.1.Bacteria.Proteobacteria_NZ_ANHY01000004.1_174       4.41%    passed     96.98%
  39  GCA.003280605.1.Bacteria.Proteobacteria_QCEM01000016.1_15           4.41%    passed     93.59%
  40  GCA.000209225.1.Eukaryota.Cnidaria_EDO43508.1                       0.00%    failed      2.27%
  41  GCA.002862435.1.Bacteria.Proteobacteria_PKDC01000032.1_16           5.88%    passed     59.00%
  42  GCF.900177345.1.Bacteria.Proteobacteria_NZ_FWZT01000015.1_71        6.62%    passed     21.35%
  43  GCF.000264455.2.Bacteria.Proteobacteria_NC_017956.1_3358            4.41%    passed     96.80%
  44  GCA.002841945.1.Bacteria.Myxococcota_PHBI01000218.1_5               6.62%    passed     68.88%
  45  GCA.001464215.1.Bacteria.Proteobacteria_LNEZ01000041.1_56           4.41%    passed     97.24%
  46  GCF.900105685.1.Bacteria.Verrucomicrobiota_NZ_LT629781.1_195        1.47%    passed     48.07%
  47  GCF.000266885.1.Bacteria.Spirochaetota_NC_018020.1_2037             5.15%    passed     99.98%
  48  GCA.015473125.1.Eukaryota.Viridiplantae_GHP07604.1                  6.62%    passed      5.37%
  49  GCA.002422845.1.Bacteria.Proteobacteria_DITM01000016.1_12           4.41%    failed      1.28%
  50  GCA.002455375.1.Bacteria.Bacteroidota_DKKR01000021.1_32             3.68%    passed     14.31%
  51  GCF.000170755.1.Bacteria.Verrucomicrobiota_NZ_ABCK01000002.1_232    3.68%    failed      3.80%
  52  GCF.002251795.1.Bacteria.Proteobacteria_NZ_NOXU01000019.1_77        4.41%    passed     74.16%
  53  GCA.001768075.1.Bacteria.Myxococcota_MEMX01000150.1_52              8.09%    passed     98.15%
  54  GCF.001051235.1.Bacteria.Proteobacteria_NZ_CBTJ020000054.1_2        5.88%    passed     97.94%
  55  GCA.002291925.1.Bacteria.Proteobacteria_DBAY01000036.1_45           4.41%    passed     84.45%
  56  GCA.002631715.1.Bacteria.Proteobacteria_MRSX01000002.1_283          6.62%    passed     88.68%
  57  GCF.003173035.1.Bacteria.Proteobacteria_NZ_QGLE01000008.1_123       4.41%    passed     95.59%
  58  GCA.002722885.1.Bacteria.Proteobacteria_PBNE01000006.1_326          4.41%    passed     93.53%
  59  GCA.000209225.1.Eukaryota.Cnidaria_EDO31321.1                       0.00%    passed     59.15%
  60  GCF.900489485.1.Bacteria.Bacteroidota_WP_111816419.1                6.62%    failed      1.93%
  61  GCF.003052605.1.Bacteria.Proteobacteria_NZ_QASO01000125.1_49        7.35%    passed     74.04%
  62  GCF.002973605.1.Bacteria.Armatimonadota_NZ_NIGF01000023.1_25        6.62%    passed     69.58%
  63  GCF.900116225.1.Bacteria.Bacteroidota_NZ_FOZZ01000004.1_228         6.62%    passed     67.20%
  64  GCF.001613805.1.Bacteria.Proteobacteria_NZ_LPVY01000014.1_9         4.41%    passed     89.21%
  65  GCA.002731275.1.Bacteria.Myxococcota_PCBK01000030.1_3               7.35%    passed     91.15%
  66  GCA.002340345.1.Bacteria.Proteobacteria_DDLW01000348.1_5            4.41%    passed     97.82%
  67  GCA.002763895.1.Bacteria.Bacteroidota_NSLH01000041.1_8              8.82%    passed     40.90%
  68  GCA.002389045.1.Bacteria.Proteobacteria_DGNS01000009.1_258          6.62%    passed     97.88%
  69  GCA.002701885.1.Bacteria.Proteobacteria_NZXH01000023.1_3            4.41%    passed     31.38%
  70  GCA.001735895.1.Bacteria.Proteobacteria_DS021199.1_426             14.71%    failed      4.85%
  71  GCA.002255365.1.Bacteria.Proteobacteria_NCBI01000010.1_35           6.62%    passed     99.41%
  72  GCA.002348365.1.Bacteria.Proteobacteria_DEBC01000031.1_83           4.41%    passed     40.87%
  73  GCF.900167455.1.Bacteria.Proteobacteria_NZ_FUWJ01000010.1_164       4.41%    passed     93.85%
  74  GCF.000024725.1.Bacteria.Proteobacteria_NC_013960.1_3026            6.62%    passed     96.79%
  75  GCA.002696345.1.Bacteria.Myxococcota_NZRT01000118.1_9               7.35%    passed     76.86%
  76  GCF.000300295.4.Bacteria.Proteobacteria_WP_017376322.1              4.41%    passed     49.34%
  77  GCA.000188695.1.Eukaryota.Choanoflagellata_EGD79677.1               0.00%    passed     63.66%
  78  GCA.002709155.1.Bacteria.Proteobacteria_PAQA01000059.1_10           4.41%    passed     38.28%
  79  GCA.001798135.1.Bacteria.UBA10199_MGRJ01000027.1_130                6.62%    passed     91.77%
  80  GCF.001697225.1.Bacteria.Proteobacteria_NZ_CP014671.1_1051          2.94%    passed     13.28%
  81  GCA.003137095.1.Bacteria.Proteobacteria_PLET01000082.1_10           5.88%    passed     99.70%
  82  GCA.002386945.1.Bacteria.Proteobacteria_DGKH01000056.1_1            8.09%    passed     73.04%
  83  GCA.002405475.1.Bacteria.Proteobacteria_DHLX01000024.1_39           8.82%    passed     31.36%
  84  GCA.002840095.1.Bacteria.Proteobacteria_PGZL01000012.1_60           8.09%    passed     98.31%
  85  GCA.002717185.1.Bacteria.Proteobacteria_PBDC01000058.1_25           4.41%    passed     98.67%
  86  GCF.000091205.1.Eukaryota.Rhodophyta_XP_005535792.1                 6.62%    passed     32.17%
  87  GCA.001872725.1.Bacteria.Proteobacteria_MNWR01000081.1_7            6.62%    passed     88.52%
  88  GCF.001720165.1.Bacteria.Proteobacteria_NZ_MCRI01000002.1_74        7.35%    passed     31.10%
  89  GCA.001769385.1.Bacteria.Bacteroidota_MEPB01000038.1_14             4.41%    passed     75.18%
  90  GCA.003247575.1.Bacteria.Myxococcota.A_QJZC01000010.1_105           5.15%    failed      2.47%
  91  GCA.002712885.1.Bacteria.Acidobacteriota_PAUN01000025.1_9           4.41%    passed     99.92%
  92  GCA.002429595.1.Bacteria.Proteobacteria_DJAM01000086.1_52           9.56%    passed     70.49%
  93  GCA.003152325.1.Bacteria.Acidobacteriota_PLZX01000225.1_3           2.94%    passed     99.84%
  94  GCA.002937675.1.Bacteria.Proteobacteria_PTKJ01000003.1_3            4.41%    failed      0.23%
  95  GCA.002796245.1.Bacteria.Proteobacteria_PCWT01000048.1_20           6.62%    passed     56.47%
  96  GCA.002708005.1.Bacteria.Verrucomicrobiota_PAOJ01000058.1_28        4.41%    passed     40.29%
  97  GCF.000021985.1.Bacteria.Proteobacteria_NC_011901.1_2719            5.15%    passed     99.68%
  98  GCA.002292925.1.Bacteria.Chloroflexota_DBCF01000103.1_3             4.41%    passed     90.99%
  99  GCA.002683135.1.Bacteria.Planctomycetota_NYSS01000022.1_74          4.41%    passed     79.37%
 100  GCA.002726535.1.Bacteria.Myxococcota_PBTG01000177.1_6               7.35%    passed     77.46%
 101  GCA.002898795.1.Bacteria.Desulfobacterota.B_BEIG01000021.1_36       2.94%    passed     89.32%
 102  GCA.002432655.1.Bacteria.Proteobacteria_DJFZ01000036.1_27           6.62%    passed     81.08%
 103  GCF.006980715.1.Bacteria.Proteobacteria_NZ_SBHN01000007.1_84        4.41%    passed     97.34%
 104  GCA.003158475.1.Bacteria.Bacteroidota_PMJR01000152.1_49             6.62%    passed     98.78%
 105  GCA.002338605.1.Bacteria.Proteobacteria_DDIP01000169.1_17           7.35%    passed     91.59%
 106  GCA.002712165.1.Bacteria.Proteobacteria_PASS01000051.1_33           4.41%    passed     99.57%
 107  GCA.000004985.1.Eukaryota.Heterolobosea_EFC37020.1                  3.68%    passed      5.56%
 108  GCF.002795805.1.Bacteria.Proteobacteria_NZ_CP018799.1_2405          5.88%    passed     24.01%
 109  GCF.001942305.1.Bacteria.Actinobacteriota_NZ_MKKE01000084.1_3       9.56%    failed      3.67%
 110  GCF.003612015.1.Bacteria.Proteobacteria_NZ_RARB01000004.1_316       8.09%    passed     81.59%
 111  GCA.002688175.1.Bacteria.Proteobacteria_NZCC01000052.1_2            8.82%    passed     82.68%
 112  GCA.002292285.1.Bacteria.Proteobacteria_DBBP01000006.1_39           7.35%    passed     98.05%
 113  GCF.001641825.1.Bacteria.Proteobacteria_NZ_LRFH01000014.1_453       4.41%    passed      6.72%
 114  GCA.002455375.1.Bacteria.Bacteroidota_DKKR01000094.1_5              6.62%    passed     42.22%
 115  GCA.002717225.1.Bacteria.Proteobacteria_PBDG01000024.1_19           4.41%    passed     98.46%
 116  GCA.002717245.1.Bacteria.Proteobacteria_PBCY01000005.1_54           5.15%    passed     13.39%
 117  GCA.000315625.1.Eukaryota.Cryptophyceae_EKX32935.1                 10.29%    passed     53.39%
 118  GCA.002699105.1.Bacteria.Bacteroidota_PABJ01000133.1_6              4.41%    passed     82.47%
 119  GCA.002500605.1.Bacteria.Nitrospinota_DLRR01000004.1_11             5.88%    passed     50.22%
 120  GCF.900102465.1.Bacteria.Proteobacteria_NZ_FNBW01000008.1_84        4.41%    passed     92.67%
 121  GCA.002343185.1.Bacteria.Bdellovibrionota.C_DDRT01000020.1_101      5.15%    passed     49.46%
 122  GCF.001280305.1.Bacteria.Bacteroidota_NZ_CP012623.1_567             6.62%    passed     93.90%
 123  GCF.002798435.1.Bacteria.Proteobacteria_WP_109792078.1              4.41%    passed     73.09%
 124  GCA.002382525.1.Bacteria.Verrucomicrobiota_DFYA01000320.1_42        7.35%    passed     19.14%
 125  GCA.002257235.1.Bacteria.Proteobacteria_NCGZ01000014.1_14           4.41%    passed     88.11%
 126  GCA.000188695.1.Eukaryota.Choanoflagellata_EGD77480.1               3.68%    passed     78.19%
 127  GCA.002796975.1.Bacteria.Proteobacteria_PEKV01000012.1_83           4.41%    passed     98.98%
 128  GCA.002724735.1.Bacteria.Marinisomatota_PBPT01000057.1_12           6.62%    failed      2.17%
 129  GCA.002747355.1.Bacteria.Myxococcota_PDPC01000098.1_5               8.09%    passed     79.82%
 130  GCF.004348535.1.Bacteria.Actinobacteriota_NZ_SMJX01000286.1_6      12.50%    passed     42.72%
 131  GCA.002728355.1.Bacteria.Proteobacteria_PBXG01000001.1_23           8.82%    passed     36.17%
 132  GCA.006969625.1.Bacteria.Proteobacteria_CP030885.1_3724             4.41%    passed     98.57%
 133  GCF.001431315.1.Bacteria.Proteobacteria_NZ_LKHV01000002.1_46        8.09%    passed     94.79%
 134  GCF.001614315.2.Bacteria.Proteobacteria_NZ_LVEG02000012.1_26        8.09%    passed     48.62%
 135  GCA.002348465.1.Bacteria.Gemmatimonadota_DEBI01000146.1_14          5.88%    passed     74.82%
 136  GCA.003228965.1.Bacteria.Proteobacteria_QIGP01000429.1_3            6.62%    passed     99.21%
 137  GCA.002699025.1.Bacteria.Myxococcota_PABA01000127.1_7               2.94%    passed     64.38%
 138  GCF.003097315.1.Bacteria.Proteobacteria_NZ_QDDL01000006.1_163       8.09%    passed     35.22%
 139  GCA.001898705.1.Bacteria.Proteobacteria_MKUU01000011.1_118          4.41%    passed     50.89%
 140  GCF.002109495.1.Bacteria.Proteobacteria_NZ_LVJN01000018.1_493       7.35%    passed     93.80%
 141  GCA.001897795.1.Bacteria.Proteobacteria_MKUL01000037.1_221          4.41%    passed     56.25%
 142  GCA.002480495.1.Bacteria.Proteobacteria_DLCG01000009.1_188          4.41%    passed     98.01%
 143  GCA.002789955.1.Bacteria.Myxococcota_PFUG01000050.1_14              8.09%    passed     30.61%
 144  GCA.015473125.1.Eukaryota.Viridiplantae_GHP03315.1                  6.62%    passed     20.26%
 145  GCF.000737335.2.Bacteria.Proteobacteria_NZ_JMCC02000124.1_16        4.41%    passed     97.05%
 146  GCA.002323895.1.Bacteria.Verrucomicrobiota_DCQM01000068.1_13        4.41%    failed      0.00%
 147  GCA.002938255.1.Bacteria.Proteobacteria_PTLB01000012.1_10           4.41%    failed      0.02%
 148  GCA.003158585.1.Bacteria.Proteobacteria_PMKE01000133.1_8            4.41%    passed     98.24%
 149  GCA.002723345.1.Bacteria.Proteobacteria_PBNV01000057.1_63           4.41%    passed     54.37%
 150  GCA.002731215.1.Bacteria.Acidobacteriota_PCAP01000044.1_10          5.15%    passed     97.71%
 151  GCA.002280485.1.Bacteria.Proteobacteria_NCED01000004.1_155          4.41%    passed     91.23%
 152  GCA.002311335.1.Bacteria.Desulfobacterota.B_DBZX01000076.1_43       6.62%    passed     93.64%
 153  GCF.002020875.1.Bacteria.Proteobacteria_WP_078484753.1              6.62%    passed     99.73%
 154  GCA.002787615.1.Bacteria.Proteobacteria_PCXJ01000005.1_3            4.41%    failed      4.55%
 155  GCA.002344285.1.Bacteria.Myxococcota_DDTA01000048.1_136             0.74%    passed     62.13%
 156  GCF.000013045.1.Bacteria.Bacteroidota_NC_007677.1_461               6.62%    passed     91.48%
 157  GCF.003258945.1.Bacteria.Proteobacteria_NZ_QLIX01000020.1_39        4.41%    passed     77.61%
 158  GCA.002746235.1.Bacteria.Planctomycetota_NVWJ01000009.1_76          2.94%    passed     99.56%
 159  GCF.900111015.1.Bacteria.Proteobacteria_NZ_FOFS01000005.1_277       6.62%    passed     99.83%
****  TOTAL                                                               5.60%  16 sequences failed composition chi2 test (p-value<5%; df=19)
Checking for duplicate sequences: done in 0.0020133 secs using 887.6% CPU


Create initial parsimony tree by phylogenetic likelihood library (PLL)... 0.087 seconds
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
Perform fast likelihood tree search using LG+I+G model...
Estimate model parameters (epsilon = 5.000)
Perform nearest neighbor interchange...
Optimizing NNI: done in 2.48681 secs using 994% CPU
Estimate model parameters (epsilon = 1.000)
1. Initial log-likelihood: -31852.829
Optimal log-likelihood: -31852.034
Proportion of invariable sites: 0.007
Gamma shape alpha: 1.102
Parameters optimization took 1 rounds (0.206 sec)
Time for fast ML tree search: 3.080 seconds

NOTE: ModelFinder requires 38 MB RAM!
ModelFinder will test up to 749 protein models (sample size: 136) ...
 No. Model         -LnL         df  AIC          AICc         BIC
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  1  LG            33918.346    315 68466.692    267546.692   69384.179
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  2  LG+I          33796.255    316 68224.511    268568.511   69144.910
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  3  LG+G4         31870.163    316 64372.326    264716.326   65292.725
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  4  LG+I+G4       31852.029    317 64338.058    265950.058   65261.370
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  5  LG+R2         32268.900    317 65171.800    266783.800   66095.111
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  6  LG+R3         31942.830    319 64523.660    268683.660   65452.797
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  7  LG+R4         31849.698    321 64341.396    271065.396   65276.359
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  8  LG+R5         31812.736    323 64271.473    273575.473   65212.260
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  9  LG+R6         31776.345    325 64202.690    276102.690   65149.303
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 10  LG+R7         31769.083    327 64192.166    278704.166   65144.604
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 11  LG+R8         31767.102    329 64192.204    281332.204   65150.467
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 14  LG+F          33874.769    334 68417.538    292197.538   69390.365
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 15  LG+F+I        33769.262    335 68208.524    293328.524   69184.264
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 16  LG+F+G4       31866.171    335 64402.342    289522.342   65378.082
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 17  LG+F+I+G4     31852.447    336 64376.893    290840.893   65355.545
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 18  LG+F+R2       32253.929    336 65179.857    291643.857   66158.509
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 19  LG+F+R3       31939.541    338 64555.081    293719.081   65539.558
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 20  LG+F+R4       31846.165    340 64372.330    296252.330   65362.633
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 21  LG+F+R5       31816.015    342 64316.030    298928.030   65312.158
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 22  LG+F+R6       31779.404    344 64246.809    301606.809   65248.762
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 23  LG+F+R7       31774.357    346 64240.714    304364.714   65248.492
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 24  LG+F+R8       31772.008    348 64240.016    307144.016   65253.620
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 27  WAG           33627.807    315 67885.615    266965.615   68803.101
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 28  WAG+I         33530.686    316 67693.371    268037.371   68613.770
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 29  WAG+G4        32007.715    316 64647.431    264991.431   65567.830
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 30  WAG+I+G4      31990.363    317 64614.726    266226.726   65538.038
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 31  WAG+R2        32314.251    317 65262.503    266874.503   66185.814
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 32  WAG+R3        32024.000    319 64685.999    268845.999   65615.136
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 33  WAG+R4        31955.375    321 64552.751    271276.751   65487.713
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 34  WAG+R5        31902.195    323 64450.390    273754.390   65391.178
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 35  WAG+R6        31884.810    325 64419.621    276319.621   65366.234
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 36  WAG+R7        31874.221    327 64402.443    278914.443   65354.881
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 37  WAG+R8        31873.928    329 64405.856    281545.856   65364.120
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 40  WAG+F         33575.878    334 67819.755    291599.755   68792.582
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 41  WAG+F+I       33483.710    335 67637.420    292757.420   68613.159
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 42  WAG+F+G4      31902.872    335 64475.743    289595.743   65451.483
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 43  WAG+F+I+G4    31892.539    336 64457.079    290921.079   65435.731
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 44  WAG+F+R2      32243.417    336 65158.834    291622.834   66137.486
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 45  WAG+F+R3      31974.090    338 64624.180    293788.180   65608.657
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 46  WAG+F+R4      31885.618    340 64451.236    296331.236   65441.539
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 47  WAG+F+R5      31841.306    342 64366.612    298978.612   65362.740
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 48  WAG+F+R6      31824.321    344 64336.641    301696.641   65338.594
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 49  WAG+F+R7      31816.792    346 64325.584    304449.584   65333.363
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 50  WAG+F+R8      31814.460    348 64324.920    307228.920   65338.524
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 53  JTT           34196.222    315 69022.443    268102.443   69939.929
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 54  JTT+I         34106.198    316 68844.396    269188.396   69764.795
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 55  JTT+G4        32301.562    316 65235.125    265579.125   66155.524
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 56  JTT+I+G4      32289.307    317 65212.614    266824.614   66135.925
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 57  JTT+R2        32676.723    317 65987.446    267599.446   66910.758
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 58  JTT+R3        32363.473    319 65364.945    269524.945   66294.082
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 59  JTT+R4        32259.483    321 65160.966    271884.966   66095.929
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 60  JTT+R5        32222.773    323 65091.546    274395.546   66032.334
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 61  JTT+R6        32186.839    325 65023.678    276923.678   65970.291
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 62  JTT+R7        32175.483    327 65004.967    279516.967   65957.405
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 63  JTT+R8        32169.602    329 64997.204    282137.204   65955.468
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 64  JTT+R9        32169.589    331 65001.178    284785.178   65965.266
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 66  JTT+F         34232.565    334 69133.130    292913.130   70105.956
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 67  JTT+F+I       34145.401    335 68960.801    294080.801   69936.541
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 68  JTT+F+G4      32297.862    335 65265.724    290385.724   66241.463
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 69  JTT+F+I+G4    32287.501    336 65247.002    291711.002   66225.654
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 70  JTT+F+R2      32686.688    336 66045.376    292509.376   67024.028
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 71  JTT+F+R3      32383.118    338 65442.235    294606.235   66426.713
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 72  JTT+F+R4      32274.457    340 65228.914    297108.914   66219.217
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 73  JTT+F+R5      32237.902    342 65159.804    299771.804   66155.932
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 74  JTT+F+R6      32208.831    344 65105.662    302465.662   66107.615
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 75  JTT+F+R7      32201.620    346 65095.240    305219.240   66103.019
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 76  JTT+F+R8      32196.979    348 65089.958    307993.958   66103.562
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 79  Q.pfam        33915.862    315 68461.724    267541.724   69379.210
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 80  Q.pfam+I      33785.924    316 68203.848    268547.848   69124.247
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 81  Q.pfam+G4     31841.205    316 64314.409    264658.409   65234.808
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 82  Q.pfam+I+G4   31821.256    317 64276.511    265888.511   65199.823
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 83  Q.pfam+R2     32237.311    317 65108.622    266720.622   66031.933
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 84  Q.pfam+R3     31919.507    319 64477.015    268637.015   65406.151
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 85  Q.pfam+R4     31820.451    321 64282.901    271006.901   65217.863
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 86  Q.pfam+R5     31779.570    323 64205.141    273509.141   65145.929
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 87  Q.pfam+R6     31747.474    325 64144.948    276044.948   65091.561
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 88  Q.pfam+R7     31740.920    327 64135.841    278647.841   65088.279
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 89  Q.pfam+R8     31739.468    329 64136.937    281276.937   65095.200
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 92  Q.pfam+F      33922.367    334 68512.735    292292.735   69485.561
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 93  Q.pfam+F+I    33807.933    335 68285.866    293405.866   69261.605
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 94  Q.pfam+F+G4   31877.484    335 64424.968    289544.968   65400.707
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 95  Q.pfam+F+I+G4 31862.126    336 64396.253    290860.253   65374.905
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 96  Q.pfam+F+R2   32259.785    336 65191.571    291655.571   66170.223
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 97  Q.pfam+F+R3   31950.805    338 64577.609    293741.609   65562.086
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 98  Q.pfam+F+R4   31857.878    340 64395.756    296275.756   65386.059
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 99  Q.pfam+F+R5   31818.179    342 64320.357    298932.357   65316.485
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
100  Q.pfam+F+R6   31784.674    344 64257.348    301617.348   65259.301
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
101  Q.pfam+F+R7   31781.727    346 64255.455    304379.455   65263.233
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
105  Q.bird        35588.389    315 71806.778    270886.778   72724.264
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
106  Q.bird+I      35446.981    316 71525.961    271869.961   72446.360
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
107  Q.bird+G4     32900.602    316 66433.203    266777.203   67353.602
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
108  Q.bird+I+G4   32888.889    317 66411.778    268023.778   67335.090
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
109  Q.bird+R2     33451.300    317 67536.600    269148.600   68459.912
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
110  Q.bird+R3     33005.658    319 66649.316    270809.316   67578.453
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
111  Q.bird+R4     32892.769    321 66427.538    273151.538   67362.501
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
112  Q.bird+R5     32803.341    323 66252.681    275556.681   67193.469
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
113  Q.bird+R6     32762.847    325 66175.694    278075.694   67122.307
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
114  Q.bird+R7     32757.318    327 66168.636    280680.636   67121.074
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
115  Q.bird+R8     32750.311    329 66158.621    283298.621   67116.885
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
116  Q.bird+R9     32746.413    331 66154.827    285938.827   67118.915
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
118  Q.bird+F      35746.526    334 72161.052    295941.052   73133.878
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
119  Q.bird+F+I    35590.007    335 71850.013    296970.013   72825.752
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
120  Q.bird+F+G4   33000.833    335 66671.667    291791.667   67647.406
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
121  Q.bird+F+I+G4 32986.453    336 66644.906    293108.906   67623.558
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
122  Q.bird+F+R2   33555.414    336 67782.828    294246.828   68761.480
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
123  Q.bird+F+R3   33112.060    338 66900.119    296064.119   67884.597
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
124  Q.bird+F+R4   33001.157    340 66682.314    298562.314   67672.617
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
125  Q.bird+F+R5   32922.173    342 66528.346    301140.346   67524.474
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
126  Q.bird+F+R6   32876.454    344 66440.908    303800.908   67442.861
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
127  Q.bird+F+R7   32875.559    346 66443.118    306567.118   67450.896
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
131  Q.mammal      35208.095    315 71046.191    270126.191   71963.677
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
132  Q.mammal+I    35074.018    316 70780.036    271124.036   71700.435
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
133  Q.mammal+G4   32635.342    316 65902.683    266246.683   66823.082
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
134  Q.mammal+I+G4 32611.231    317 65856.463    267468.463   66779.775
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
135  Q.mammal+R2   33151.555    317 66937.111    268549.111   67860.422
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
136  Q.mammal+R3   32741.467    319 66120.934    270280.934   67050.071
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
137  Q.mammal+R4   32614.655    321 65871.311    272595.311   66806.273
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
138  Q.mammal+R5   32528.322    323 65702.644    275006.644   66643.431
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
139  Q.mammal+R6   32501.397    325 65652.793    277552.793   66599.406
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
140  Q.mammal+R7   32497.077    327 65648.154    280160.154   66600.592
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
144  Q.mammal+F    35362.303    334 71392.605    295172.605   72365.432
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
145  Q.mammal+F+I  35220.072    335 71110.145    296230.145   72085.884
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
146  Q.mammal+F+G4 32769.080    335 66208.160    291328.160   67183.899
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
147  Q.mammal+F+I+G4 32756.330    336 66184.661    292648.661   67163.313
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
148  Q.mammal+F+R2 33281.455    336 67234.910    293698.910   68213.562
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
149  Q.mammal+F+R3 32860.950    338 66397.901    295561.901   67382.378
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
150  Q.mammal+F+R4 32764.756    340 66209.512    298089.512   67199.815
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
151  Q.mammal+F+R5 32673.443    342 66030.886    300642.886   67027.014
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
152  Q.mammal+F+R6 32640.050    344 65968.101    303328.101   66970.054
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
153  Q.mammal+F+R7 32639.449    346 65970.899    306094.899   66978.677
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
157  Q.insect      34363.924    315 69357.848    268437.848   70275.334
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
158  Q.insect+I    34243.756    316 69119.512    269463.512   70039.911
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
159  Q.insect+G4   32098.943    316 64829.886    265173.886   65750.285
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
160  Q.insect+I+G4 32080.789    317 64795.579    266407.579   65718.890
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
161  Q.insect+R2   32535.373    317 65704.745    267316.745   66628.057
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
162  Q.insect+R3   32179.711    319 64997.422    269157.422   65926.559
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
163  Q.insect+R4   32074.641    321 64791.281    271515.281   65726.244
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
164  Q.insect+R5   32009.428    323 64664.856    273968.856   65605.644
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
165  Q.insect+R6   31974.605    325 64599.210    276499.210   65545.823
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
166  Q.insect+R7   31969.444    327 64592.888    279104.888   65545.326
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
167  Q.insect+R8   31968.891    329 64595.783    281735.783   65554.046
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
170  Q.insect+F    34396.909    334 69461.818    293241.818   70434.645
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
171  Q.insect+F+I  34296.370    335 69262.741    294382.741   70238.480
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
172  Q.insect+F+G4 32187.996    335 65045.991    290165.991   66021.731
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
173  Q.insect+F+I+G4 32176.545    336 65025.089    291489.089   66003.741
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
174  Q.insect+F+R2 32624.658    336 65921.316    292385.316   66899.968
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
175  Q.insect+F+R3 32278.329    338 65232.657    294396.657   66217.134
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
176  Q.insect+F+R4 32174.092    340 65028.183    296908.183   66018.486
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
177  Q.insect+F+R5 32125.286    342 64934.571    299546.571   65930.699
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
178  Q.insect+F+R6 32085.228    344 64858.456    302218.456   65860.409
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
179  Q.insect+F+R7 32079.874    346 64851.749    304975.749   65859.527
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
WARNING: Log-likelihood -32081.9 of Q.insect+F+R8 worse than Q.insect+F+R7 -32079.9
180  Q.insect+F+R8 32081.918    348 64859.837    307763.837   65873.440
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
183  Q.plant       34854.306    315 70338.611    269418.611   71256.098
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
184  Q.plant+I     34725.490    316 70082.979    270426.979   71003.378
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
185  Q.plant+G4    32429.902    316 65491.803    265835.803   66412.202
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
186  Q.plant+I+G4  32414.562    317 65463.123    267075.123   66386.435
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
187  Q.plant+R2    32910.069    317 66454.137    268066.137   67377.449
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
188  Q.plant+R3    32536.144    319 65710.288    269870.288   66639.425
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
189  Q.plant+R4    32416.977    321 65475.953    272199.953   66410.916
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
190  Q.plant+R5    32376.123    323 65398.247    274702.247   66339.034
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
191  Q.plant+R6    32317.383    325 65284.766    277184.766   66231.379
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
192  Q.plant+R7    32310.799    327 65275.598    279787.598   66228.036
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
193  Q.plant+R8    32309.026    329 65276.052    282416.052   66234.316
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
196  Q.plant+F     34788.193    334 70244.386    294024.386   71217.212
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
197  Q.plant+F+I   34671.196    335 70012.393    295132.393   70988.132
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
198  Q.plant+F+G4  32431.486    335 65532.971    290652.971   66508.711
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
199  Q.plant+F+I+G4 32417.551    336 65507.101    291971.101   66485.753
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
200  Q.plant+F+R2  32893.343    336 66458.687    292922.687   67437.339
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
201  Q.plant+F+R3  32543.674    338 65763.349    294927.349   66747.826
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
202  Q.plant+F+R4  32415.961    340 65511.923    297391.923   66502.225
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
203  Q.plant+F+R5  32380.625    342 65445.250    300057.250   66441.378
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
204  Q.plant+F+R6  32328.299    344 65344.598    302704.598   66346.552
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
205  Q.plant+F+R7  32323.441    346 65338.881    305462.881   66346.660
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
209  Q.yeast       34291.581    315 69213.162    268293.162   70130.648
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
210  Q.yeast+I     34167.603    316 68967.205    269311.205   69887.604
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
211  Q.yeast+G4    32122.414    316 64876.827    265220.827   65797.226
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
212  Q.yeast+I+G4  32102.669    317 64839.338    266451.338   65762.649
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
213  Q.yeast+R2    32530.884    317 65695.768    267307.768   66619.080
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
214  Q.yeast+R3    32214.249    319 65066.497    269226.497   65995.634
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
215  Q.yeast+R4    32105.170    321 64852.340    271576.340   65787.303
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
216  Q.yeast+R5    32055.390    323 64756.779    274060.779   65697.567
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
217  Q.yeast+R6    32014.537    325 64679.075    276579.075   65625.687
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
218  Q.yeast+R7    32010.768    327 64675.536    279187.536   65627.974
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
222  Q.yeast+F     34126.671    334 68921.342    292701.342   69894.169
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
223  Q.yeast+F+I   34025.230    335 68720.460    293840.460   69696.200
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
224  Q.yeast+F+G4  32023.376    335 64716.751    289836.751   65692.491
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
225  Q.yeast+F+I+G4 32011.546    336 64695.092    291159.092   65673.744
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
226  Q.yeast+F+R2  32419.336    336 65510.673    291974.673   66489.325
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
227  Q.yeast+F+R3  32117.201    338 64910.402    294074.402   65894.880
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
228  Q.yeast+F+R4  32004.936    340 64689.873    296569.873   65680.175
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
229  Q.yeast+F+R5  31976.023    342 64636.045    299248.045   65632.173
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
230  Q.yeast+F+R6  31934.447    344 64556.894    301916.894   65558.847
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
231  Q.yeast+F+R7  31929.371    346 64550.742    304674.742   65558.520
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
WARNING: Log-likelihood -31931.2 of Q.yeast+F+R8 worse than Q.yeast+F+R7 -31929.4
232  Q.yeast+F+R8  31931.186    348 64558.373    307462.373   65571.977
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
235  JTTDCMut      34159.807    315 68949.614    268029.614   69867.100
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
236  JTTDCMut+I    34071.688    316 68775.376    269119.376   69695.775
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
237  JTTDCMut+G4   32269.173    316 65170.345    265514.345   66090.744
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
238  JTTDCMut+I+G4 32258.862    317 65151.724    266763.724   66075.035
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
239  JTTDCMut+R2   32662.816    317 65959.632    267571.632   66882.944
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
240  JTTDCMut+R3   32353.885    319 65345.770    269505.770   66274.907
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
241  JTTDCMut+R4   32244.176    321 65130.353    271854.353   66065.315
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
242  JTTDCMut+R5   32213.352    323 65072.703    274376.703   66013.491
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
243  JTTDCMut+R6   32179.892    325 65009.783    276909.783   65956.396
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
244  JTTDCMut+R7   32169.278    327 64992.557    279504.557   65944.995
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
245  JTTDCMut+R8   32161.256    329 64980.512    282120.512   65938.775
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
246  JTTDCMut+R9   32161.225    331 64984.451    284768.451   65948.540
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
248  JTTDCMut+F    34195.938    334 69059.877    292839.877   70032.704
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
249  JTTDCMut+F+I  34110.516    335 68891.032    294011.032   69866.771
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
250  JTTDCMut+F+G4 32282.517    335 65235.035    290355.035   66210.774
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
251  JTTDCMut+F+I+G4 32272.278    336 65216.557    291680.557   66195.209
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
252  JTTDCMut+F+R2 32666.958    336 66005.916    292469.916   66984.568
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
253  JTTDCMut+F+R3 32367.224    338 65410.449    294574.449   66394.926
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
254  JTTDCMut+F+R4 32258.589    340 65197.179    297077.179   66187.481
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
255  JTTDCMut+F+R5 32222.508    342 65129.015    299741.015   66125.143
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
256  JTTDCMut+F+R6 32194.079    344 65076.158    302436.158   66078.112
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
257  JTTDCMut+F+R7 32186.955    346 65065.911    305189.911   66073.690
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
258  JTTDCMut+F+R8 32180.887    348 65057.774    307961.774   66071.378
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
259  JTTDCMut+F+R9 32178.964    350 65057.928    310757.928   66077.358
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
261  DCMut         34319.867    315 69269.735    268349.735   70187.221
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
262  DCMut+I       34225.004    316 69082.009    269426.009   70002.408
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
263  DCMut+G4      32547.916    316 65727.833    266071.833   66648.231
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
264  DCMut+I+G4    32535.842    317 65705.683    267317.683   66628.995
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
265  DCMut+R2      32931.647    317 66497.295    268109.295   67420.606
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
266  DCMut+R3      32630.417    319 65898.834    270058.834   66827.971
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
267  DCMut+R4      32523.751    321 65689.503    272413.503   66624.465
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
268  DCMut+R5      32481.040    323 65608.080    274912.080   66548.868
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
269  DCMut+R6      32460.778    325 65571.557    277471.557   66518.169
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
270  DCMut+R7      32448.918    327 65551.836    280063.836   66504.274
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
271  DCMut+R8      32445.194    329 65548.387    282688.387   66506.651
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
274  DCMut+F       34273.459    334 69214.918    292994.918   70187.745
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
275  DCMut+F+I     34188.862    335 69047.723    294167.723   70023.463
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
276  DCMut+F+G4    32436.111    335 65542.222    290662.222   66517.962
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
277  DCMut+F+I+G4  32425.759    336 65523.517    291987.517   66502.169
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
278  DCMut+F+R2    32831.354    336 66334.709    292798.709   67313.361
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
279  DCMut+F+R3    32534.221    338 65744.442    294908.442   66728.920
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
280  DCMut+F+R4    32419.888    340 65519.776    297399.776   66510.079
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
281  DCMut+F+R5    32389.919    342 65463.838    300075.838   66459.966
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
282  DCMut+F+R6    32352.684    344 65393.368    302753.368   66395.322
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
283  DCMut+F+R7    32346.740    346 65385.480    305509.480   66393.258
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
WARNING: Log-likelihood -32347.9 of DCMut+F+R8 worse than DCMut+F+R7 -32346.7
284  DCMut+F+R8    32347.862    348 65391.725    308295.725   66405.329
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
287  VT            33641.983    315 67913.967    266993.967   68831.453
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
288  VT+I          33552.822    316 67737.644    268081.644   68658.043
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
289  VT+G4         32004.881    316 64641.761    264985.761   65562.160
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
290  VT+I+G4       31989.571    317 64613.142    266225.142   65536.453
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
291  VT+R2         32299.758    317 65233.517    266845.517   66156.828
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
292  VT+R3         32035.407    319 64708.814    268868.814   65637.951
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
293  VT+R4         31939.604    321 64521.208    271245.208   65456.170
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
294  VT+R5         31904.617    323 64455.235    273759.235   65396.022
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
295  VT+R6         31883.157    325 64416.314    276316.314   65362.927
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
296  VT+R7         31876.686    327 64407.373    278919.373   65359.811
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
297  VT+R8         31873.888    329 64405.775    281545.775   65364.039
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
300  VT+F          33629.895    334 67927.789    291707.789   68900.616
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
301  VT+F+I        33548.544    335 67767.089    292887.089   68742.828
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
302  VT+F+G4       31980.305    335 64630.610    289750.610   65606.349
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
303  VT+F+I+G4     31968.886    336 64609.772    291073.772   65588.424
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
304  VT+F+R2       32299.134    336 65270.267    291734.267   66248.919
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
305  VT+F+R3       32045.632    338 64767.264    293931.264   65751.741
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
306  VT+F+R4       31949.647    340 64579.295    296459.295   65569.597
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
307  VT+F+R5       31919.412    342 64522.823    299134.823   65518.951
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
308  VT+F+R6       31897.877    344 64483.754    301843.754   65485.708
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
309  VT+F+R7       31891.945    346 64475.890    304599.890   65483.669
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
310  VT+F+R8       31889.709    348 64475.418    307379.418   65489.022
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
313  PMB           33834.648    315 68299.296    267379.296   69216.783
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
314  PMB+I         33732.883    316 68097.766    268441.766   69018.165
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
315  PMB+G4        32070.938    316 64773.877    265117.877   65694.276
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
316  PMB+I+G4      32057.093    317 64748.187    266360.187   65671.498
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
317  PMB+R2        32394.439    317 65422.878    267034.878   66346.189
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
318  PMB+R3        32132.710    319 64903.420    269063.420   65832.557
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
319  PMB+R4        32039.368    321 64720.736    271444.736   65655.699
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
320  PMB+R5        32000.139    323 64646.277    273950.277   65587.065
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
321  PMB+R6        31983.512    325 64617.025    276517.025   65563.637
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
322  PMB+R7        31975.733    327 64605.467    279117.467   65557.905
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
323  PMB+R8        31972.384    329 64602.769    281742.769   65561.032
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
326  PMB+F         33815.449    334 68298.898    292078.898   69271.725
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
327  PMB+F+I       33724.045    335 68118.090    293238.090   69093.829
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
328  PMB+F+G4      32106.870    335 64883.740    290003.740   65859.480
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
329  PMB+F+I+G4    32094.606    336 64861.213    291325.213   65839.865
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
330  PMB+F+R2      32424.108    336 65520.216    291984.216   66498.868
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
331  PMB+F+R3      32171.780    338 65019.560    294183.560   66004.037
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
332  PMB+F+R4      32076.632    340 64833.264    296713.264   65823.567
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
333  PMB+F+R5      32041.712    342 64767.424    299379.424   65763.552
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
334  PMB+F+R6      32027.259    344 64742.519    302102.519   65744.472
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
335  PMB+F+R7      32018.888    346 64729.777    304853.777   65737.556
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
336  PMB+F+R8      32016.447    348 64728.894    307632.894   65742.498
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
339  Blosum62      33807.109    315 68244.218    267324.218   69161.705
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
340  Blosum62+I    33699.848    316 68031.695    268375.695   68952.094
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
341  Blosum62+G4   32071.827    316 64775.654    265119.654   65696.053
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
342  Blosum62+I+G4 32056.460    317 64746.919    266358.919   65670.231
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
343  Blosum62+R2   32414.339    317 65462.678    267074.678   66385.990
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
344  Blosum62+R3   32126.345    319 64890.689    269050.689   65819.826
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
345  Blosum62+R4   32042.997    321 64727.993    271451.993   65662.956
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
346  Blosum62+R5   32002.230    323 64650.459    273954.459   65591.247
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
347  Blosum62+R6   31981.487    325 64612.974    276512.974   65559.587
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
348  Blosum62+R7   31974.014    327 64602.029    279114.029   65554.467
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
349  Blosum62+R8   31973.931    329 64605.862    281745.862   65564.125
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
352  Blosum62+F    33749.578    334 68167.157    291947.157   69139.983
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
353  Blosum62+F+I  33654.870    335 67979.741    293099.741   68955.480
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
354  Blosum62+F+G4 32067.887    335 64805.774    289925.774   65781.513
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
355  Blosum62+F+I+G4 32054.780    336 64781.559    291245.559   65760.211
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
356  Blosum62+F+R2 32404.686    336 65481.373    291945.373   66460.025
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
357  Blosum62+F+R3 32127.141    338 64930.281    294094.281   65914.759
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
358  Blosum62+F+R4 32041.265    340 64762.530    296642.530   65752.832
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
359  Blosum62+F+R5 32007.801    342 64699.601    299311.601   65695.729
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
360  Blosum62+F+R6 31984.373    344 64656.747    302016.747   65658.700
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
361  Blosum62+F+R7 31978.479    346 64648.957    304772.957   65656.736
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
362  Blosum62+F+R8 31975.824    348 64647.648    307551.648   65661.252
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
365  Dayhoff       34321.770    315 69273.540    268353.540   70191.027
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
366  Dayhoff+I     34226.700    316 69085.400    269429.400   70005.799
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
367  Dayhoff+G4    32548.160    316 65728.320    266072.320   66648.719
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
368  Dayhoff+I+G4  32536.091    317 65706.182    267318.182   66629.493
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
369  Dayhoff+R2    32932.397    317 66498.794    268110.794   67422.106
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
370  Dayhoff+R3    32630.602    319 65899.204    270059.204   66828.341
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
371  Dayhoff+R4    32524.052    321 65690.105    272414.105   66625.067
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
372  Dayhoff+R5    32480.966    323 65607.931    274911.931   66548.719
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
373  Dayhoff+R6    32460.830    325 65571.660    277471.660   66518.273
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
374  Dayhoff+R7    32448.794    327 65551.587    280063.587   66504.025
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
375  Dayhoff+R8    32444.901    329 65547.802    282687.802   66506.066
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
378  Dayhoff+F     34275.850    334 69219.699    292999.699   70192.526
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
379  Dayhoff+F+I   34191.095    335 69052.191    294172.191   70027.930
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
380  Dayhoff+F+G4  32436.680    335 65543.360    290663.360   66519.099
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
381  Dayhoff+F+I+G4 32426.290    336 65524.579    291988.579   66503.231
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
382  Dayhoff+F+R2  32832.542    336 66337.085    292801.085   67315.737
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
383  Dayhoff+F+R3  32535.043    338 65746.086    294910.086   66730.563
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
384  Dayhoff+F+R4  32420.452    340 65520.905    297400.905   66511.207
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
385  Dayhoff+F+R5  32390.578    342 65465.155    300077.155   66461.283
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
386  Dayhoff+F+R6  32353.132    344 65394.264    302754.264   66396.217
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
387  Dayhoff+F+R7  32347.043    346 65386.086    305510.086   66393.865
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
WARNING: Log-likelihood -32348.2 of Dayhoff+F+R8 worse than Dayhoff+F+R7 -32347
388  Dayhoff+F+R8  32348.195    348 65392.390    308296.390   66405.994
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
391  mtREV         37304.482    315 75238.964    274318.964   76156.451
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
392  mtREV+I       37116.667    316 74865.334    275209.334   75785.733
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
393  mtREV+G4      34173.831    316 68979.661    269323.661   69900.060
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
394  mtREV+I+G4    34140.885    317 68915.770    270527.770   69839.081
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
395  mtREV+R2      34782.188    317 70198.376    271810.376   71121.688
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
396  mtREV+R3      34283.712    319 69205.424    273365.424   70134.561
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
397  mtREV+R4      34165.983    321 68973.966    275697.966   69908.928
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
398  mtREV+R5      34086.293    323 68818.586    278122.586   69759.373
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
399  mtREV+R6      34054.990    325 68759.980    280659.980   69706.592
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
400  mtREV+R7      34043.398    327 68740.796    283252.796   69693.235
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
401  mtREV+R8      34040.852    329 68739.704    285879.704   69697.968
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
404  mtREV+F       35189.899    334 71047.797    294827.797   72020.624
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
405  mtREV+F+I     35040.744    335 70751.488    295871.488   71727.227
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
406  mtREV+F+G4    32773.595    335 66217.190    291337.190   67192.929
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
407  mtREV+F+I+G4  32758.078    336 66188.156    292652.156   67166.808
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
408  mtREV+F+R2    33255.192    336 67182.384    293646.384   68161.036
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
409  mtREV+F+R3    32905.930    338 66487.860    295651.860   67472.337
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
410  mtREV+F+R4    32766.730    340 66213.461    298093.461   67203.763
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
411  mtREV+F+R5    32729.367    342 66142.733    300754.733   67138.861
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
412  mtREV+F+R6    32695.694    344 66079.389    303439.389   67081.342
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
413  mtREV+F+R7    32690.529    346 66073.059    306197.059   67080.838
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
414  mtREV+F+R8    32687.646    348 66071.292    308975.292   67084.896
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
417  mtART         39128.643    315 78887.287    277967.287   79804.773
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
418  mtART+I       38907.509    316 78447.018    278791.018   79367.417
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
419  mtART+G4      34746.299    316 70124.599    270468.599   71044.997
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
420  mtART+I+G4    34716.326    317 70066.651    271678.651   70989.963
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
421  mtART+R2      35587.376    317 71808.751    273420.751   72732.063
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
422  mtART+R3      35031.512    319 70701.025    274861.025   71630.162
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
423  mtART+R4      34839.024    321 70320.047    277044.047   71255.009
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
424  mtART+R5      34659.668    323 69965.336    279269.336   70906.124
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
425  mtART+R6      34637.709    325 69925.418    281825.418   70872.031
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
426  mtART+R7      34620.499    327 69894.999    284406.999   70847.437
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
427  mtART+R8      34609.191    329 69876.382    287016.382   70834.646
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
428  mtART+R9      34591.157    331 69844.313    289628.313   70808.402
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
429  mtART+R10     34588.395    333 69842.790    292286.790   70812.704
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
430  mtART+F       36652.808    334 73973.616    297753.616   74946.443
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
431  mtART+F+I     36476.491    335 73622.982    298742.982   74598.721
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
432  mtART+F+G4    33253.504    335 67177.009    292297.009   68152.748
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
433  mtART+F+I+G4  33228.827    336 67129.653    293593.653   68108.305
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
434  mtART+F+R2    33955.986    336 68583.973    295047.973   69562.625
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
435  mtART+F+R3    33482.044    338 67640.089    296804.089   68624.566
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
436  mtART+F+R4    33266.196    340 67212.391    299092.391   68202.694
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
437  mtART+F+R5    33197.989    342 67079.977    301691.977   68076.105
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
438  mtART+F+R6    33164.985    344 67017.970    304377.970   68019.924
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
439  mtART+F+R7    33150.921    346 66993.842    307117.842   68001.621
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
440  mtART+F+R8    33124.011    348 66944.022    309848.022   67957.626
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
WARNING: Log-likelihood -33137.3 of mtART+F+R9 worse than mtART+F+R8 -33124
441  mtART+F+R9    33137.252    350 66974.504    312674.504   67993.933
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
443  mtZOA         37524.581    315 75679.162    274759.162   76596.649
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
444  mtZOA+I       37333.512    316 75299.024    275643.024   76219.423
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
445  mtZOA+G4      33815.093    316 68262.186    268606.186   69182.585
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
446  mtZOA+I+G4    33789.125    317 68212.250    269824.250   69135.562
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
447  mtZOA+R2      34521.513    317 69677.026    271289.026   70600.337
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
448  mtZOA+R3      33997.956    319 68633.912    272793.912   69563.049
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
449  mtZOA+R4      33845.865    321 68333.729    275057.729   69268.692
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
450  mtZOA+R5      33746.683    323 68139.366    277443.366   69080.154
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
451  mtZOA+R6      33702.021    325 68054.043    279954.043   69000.656
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
452  mtZOA+R7      33685.896    327 68025.792    282537.792   68978.230
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
453  mtZOA+R8      33684.252    329 68026.504    285166.504   68984.768
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
456  mtZOA+F       35617.176    334 71902.351    295682.351   72875.178
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
457  mtZOA+F+I     35476.011    335 71622.023    296742.023   72597.762
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
458  mtZOA+F+G4    32802.504    335 66275.009    291395.009   67250.748
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
459  mtZOA+F+I+G4  32784.018    336 66240.037    292704.037   67218.689
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
460  mtZOA+F+R2    33340.200    336 67352.400    293816.400   68331.052
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
461  mtZOA+F+R3    32945.598    338 66567.195    295731.195   67551.672
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
462  mtZOA+F+R4    32795.797    340 66271.594    298151.594   67261.897
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
463  mtZOA+F+R5    32749.006    342 66182.011    300794.011   67178.139
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
464  mtZOA+F+R6    32696.197    344 66080.395    303440.395   67082.348
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
465  mtZOA+F+R7    32694.729    346 66081.457    306205.457   67089.236
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
469  mtMet         37589.797    315 75809.594    274889.594   76727.080
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
470  mtMet+I       37436.472    316 75504.943    275848.943   76425.342
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
471  mtMet+G4      34357.873    316 69347.747    269691.747   70268.146
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
472  mtMet+I+G4    34334.909    317 69303.818    270915.818   70227.130
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
473  mtMet+R2      34977.015    317 70588.030    272200.030   71511.341
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
474  mtMet+R3      34486.602    319 69611.204    273771.204   70540.341
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
475  mtMet+R4      34352.001    321 69346.002    276070.002   70280.964
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
476  mtMet+R5      34292.492    323 69230.985    278534.985   70171.772
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
477  mtMet+R6      34254.808    325 69159.616    281059.616   70106.229
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
478  mtMet+R7      34236.975    327 69127.949    283639.949   70080.387
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
479  mtMet+R8      34228.880    329 69115.759    286255.759   70074.023
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
480  mtMet+R9      34228.069    331 69118.139    288902.139   70082.227
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
482  mtMet+F       35473.884    334 71615.769    295395.769   72588.595
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
483  mtMet+F+I     35349.273    335 71368.547    296488.547   72344.286
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
484  mtMet+F+G4    32890.397    335 66450.794    291570.794   67426.533
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
485  mtMet+F+I+G4  32879.054    336 66430.109    292894.109   67408.761
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
486  mtMet+F+R2    33410.604    336 67493.207    293957.207   68471.859
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
487  mtMet+F+R3    32998.828    338 66673.656    295837.656   67658.133
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
488  mtMet+F+R4    32890.682    340 66461.364    298341.364   67451.667
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
489  mtMet+F+R5    32843.990    342 66371.979    300983.979   67368.107
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
490  mtMet+F+R6    32797.011    344 66282.023    303642.023   67283.976
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
491  mtMet+F+R7    32794.321    346 66280.643    306404.643   67288.421
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
495  mtVer         38082.328    315 76794.656    275874.656   77712.143
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
496  mtVer+I       37907.569    316 76447.138    276791.138   77367.537
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
497  mtVer+G4      34495.836    316 69623.672    269967.672   70544.071
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
498  mtVer+I+G4    34470.351    317 69574.701    271186.701   70498.013
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
499  mtVer+R2      35204.576    317 71043.151    272655.151   71966.463
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
500  mtVer+R3      34693.079    319 70024.158    274184.158   70953.295
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
501  mtVer+R4      34493.219    321 69628.438    276352.438   70563.400
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
502  mtVer+R5      34434.792    323 69515.584    278819.584   70456.372
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
503  mtVer+R6      34400.972    325 69451.944    281351.944   70398.557
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
504  mtVer+R7      34373.487    327 69400.974    283912.974   70353.412
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
505  mtVer+R8      34372.519    329 69403.038    286543.038   70361.301
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
508  mtVer+F       36088.875    334 72845.750    296625.750   73818.577
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
509  mtVer+F+I     35952.971    335 72575.942    297695.942   73551.682
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
510  mtVer+F+G4    33295.244    335 67260.488    292380.488   68236.227
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
511  mtVer+F+I+G4  33274.080    336 67220.160    293684.160   68198.812
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
512  mtVer+F+R2    33865.082    336 68402.164    294866.164   69380.816
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
513  mtVer+F+R3    33426.437    338 67528.874    296692.874   68513.351
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
514  mtVer+F+R4    33290.790    340 67261.579    299141.579   68251.882
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
515  mtVer+F+R5    33227.317    342 67138.633    301750.633   68134.761
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
516  mtVer+F+R6    33185.013    344 67058.027    304418.027   68059.980
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
517  mtVer+F+R7    33179.315    346 67050.631    307174.631   68058.409
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
518  mtVer+F+R8    33170.136    348 67036.271    309940.271   68049.875
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
519  mtVer+F+R9    33166.574    350 67033.148    312733.148   68052.577
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
521  mtInv         37419.940    315 75469.879    274549.879   76387.366
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
522  mtInv+I       37283.861    316 75199.721    275543.721   76120.120
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
523  mtInv+G4      34496.719    316 69625.438    269969.438   70545.837
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
524  mtInv+I+G4    34477.549    317 69589.099    271201.099   70512.411
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
525  mtInv+R2      35055.328    317 70744.655    272356.655   71667.967
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
526  mtInv+R3      34605.442    319 69848.883    274008.883   70778.020
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
527  mtInv+R4      34490.123    321 69622.246    276346.246   70557.208
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
528  mtInv+R5      34447.689    323 69541.378    278845.378   70482.165
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
529  mtInv+R6      34405.154    325 69460.309    281360.309   70406.922
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
530  mtInv+R7      34397.178    327 69448.356    283960.356   70400.795
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
531  mtInv+R8      34395.676    329 69449.352    286589.352   70407.615
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
534  mtInv+F       34900.248    334 70468.496    294248.496   71441.323
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
535  mtInv+F+I     34795.302    335 70260.605    295380.605   71236.344
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
536  mtInv+F+G4    32588.823    335 65847.647    290967.647   66823.386
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
537  mtInv+F+I+G4  32578.383    336 65828.765    292292.765   66807.417
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
538  mtInv+F+R2    33059.569    336 66791.138    293255.138   67769.790
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
539  mtInv+F+R3    32692.378    338 66060.756    295224.756   67045.233
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
540  mtInv+F+R4    32581.798    340 65843.596    297723.596   66833.899
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
541  mtInv+F+R5    32557.164    342 65798.328    300410.328   66794.456
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
542  mtInv+F+R6    32511.454    344 65710.908    303070.908   66712.861
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
543  mtInv+F+R7    32505.886    346 65703.771    305827.771   66711.550
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
WARNING: Log-likelihood -32506.9 of mtInv+F+R8 worse than mtInv+F+R7 -32505.9
544  mtInv+F+R8    32506.948    348 65709.895    308613.895   66723.499
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
547  mtMAM         39491.469    315 79612.938    278692.938   80530.424
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
548  mtMAM+I       39264.795    316 79161.589    279505.589   80081.988
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
549  mtMAM+G4      34884.277    316 70400.553    270744.553   71320.952
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
550  mtMAM+I+G4    34854.431    317 70342.863    271954.863   71266.175
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
551  mtMAM+R2      35820.499    317 72274.999    273886.999   73198.310
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
552  mtMAM+R3      35267.224    319 71172.448    275332.448   72101.585
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
553  mtMAM+R4      35018.543    321 70679.087    277403.087   71614.049
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
554  mtMAM+R5      34804.263    323 70254.527    279558.527   71195.314
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
555  mtMAM+R6      34783.229    325 70216.458    282116.458   71163.070
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
556  mtMAM+R7      34759.593    327 70173.186    284685.186   71125.624
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
557  mtMAM+R8      34718.015    329 70094.030    287234.030   71052.293
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
558  mtMAM+R9      34712.664    331 70087.328    289871.328   71051.417
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
559  mtMAM+R10     34709.955    333 70085.910    292529.910   71055.824
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
560  mtMAM+F       37015.290    334 74698.579    298478.579   75671.406
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
561  mtMAM+F+I     36807.881    335 74285.762    299405.762   75261.502
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
562  mtMAM+F+G4    33554.165    335 67778.329    292898.329   68754.069
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
563  mtMAM+F+I+G4  33525.390    336 67722.781    294186.781   68701.433
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
564  mtMAM+F+R2    34288.415    336 69248.831    295712.831   70227.483
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
565  mtMAM+F+R3    33815.580    338 68307.161    297471.161   69291.638
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
566  mtMAM+F+R4    33584.141    340 67848.281    299728.281   68838.584
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
567  mtMAM+F+R5    33497.980    342 67679.960    302291.960   68676.088
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
568  mtMAM+F+R6    33460.346    344 67608.692    304968.692   68610.646
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
569  mtMAM+F+R7    33439.809    346 67571.617    307695.617   68579.396
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
570  mtMAM+F+R8    33407.578    348 67511.157    310415.157   68524.761
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
571  mtMAM+F+R9    33407.137    350 67514.274    313214.274   68533.703
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
573  FLAVI         36746.824    315 74123.649    273203.649   75041.135
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
574  FLAVI+I       36629.308    316 73890.616    274234.616   74811.015
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
575  FLAVI+G4      33752.604    316 68137.208    268481.208   69057.607
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
576  FLAVI+I+G4    33735.638    317 68105.276    269717.276   69028.588
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
577  FLAVI+R2      34401.069    317 69436.138    271048.138   70359.450
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
578  FLAVI+R3      33884.781    319 68407.562    272567.562   69336.699
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
579  FLAVI+R4      33731.431    321 68104.863    274828.863   69039.825
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
580  FLAVI+R5      33679.142    323 68004.283    277308.283   68945.071
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
581  FLAVI+R6      33639.772    325 67929.543    279829.543   68876.156
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
582  FLAVI+R7      33621.757    327 67897.514    282409.514   68849.952
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
583  FLAVI+R8      33619.480    329 67896.960    285036.960   68855.223
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
586  FLAVI+F       36479.741    334 73627.482    297407.482   74600.309
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
587  FLAVI+F+I     36373.816    335 73417.632    298537.632   74393.371
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
588  FLAVI+F+G4    33612.022    335 67894.044    293014.044   68869.783
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
589  FLAVI+F+I+G4  33596.873    336 67865.746    294329.746   68844.398
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
590  FLAVI+F+R2    34227.894    336 69127.789    295591.789   70106.441
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
591  FLAVI+F+R3    33754.164    338 68184.327    297348.327   69168.805
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
592  FLAVI+F+R4    33598.147    340 67876.294    299756.294   68866.597
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
593  FLAVI+F+R5    33536.080    342 67756.161    302368.161   68752.288
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
594  FLAVI+F+R6    33508.231    344 67704.461    305064.461   68706.415
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
595  FLAVI+F+R7    33490.154    346 67672.308    307796.308   68680.086
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
596  FLAVI+F+R8    33488.617    348 67673.235    310577.235   68686.839
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
599  HIVb          35313.866    315 71257.731    270337.731   72175.217
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
600  HIVb+I        35206.414    316 71044.828    271388.828   71965.227
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
601  HIVb+G4       32934.397    316 66500.793    266844.793   67421.192
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
602  HIVb+I+G4     32922.328    317 66478.657    268090.657   67401.969
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
603  HIVb+R2       33425.111    317 67484.222    269096.222   68407.533
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
604  HIVb+R3       33069.193    319 66776.385    270936.385   67705.522
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
605  HIVb+R4       32911.990    321 66465.980    273189.980   67400.942
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
606  HIVb+R5       32872.125    323 66390.249    275694.249   67331.037
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
607  HIVb+R6       32854.237    325 66358.474    278258.474   67305.087
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
608  HIVb+R7       32831.967    327 66317.934    280829.934   67270.372
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
609  HIVb+R8       32822.877    329 66303.754    283443.754   67262.017
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
610  HIVb+R9       32820.555    331 66303.109    286087.109   67267.198
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
612  HIVb+F        35318.250    334 71304.499    295084.499   72277.326
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
613  HIVb+F+I      35220.269    335 71110.537    296230.537   72086.277
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
614  HIVb+F+G4     32906.702    335 66483.404    291603.404   67459.143
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
615  HIVb+F+I+G4   32894.803    336 66461.605    292925.605   67440.257
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
616  HIVb+F+R2     33382.251    336 67436.502    293900.502   68415.155
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
617  HIVb+F+R3     33050.647    338 66777.294    295941.294   67761.771
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
618  HIVb+F+R4     32874.028    340 66428.056    298308.056   67418.359
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
619  HIVb+F+R5     32836.912    342 66357.824    300969.824   67353.952
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
620  HIVb+F+R6     32819.263    344 66326.527    303686.527   67328.480
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
621  HIVb+F+R7     32812.233    346 66316.466    306440.466   67324.245
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
622  HIVb+F+R8     32798.497    348 66292.994    309196.994   67306.598
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
623  HIVb+F+R9     32797.001    350 66294.002    311994.002   67313.432
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
625  HIVw          36542.970    315 73715.940    272795.940   74633.426
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
626  HIVw+I        36427.501    316 73487.002    273831.002   74407.401
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
627  HIVw+G4       34388.478    316 69408.957    269752.957   70329.356
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
628  HIVw+I+G4     34376.117    317 69386.234    270998.234   70309.545
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
629  HIVw+R2       34825.222    317 70284.444    271896.444   71207.756
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
630  HIVw+R3       34521.295    319 69680.590    273840.590   70609.727
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
631  HIVw+R4       34359.437    321 69360.873    276084.873   70295.835
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
632  HIVw+R5       34325.408    323 69296.816    278600.816   70237.603
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
633  HIVw+R6       34275.589    325 69201.177    281101.177   70147.790
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
634  HIVw+R7       34269.846    327 69193.691    283705.691   70146.129
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
635  HIVw+R8       34266.062    329 69190.125    286330.125   70148.388
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
638  HIVw+F        36195.967    334 73059.934    296839.934   74032.761
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
639  HIVw+F+I      36094.194    335 72858.388    297978.388   73834.127
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
640  HIVw+F+G4     33850.719    335 68371.439    293491.439   69347.178
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
641  HIVw+F+I+G4   33841.076    336 68354.152    294818.152   69332.804
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
642  HIVw+F+R2     34299.115    336 69270.230    295734.230   70248.882
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
643  HIVw+F+R3     34016.022    338 68708.043    297872.043   69692.520
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
644  HIVw+F+R4     33817.594    340 68315.187    300195.187   69305.490
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
645  HIVw+F+R5     33787.633    342 68259.267    302871.267   69255.395
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
646  HIVw+F+R6     33771.946    344 68231.892    305591.892   69233.845
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
647  HIVw+F+R7     33763.824    346 68219.649    308343.649   69227.428
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
648  HIVw+F+R8     33730.503    348 68157.006    311061.006   69170.610
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
649  HIVw+F+R9     33727.939    350 68155.877    313855.877   69175.306
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
651  FLU           35012.853    315 70655.707    269735.707   71573.193
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
652  FLU+I         34854.124    316 70340.248    270684.248   71260.647
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
653  FLU+G4        32787.713    316 66207.426    266551.426   67127.825
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
654  FLU+I+G4      32763.719    317 66161.438    267773.438   67084.750
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
655  FLU+R2        33197.029    317 67028.058    268640.058   67951.370
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
656  FLU+R3        32852.358    319 66342.716    270502.716   67271.853
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
657  FLU+R4        32755.444    321 66152.888    272876.888   67087.851
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
658  FLU+R5        32698.672    323 66043.343    275347.343   66984.131
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
659  FLU+R6        32666.328    325 65982.656    277882.656   66929.269
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
660  FLU+R7        32661.874    327 65977.747    280489.747   66930.185
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
664  FLU+F         34884.561    334 70437.122    294217.122   71409.949
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
665  FLU+F+I       34736.252    335 70142.504    295262.504   71118.244
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
666  FLU+F+G4      32589.561    335 65849.123    290969.123   66824.862
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
667  FLU+F+I+G4    32563.635    336 65799.270    292263.270   66777.922
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
668  FLU+F+R2      32985.662    336 66643.323    293107.323   67621.975
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
669  FLU+F+R3      32651.930    338 65979.860    295143.860   66964.338
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
670  FLU+F+R4      32549.947    340 65779.895    297659.895   66770.198
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
671  FLU+F+R5      32484.346    342 65652.692    300264.692   66648.820
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
672  FLU+F+R6      32458.280    344 65604.560    302964.560   66606.513
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
673  FLU+F+R7      32457.004    346 65606.008    305730.008   66613.787
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
677  rtREV         34132.160    315 68894.320    267974.320   69811.807
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
678  rtREV+I       33995.130    316 68622.260    268966.260   69542.659
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
679  rtREV+G4      32159.204    316 64950.408    265294.408   65870.807
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
680  rtREV+I+G4    32137.185    317 64908.370    266520.370   65831.682
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
681  rtREV+R2      32550.263    317 65734.526    267346.526   66657.837
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
682  rtREV+R3      32211.258    319 65060.516    269220.516   65989.653
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
683  rtREV+R4      32140.758    321 64923.515    271647.515   65858.477
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
684  rtREV+R5      32104.037    323 64854.075    274158.075   65794.863
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
685  rtREV+R6      32068.444    325 64786.889    276686.889   65733.501
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
686  rtREV+R7      32064.528    327 64783.056    279295.056   65735.494
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
690  rtREV+F       34033.381    334 68734.762    292514.762   69707.589
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
691  rtREV+F+I     33922.090    335 68514.179    293634.179   69489.919
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
692  rtREV+F+G4    32025.784    335 64721.568    289841.568   65697.307
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
693  rtREV+F+I+G4  32010.125    336 64692.250    291156.250   65670.902
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
694  rtREV+F+R2    32419.936    336 65511.871    291975.871   66490.523
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
695  rtREV+F+R3    32097.032    338 64870.064    294034.064   65854.542
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
696  rtREV+F+R4    32009.062    340 64698.125    296578.125   65688.428
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
697  rtREV+F+R5    31983.672    342 64651.344    299263.344   65647.472
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
698  rtREV+F+R6    31950.615    344 64589.230    301949.230   65591.183
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
699  rtREV+F+R7    31945.367    346 64582.735    304706.735   65590.513
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
700  rtREV+F+R8    31945.974    348 64587.948    307491.948   65601.552
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
703  cpREV         33885.036    315 68400.071    267480.071   69317.557
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
704  cpREV+I       33820.987    316 68273.973    268617.973   69194.372
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
705  cpREV+G4      32238.519    316 65109.039    265453.039   66029.437
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
706  cpREV+I+G4    32229.951    317 65093.901    266705.901   66017.213
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
707  cpREV+R2      32532.379    317 65698.758    267310.758   66622.070
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
708  cpREV+R3      32284.211    319 65206.423    269366.423   66135.560
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
709  cpREV+R4      32210.595    321 65063.189    271787.189   65998.152
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
710  cpREV+R5      32148.749    323 64943.497    274247.497   65884.285
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
711  cpREV+R6      32135.358    325 64920.716    276820.716   65867.329
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
712  cpREV+R7      32127.315    327 64908.630    279420.630   65861.068
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
713  cpREV+R8      32121.271    329 64900.541    282040.541   65858.805
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
714  cpREV+R9      32119.911    331 64901.822    284685.822   65865.911
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
716  cpREV+F       33656.780    334 67981.560    291761.560   68954.387
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
717  cpREV+F+I     33604.242    335 67878.483    292998.483   68854.223
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
718  cpREV+F+G4    32087.551    335 64845.102    289965.102   65820.841
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
719  cpREV+F+I+G4  32082.476    336 64836.953    291300.953   65815.605
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
720  cpREV+F+R2    32377.477    336 65426.953    291890.953   66405.606
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
721  cpREV+F+R3    32141.002    338 64958.005    294122.005   65942.482
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
722  cpREV+F+R4    32055.861    340 64791.723    296671.723   65782.025
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
723  cpREV+F+R5    31997.687    342 64679.374    299291.374   65675.502
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
724  cpREV+F+R6    31984.731    344 64657.463    302017.463   65659.416
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
725  cpREV+F+R7    31978.113    346 64648.225    304772.225   65656.004
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
726  cpREV+F+R8    31978.301    348 64652.603    307556.603   65666.206
Model C10 is alias for POISSON+G+FMIX{C10pi1:1:0.1191344178,C10pi2:1:0.0874372456,C10pi3:1:0.1037105070,C10pi4:1:0.0922584809,C10pi5:1:0.1070492801,C10pi6:1:0.1329945166,C10pi7:1:0.0538028458,C10pi8:1:0.0691986212,C10pi9:1:0.1319937434,C10pi10:1:0.1024203429}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
729  C10           32088.853    316 64809.705    265153.705   65730.104
Model C20 is alias for POISSON+G+FMIX{C20pi1:1:0.0559910600,C20pi2:1:0.0514824870,C20pi3:1:0.0812922124,C20pi4:1:0.0721976867,C20pi5:1:0.0556718858,C20pi6:1:0.0331003080,C20pi7:1:0.0589501763,C20pi8:1:0.0263756889,C20pi9:1:0.0307584220,C20pi10:1:0.0376701125,C20pi11:1:0.0303058290,C20pi12:1:0.0808775576,C20pi13:1:0.0263349134,C20pi14:1:0.0579101455,C20pi15:1:0.0371248064,C20pi16:1:0.0586867766,C20pi17:1:0.0561479138,C20pi18:1:0.0349810886,C20pi19:1:0.0544937394,C20pi20:1:0.0596471901}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
730  C20           31729.924    316 64091.847    264435.847   65012.246
Model C30 is alias for POISSON+G+FMIX{C30pi1:1:0.0095783264,C30pi2:1:0.0248476365,C30pi3:1:0.0636309366,C30pi4:1:0.0537939225,C30pi5:1:0.0295885587,C30pi6:1:0.0117587936,C30pi7:1:0.0132013428,C30pi8:1:0.0236868805,C30pi9:1:0.0261687659,C30pi10:1:0.0239821974,C30pi11:1:0.0257100906,C30pi12:1:0.0465072425,C30pi13:1:0.0546794546,C30pi14:1:0.0536085131,C30pi15:1:0.0270622670,C30pi16:1:0.0403913593,C30pi17:1:0.0474212700,C30pi18:1:0.0458816478,C30pi19:1:0.0214036510,C30pi20:1:0.0290385981,C30pi21:1:0.0123391793,C30pi22:1:0.0569350229,C30pi23:1:0.0419687568,C30pi24:1:0.0339027062,C30pi25:1:0.0388777376,C30pi26:1:0.0196343766,C30pi27:1:0.0233086174,C30pi28:1:0.0622722654,C30pi29:1:0.0184803385,C30pi30:1:0.0203395454}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
731  C30           31687.753    316 64007.506    264351.506   64927.905
Model C40 is alias for POISSON+G+FMIX{C40pi1:1:0.0223853788,C40pi2:1:0.0338891820,C40pi3:1:0.0577169375,C40pi4:1:0.0252416233,C40pi5:1:0.0108607921,C40pi6:1:0.0462373793,C40pi7:1:0.0102293175,C40pi8:1:0.0147523625,C40pi9:1:0.0143161352,C40pi10:1:0.0182302541,C40pi11:1:0.0204025079,C40pi12:1:0.0425505156,C40pi13:1:0.0248627269,C40pi14:1:0.0105892988,C40pi15:1:0.0188238725,C40pi16:1:0.0086663445,C40pi17:1:0.0148496147,C40pi18:1:0.0343037402,C40pi19:1:0.0225335203,C40pi20:1:0.0174068578,C40pi21:1:0.0112207827,C40pi22:1:0.0443532245,C40pi23:1:0.0392573370,C40pi24:1:0.0196756555,C40pi25:1:0.0287690328,C40pi26:1:0.0114441177,C40pi27:1:0.0112338740,C40pi28:1:0.0582694099,C40pi29:1:0.0444272279,C40pi30:1:0.0112010942,C40pi31:1:0.0145176111,C40pi32:1:0.0114629026,C40pi33:1:0.0239628061,C40pi34:1:0.0266266492,C40pi35:1:0.0481201159,C40pi36:1:0.0371147423,C40pi37:1:0.0160476688,C40pi38:1:0.0237249267,C40pi39:1:0.0235226203,C40pi40:1:0.0261998398}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
732  C40           31659.662    316 63951.324    264295.324   64871.723
Model C50 is alias for POISSON+G+FMIX{C50pi1:1:0.0164297003,C50pi2:1:0.0273175755,C50pi3:1:0.0460247610,C50pi4:1:0.0084864734,C50pi5:1:0.0125389252,C50pi6:1:0.0343549036,C50pi7:1:0.0130241102,C50pi8:1:0.0094755681,C50pi9:1:0.0190040551,C50pi10:1:0.0151902354,C50pi11:1:0.0320534760,C50pi12:1:0.0210059850,C50pi13:1:0.0237408547,C50pi14:1:0.0239841203,C50pi15:1:0.0213748021,C50pi16:1:0.0210717705,C50pi17:1:0.0050241805,C50pi18:1:0.0166262276,C50pi19:1:0.0143945956,C50pi20:1:0.0104391130,C50pi21:1:0.0107628277,C50pi22:1:0.0148818171,C50pi23:1:0.0321480239,C50pi24:1:0.0145477978,C50pi25:1:0.0332355807,C50pi26:1:0.0143190281,C50pi27:1:0.0234478734,C50pi28:1:0.0183044983,C50pi29:1:0.0403269452,C50pi30:1:0.0135629530,C50pi31:1:0.0091880799,C50pi32:1:0.0158270022,C50pi33:1:0.0121019379,C50pi34:1:0.0353560982,C50pi35:1:0.0404495617,C50pi36:1:0.0104569232,C50pi37:1:0.0146187792,C50pi38:1:0.0093984095,C50pi39:1:0.0146773809,C50pi40:1:0.0201635562,C50pi41:1:0.0255640273,C50pi42:1:0.0039486842,C50pi43:1:0.0393652608,C50pi44:1:0.0056415419,C50pi45:1:0.0382833580,C50pi46:1:0.0039735086,C50pi47:1:0.0140269355,C50pi48:1:0.0476703673,C50pi49:1:0.0204062788,C50pi50:1:0.0117835304}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
733  C50           31592.558    316 63817.116    264161.116   64737.515
Model C60 is alias for POISSON+G+FMIX{C60pi1:1:0.0169698865,C60pi2:1:0.0211683374,C60pi3:1:0.0276589079,C60pi4:1:0.0065675964,C60pi5:1:0.0141221416,C60pi6:1:0.0068774834,C60pi7:1:0.0146909701,C60pi8:1:0.0067225777,C60pi9:1:0.0018396660,C60pi10:1:0.0102547197,C60pi11:1:0.0230896163,C60pi12:1:0.0057941033,C60pi13:1:0.0125394534,C60pi14:1:0.0204526478,C60pi15:1:0.0070629602,C60pi16:1:0.0117982741,C60pi17:1:0.0068334668,C60pi18:1:0.0433775839,C60pi19:1:0.0318278731,C60pi20:1:0.0222546108,C60pi21:1:0.0102264969,C60pi22:1:0.0150545891,C60pi23:1:0.0134159878,C60pi24:1:0.0148552065,C60pi25:1:0.0239111516,C60pi26:1:0.0128776278,C60pi27:1:0.0222318842,C60pi28:1:0.0247444742,C60pi29:1:0.0214274810,C60pi30:1:0.0115001882,C60pi31:1:0.0076017389,C60pi32:1:0.0130258568,C60pi33:1:0.0093701965,C60pi34:1:0.0467194264,C60pi35:1:0.0441940314,C60pi36:1:0.0322263154,C60pi37:1:0.0402999891,C60pi38:1:0.0150234227,C60pi39:1:0.0104589903,C60pi40:1:0.0214742395,C60pi41:1:0.0154957836,C60pi42:1:0.0101789953,C60pi43:1:0.0227980379,C60pi44:1:0.0123204539,C60pi45:1:0.0066777583,C60pi46:1:0.0004150083,C60pi47:1:0.0344385130,C60pi48:1:0.0113663379,C60pi49:1:0.0127143049,C60pi50:1:0.0124323741,C60pi51:1:0.0262124415,C60pi52:1:0.0064994957,C60pi53:1:0.0103203293,C60pi54:1:0.0142463512,C60pi55:1:0.0215600067,C60pi56:1:0.0199150700,C60pi57:1:0.0038964200,C60pi58:1:0.0113448855,C60pi59:1:0.0128595846,C60pi60:1:0.0117656776}
WARNING: Your input class weight 0.000415008 is very small and may cause numerical issues
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
734  C60           31577.778    316 63787.556    264131.556   64707.955
Model EX2 is alias for MIX{BurEX2:0.672020808818762,ExpEX2:1.6413466609931}
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
735  EX2           32653.621    316 65939.243    266283.243   66859.642
Model EX3 is alias for MIX{BurEX3:0.427672756793791,IntEX3:0.837595938019774,HExEX3:1.51863631431518}
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
736  EX3           32341.890    317 65317.780    266929.780   66241.092
Model EHO is alias for MIX{ExtEHO:0.720274356,HelEHO:0.976798797,OthEHO:0.783109376}
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
737  EHO           33437.487    317 67508.974    269120.974   68432.286
Model UL2 is alias for MIX{M1_UL2:0.581348617,M2_UL2:1.465482789}
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
738  UL2           32746.124    316 66124.247    266468.247   67044.646
Model UL3 is alias for MIX{Q1_UL3:0.484340397,Q2_UL3:0.492780514,Q3_UL3:1.15597274}
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
739  UL3           33785.213    317 68204.426    269816.426   69127.737
Model EX_EHO is alias for MIX{BUR_EXT:0.761816796788931,BUR_HEL:0.744425646802117,BUR_OTH:0.532457759429489,EXP_EXT:1.5639387472863,EXP_HEL:2.06403411829438,EXP_OTH:1.43336795177594}
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
740  EX_EHO        32121.414    320 64882.827    270322.827   65814.877
Model LG4M is alias for MIX{LG4M1,LG4M2,LG4M3,LG4M4}*G4
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
741  LG4M          31889.316    316 64410.631    264754.631   65331.030
Model LG4X is alias for MIX{LG4X1,LG4X2,LG4X3,LG4X4}*R4
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
742  LG4X          31787.081    321 64216.161    270940.161   65151.124
Model CF4 is alias for POISSON+FMIX{Fclass1,Fclass2,Fclass3,Fclass4}+F+G
WARNING: Normalizing State frequencies so that sum of them equals to 1
WARNING: Normalizing State frequencies so that sum of them equals to 1
WARNING: Normalizing State frequencies so that sum of them equals to 1
WARNING: Normalizing State frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
743  CF4           33462.839    339 67603.678    298123.678   68591.068
Model LG+C10 is alias for LG+POISSON+G+FMIX{C10pi1:1:0.1191344178,C10pi2:1:0.0874372456,C10pi3:1:0.1037105070,C10pi4:1:0.0922584809,C10pi5:1:0.1070492801,C10pi6:1:0.1329945166,C10pi7:1:0.0538028458,C10pi8:1:0.0691986212,C10pi9:1:0.1319937434,C10pi10:1:0.1024203429}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
744  LG+C10        31849.767    316 64331.535    264675.535   65251.934
Model LG+C20 is alias for LG+POISSON+G+FMIX{C20pi1:1:0.0559910600,C20pi2:1:0.0514824870,C20pi3:1:0.0812922124,C20pi4:1:0.0721976867,C20pi5:1:0.0556718858,C20pi6:1:0.0331003080,C20pi7:1:0.0589501763,C20pi8:1:0.0263756889,C20pi9:1:0.0307584220,C20pi10:1:0.0376701125,C20pi11:1:0.0303058290,C20pi12:1:0.0808775576,C20pi13:1:0.0263349134,C20pi14:1:0.0579101455,C20pi15:1:0.0371248064,C20pi16:1:0.0586867766,C20pi17:1:0.0561479138,C20pi18:1:0.0349810886,C20pi19:1:0.0544937394,C20pi20:1:0.0596471901}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
745  LG+C20        31621.848    316 63875.697    264219.697   64796.096
Model LG+C30 is alias for LG+POISSON+G+FMIX{C30pi1:1:0.0095783264,C30pi2:1:0.0248476365,C30pi3:1:0.0636309366,C30pi4:1:0.0537939225,C30pi5:1:0.0295885587,C30pi6:1:0.0117587936,C30pi7:1:0.0132013428,C30pi8:1:0.0236868805,C30pi9:1:0.0261687659,C30pi10:1:0.0239821974,C30pi11:1:0.0257100906,C30pi12:1:0.0465072425,C30pi13:1:0.0546794546,C30pi14:1:0.0536085131,C30pi15:1:0.0270622670,C30pi16:1:0.0403913593,C30pi17:1:0.0474212700,C30pi18:1:0.0458816478,C30pi19:1:0.0214036510,C30pi20:1:0.0290385981,C30pi21:1:0.0123391793,C30pi22:1:0.0569350229,C30pi23:1:0.0419687568,C30pi24:1:0.0339027062,C30pi25:1:0.0388777376,C30pi26:1:0.0196343766,C30pi27:1:0.0233086174,C30pi28:1:0.0622722654,C30pi29:1:0.0184803385,C30pi30:1:0.0203395454}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
746  LG+C30        31559.669    316 63751.338    264095.338   64671.737
Model LG+C40 is alias for LG+POISSON+G+FMIX{C40pi1:1:0.0223853788,C40pi2:1:0.0338891820,C40pi3:1:0.0577169375,C40pi4:1:0.0252416233,C40pi5:1:0.0108607921,C40pi6:1:0.0462373793,C40pi7:1:0.0102293175,C40pi8:1:0.0147523625,C40pi9:1:0.0143161352,C40pi10:1:0.0182302541,C40pi11:1:0.0204025079,C40pi12:1:0.0425505156,C40pi13:1:0.0248627269,C40pi14:1:0.0105892988,C40pi15:1:0.0188238725,C40pi16:1:0.0086663445,C40pi17:1:0.0148496147,C40pi18:1:0.0343037402,C40pi19:1:0.0225335203,C40pi20:1:0.0174068578,C40pi21:1:0.0112207827,C40pi22:1:0.0443532245,C40pi23:1:0.0392573370,C40pi24:1:0.0196756555,C40pi25:1:0.0287690328,C40pi26:1:0.0114441177,C40pi27:1:0.0112338740,C40pi28:1:0.0582694099,C40pi29:1:0.0444272279,C40pi30:1:0.0112010942,C40pi31:1:0.0145176111,C40pi32:1:0.0114629026,C40pi33:1:0.0239628061,C40pi34:1:0.0266266492,C40pi35:1:0.0481201159,C40pi36:1:0.0371147423,C40pi37:1:0.0160476688,C40pi38:1:0.0237249267,C40pi39:1:0.0235226203,C40pi40:1:0.0261998398}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
747  LG+C40        31459.982    316 63551.964    263895.964   64472.362
Model LG+C50 is alias for LG+POISSON+G+FMIX{C50pi1:1:0.0164297003,C50pi2:1:0.0273175755,C50pi3:1:0.0460247610,C50pi4:1:0.0084864734,C50pi5:1:0.0125389252,C50pi6:1:0.0343549036,C50pi7:1:0.0130241102,C50pi8:1:0.0094755681,C50pi9:1:0.0190040551,C50pi10:1:0.0151902354,C50pi11:1:0.0320534760,C50pi12:1:0.0210059850,C50pi13:1:0.0237408547,C50pi14:1:0.0239841203,C50pi15:1:0.0213748021,C50pi16:1:0.0210717705,C50pi17:1:0.0050241805,C50pi18:1:0.0166262276,C50pi19:1:0.0143945956,C50pi20:1:0.0104391130,C50pi21:1:0.0107628277,C50pi22:1:0.0148818171,C50pi23:1:0.0321480239,C50pi24:1:0.0145477978,C50pi25:1:0.0332355807,C50pi26:1:0.0143190281,C50pi27:1:0.0234478734,C50pi28:1:0.0183044983,C50pi29:1:0.0403269452,C50pi30:1:0.0135629530,C50pi31:1:0.0091880799,C50pi32:1:0.0158270022,C50pi33:1:0.0121019379,C50pi34:1:0.0353560982,C50pi35:1:0.0404495617,C50pi36:1:0.0104569232,C50pi37:1:0.0146187792,C50pi38:1:0.0093984095,C50pi39:1:0.0146773809,C50pi40:1:0.0201635562,C50pi41:1:0.0255640273,C50pi42:1:0.0039486842,C50pi43:1:0.0393652608,C50pi44:1:0.0056415419,C50pi45:1:0.0382833580,C50pi46:1:0.0039735086,C50pi47:1:0.0140269355,C50pi48:1:0.0476703673,C50pi49:1:0.0204062788,C50pi50:1:0.0117835304}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
748  LG+C50        31449.278    316 63530.556    263874.556   64450.955
Model LG+C60 is alias for LG+POISSON+G+FMIX{C60pi1:1:0.0169698865,C60pi2:1:0.0211683374,C60pi3:1:0.0276589079,C60pi4:1:0.0065675964,C60pi5:1:0.0141221416,C60pi6:1:0.0068774834,C60pi7:1:0.0146909701,C60pi8:1:0.0067225777,C60pi9:1:0.0018396660,C60pi10:1:0.0102547197,C60pi11:1:0.0230896163,C60pi12:1:0.0057941033,C60pi13:1:0.0125394534,C60pi14:1:0.0204526478,C60pi15:1:0.0070629602,C60pi16:1:0.0117982741,C60pi17:1:0.0068334668,C60pi18:1:0.0433775839,C60pi19:1:0.0318278731,C60pi20:1:0.0222546108,C60pi21:1:0.0102264969,C60pi22:1:0.0150545891,C60pi23:1:0.0134159878,C60pi24:1:0.0148552065,C60pi25:1:0.0239111516,C60pi26:1:0.0128776278,C60pi27:1:0.0222318842,C60pi28:1:0.0247444742,C60pi29:1:0.0214274810,C60pi30:1:0.0115001882,C60pi31:1:0.0076017389,C60pi32:1:0.0130258568,C60pi33:1:0.0093701965,C60pi34:1:0.0467194264,C60pi35:1:0.0441940314,C60pi36:1:0.0322263154,C60pi37:1:0.0402999891,C60pi38:1:0.0150234227,C60pi39:1:0.0104589903,C60pi40:1:0.0214742395,C60pi41:1:0.0154957836,C60pi42:1:0.0101789953,C60pi43:1:0.0227980379,C60pi44:1:0.0123204539,C60pi45:1:0.0066777583,C60pi46:1:0.0004150083,C60pi47:1:0.0344385130,C60pi48:1:0.0113663379,C60pi49:1:0.0127143049,C60pi50:1:0.0124323741,C60pi51:1:0.0262124415,C60pi52:1:0.0064994957,C60pi53:1:0.0103203293,C60pi54:1:0.0142463512,C60pi55:1:0.0215600067,C60pi56:1:0.0199150700,C60pi57:1:0.0038964200,C60pi58:1:0.0113448855,C60pi59:1:0.0128595846,C60pi60:1:0.0117656776}
WARNING: Your input class weight 0.000415008 is very small and may cause numerical issues
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
749  LG+C60        31390.582    316 63413.163    263757.163   64333.562
Akaike Information Criterion:           LG+C60
Corrected Akaike Information Criterion: LG+C60
Bayesian Information Criterion:         LG+C60
Best-fit model: LG+C60 chosen according to BIC

All model information printed to iqtree_gene_trees/COG2967.model.gz
CPU time for ModelFinder: 26456.909 seconds (7h:20m:56s)
Wall-clock time for ModelFinder: 2691.039 seconds (0h:44m:51s)
Generating 1000 samples for ultrafast bootstrap (seed: 397083)...
Model LG+C60 is alias for LG+POISSON+G+FMIX{C60pi1:1:0.0169698865,C60pi2:1:0.0211683374,C60pi3:1:0.0276589079,C60pi4:1:0.0065675964,C60pi5:1:0.0141221416,C60pi6:1:0.0068774834,C60pi7:1:0.0146909701,C60pi8:1:0.0067225777,C60pi9:1:0.0018396660,C60pi10:1:0.0102547197,C60pi11:1:0.0230896163,C60pi12:1:0.0057941033,C60pi13:1:0.0125394534,C60pi14:1:0.0204526478,C60pi15:1:0.0070629602,C60pi16:1:0.0117982741,C60pi17:1:0.0068334668,C60pi18:1:0.0433775839,C60pi19:1:0.0318278731,C60pi20:1:0.0222546108,C60pi21:1:0.0102264969,C60pi22:1:0.0150545891,C60pi23:1:0.0134159878,C60pi24:1:0.0148552065,C60pi25:1:0.0239111516,C60pi26:1:0.0128776278,C60pi27:1:0.0222318842,C60pi28:1:0.0247444742,C60pi29:1:0.0214274810,C60pi30:1:0.0115001882,C60pi31:1:0.0076017389,C60pi32:1:0.0130258568,C60pi33:1:0.0093701965,C60pi34:1:0.0467194264,C60pi35:1:0.0441940314,C60pi36:1:0.0322263154,C60pi37:1:0.0402999891,C60pi38:1:0.0150234227,C60pi39:1:0.0104589903,C60pi40:1:0.0214742395,C60pi41:1:0.0154957836,C60pi42:1:0.0101789953,C60pi43:1:0.0227980379,C60pi44:1:0.0123204539,C60pi45:1:0.0066777583,C60pi46:1:0.0004150083,C60pi47:1:0.0344385130,C60pi48:1:0.0113663379,C60pi49:1:0.0127143049,C60pi50:1:0.0124323741,C60pi51:1:0.0262124415,C60pi52:1:0.0064994957,C60pi53:1:0.0103203293,C60pi54:1:0.0142463512,C60pi55:1:0.0215600067,C60pi56:1:0.0199150700,C60pi57:1:0.0038964200,C60pi58:1:0.0113448855,C60pi59:1:0.0128595846,C60pi60:1:0.0117656776}
WARNING: Your input class weight 0.000415008 is very small and may cause numerical issues

NOTE: 921 MB RAM (0 GB) is required!
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
Estimate model parameters (epsilon = 0.100)
1. Initial log-likelihood: -31390.582
Optimal log-likelihood: -31390.579
Mixture weights: 0.017 0.021 0.028 0.007 0.014 0.007 0.015 0.007 0.002 0.010 0.023 0.006 0.013 0.020 0.007 0.012 0.007 0.043 0.032 0.022 0.010 0.015 0.013 0.015 0.024 0.013 0.022 0.025 0.021 0.012 0.008 0.013 0.009 0.047 0.044 0.032 0.040 0.015 0.010 0.021 0.015 0.010 0.023 0.012 0.007 0.000 0.034 0.011 0.013 0.012 0.026 0.006 0.010 0.014 0.022 0.020 0.004 0.011 0.013 0.012
Gamma shape alpha: 0.872
Parameters optimization took 1 rounds (4.798 sec)
Wrote distance file to... 
Computing ML distances based on estimated model parameters...
Calculating distance matrix: done in 0.867866 secs using 982.1% CPU
Computing ML distances took 0.868825 sec (of wall-clock time) 8.529478 sec (of CPU time)
WARNING: Some pairwise ML distances are too long (saturated)
Setting up auxiliary I and S matrices: done in 0.00198831 secs using 355.6% CPU
Constructing RapidNJ tree: done in 0.194153 secs using 289.9% CPU
Computing RapidNJ tree took 0.196523 sec (of wall-clock time) 0.570775 sec (of CPU time)
Log-likelihood of RapidNJ tree: -31346.347
--------------------------------------------------------------------
|             INITIALIZING CANDIDATE TREE SET                      |
--------------------------------------------------------------------
Generating 98 parsimony trees... 6.952 second
Computing log-likelihood of 98 initial trees ... 199.484 seconds
Current best score: -31346.347

Do NNI search on 20 best initial trees
Optimizing NNI: done in 70.7759 secs using 979.4% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 1: -31220.689
Optimizing NNI: done in 74.1536 secs using 976.6% CPU
Optimizing NNI: done in 158.165 secs using 959.2% CPU
Optimizing NNI: done in 91.8369 secs using 973.7% CPU
Optimizing NNI: done in 103.002 secs using 971.4% CPU
Optimizing NNI: done in 91.2426 secs using 975.1% CPU
Optimizing NNI: done in 83.7113 secs using 978.9% CPU
Optimizing NNI: done in 110.979 secs using 979.7% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 8: -31190.033
Optimizing NNI: done in 79.2734 secs using 979.6% CPU
Optimizing NNI: done in 94.512 secs using 979.1% CPU
Iteration 10 / LogL: -31281.324 / Time: 0h:20m:0s
Optimizing NNI: done in 95.2582 secs using 978.7% CPU
Optimizing NNI: done in 89.4249 secs using 979.4% CPU
Optimizing NNI: done in 102.299 secs using 979.7% CPU
Optimizing NNI: done in 116.357 secs using 979.9% CPU
Optimizing NNI: done in 77.5766 secs using 982.4% CPU
Optimizing NNI: done in 100.514 secs using 983.4% CPU
Optimizing NNI: done in 70.1693 secs using 981% CPU
Optimizing NNI: done in 77.5421 secs using 982% CPU
Optimizing NNI: done in 84.6117 secs using 982.5% CPU
Optimizing NNI: done in 115.531 secs using 981.7% CPU
Iteration 20 / LogL: -31307.203 / Time: 0h:35m:32s
Finish initializing candidate tree set (20)
Current best tree score: -31190.033 / CPU time: 2108.853
Number of iterations: 20
--------------------------------------------------------------------
|               OPTIMIZING CANDIDATE TREE SET                      |
--------------------------------------------------------------------
Optimizing NNI: done in 49.1571 secs using 982.4% CPU
Optimizing NNI: done in 51.5064 secs using 983.4% CPU
Optimizing NNI: done in 53.2851 secs using 983.8% CPU
Optimizing NNI: done in 64.7216 secs using 981.4% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 24: -31176.148
Optimizing NNI: done in 56.9633 secs using 975.7% CPU
Optimizing NNI: done in 72.2207 secs using 977.3% CPU
Optimizing NNI: done in 90.8418 secs using 980.7% CPU
Optimizing NNI: done in 64.8546 secs using 984.2% CPU
Optimizing NNI: done in 66.1379 secs using 983.8% CPU
Optimizing NNI: done in 65.3424 secs using 981.1% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 30: -31174.895
Iteration 30 / LogL: -31174.895 / Time: 0h:46m:21s (2h:39m:51s left)
Optimizing NNI: done in 69.31 secs using 963.2% CPU
Optimizing NNI: done in 75.8239 secs using 963.1% CPU
Optimizing NNI: done in 69.6895 secs using 976% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 33: -31169.158
Optimizing NNI: done in 67.0154 secs using 980.6% CPU
Optimizing NNI: done in 46.6372 secs using 975.5% CPU
Optimizing NNI: done in 63.5708 secs using 977.2% CPU
Optimizing NNI: done in 61.3056 secs using 977.7% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 37: -31164.409
Optimizing NNI: done in 55.2655 secs using 977.5% CPU
Optimizing NNI: done in 61.614 secs using 978.4% CPU
Optimizing NNI: done in 66.6141 secs using 977.4% CPU
Iteration 40 / LogL: -31169.130 / Time: 0h:57m:12s (2h:22m:16s left)
Optimizing NNI: done in 62.4407 secs using 977.9% CPU
Optimizing NNI: done in 60.2572 secs using 980.6% CPU
Optimizing NNI: done in 54.8897 secs using 979.2% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 43: -31159.871
Optimizing NNI: done in 72.3414 secs using 974.5% CPU
Optimizing NNI: done in 56.2705 secs using 976.3% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 45: -31159.111
Optimizing NNI: done in 50.1203 secs using 977% CPU
Optimizing NNI: done in 58.4217 secs using 978.1% CPU
Optimizing NNI: done in 47.3836 secs using 976.2% CPU
Optimizing NNI: done in 55.7145 secs using 978.3% CPU
Optimizing NNI: done in 54.3223 secs using 977.3% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 50: -31157.764
Iteration 50 / LogL: -31157.764 / Time: 1h:7m:3s (2h:16m:52s left)
Log-likelihood cutoff on original alignment: -31284.962
UFBoot trees printed to iqtree_gene_trees/COG2967.ufboot
Optimizing NNI: done in 48.74 secs using 973.5% CPU
Optimizing NNI: done in 66.3024 secs using 953.5% CPU
Optimizing NNI: done in 69.5072 secs using 974.9% CPU
Optimizing NNI: done in 50.3485 secs using 977.7% CPU
Optimizing NNI: done in 49.4285 secs using 976.7% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 55: -31156.163
Optimizing NNI: done in 53.8538 secs using 974.3% CPU
Optimizing NNI: done in 59.9021 secs using 976.7% CPU
Optimizing NNI: done in 59.901 secs using 975.2% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 58: -31155.873
Optimizing NNI: done in 50.2693 secs using 973.6% CPU
Optimizing NNI: done in 60.7286 secs using 978.6% CPU
Iteration 60 / LogL: -31159.601 / Time: 1h:16m:49s (2h:7m:35s left)
Optimizing NNI: done in 80.4472 secs using 977.2% CPU
Optimizing NNI: done in 61.5994 secs using 965.9% CPU
Optimizing NNI: done in 49.1454 secs using 980.1% CPU
Optimizing NNI: done in 62.597 secs using 979.9% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 64: -31151.793
Optimizing NNI: done in 51.7707 secs using 975% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 65: -31151.285
Optimizing NNI: done in 47.355 secs using 977.1% CPU
Optimizing NNI: done in 95.9823 secs using 974.5% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 67: -31146.546
Optimizing NNI: done in 60.6168 secs using 975.1% CPU
Optimizing NNI: done in 48.8075 secs using 973.4% CPU
Optimizing NNI: done in 114.297 secs using 974.7% CPU
Iteration 70 / LogL: -31154.643 / Time: 1h:28m:20s (2h:4m:11s left)
Optimizing NNI: done in 57.9668 secs using 981.8% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 71: -31145.349
Optimizing NNI: done in 56.8927 secs using 977.6% CPU
Optimizing NNI: done in 118.073 secs using 973% CPU
Optimizing NNI: done in 41.5479 secs using 976.9% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 74: -31138.556
Optimizing NNI: done in 45.9403 secs using 974.3% CPU
Optimizing NNI: done in 46.7317 secs using 977.2% CPU
Optimizing NNI: done in 66.0522 secs using 973% CPU
Optimizing NNI: done in 77.2242 secs using 963.8% CPU
Optimizing NNI: done in 72.6744 secs using 957.2% CPU
Optimizing NNI: done in 65.9139 secs using 978.3% CPU
Iteration 80 / LogL: -31149.364 / Time: 1h:39m:27s (1h:58m:20s left)
Optimizing NNI: done in 107.827 secs using 972.6% CPU
Optimizing NNI: done in 33.7866 secs using 986.1% CPU
Optimizing NNI: done in 82.7045 secs using 981.1% CPU
Optimizing NNI: done in 50.6478 secs using 982.7% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 84: -31136.204
Optimizing NNI: done in 33.6225 secs using 989.7% CPU
Optimizing NNI: done in 39.6972 secs using 988.4% CPU
Optimizing NNI: done in 55.5715 secs using 986% CPU
Optimizing NNI: done in 36.08 secs using 986.6% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 88: -31135.468
Optimizing NNI: done in 33.5565 secs using 988.1% CPU
Optimizing NNI: done in 46.0402 secs using 986.8% CPU
Iteration 90 / LogL: -31146.756 / Time: 1h:48m:18s (1h:59m:15s left)
Optimizing NNI: done in 46.89 secs using 987.8% CPU
Optimizing NNI: done in 49.6964 secs using 985.9% CPU
Optimizing NNI: done in 53.4229 secs using 986.4% CPU
Optimizing NNI: done in 33.8116 secs using 988.3% CPU
Optimizing NNI: done in 47.2798 secs using 986.3% CPU
Optimizing NNI: done in 48.0952 secs using 981.3% CPU
Optimizing NNI: done in 45.2657 secs using 981.4% CPU
Optimizing NNI: done in 53.3129 secs using 980.7% CPU
Optimizing NNI: done in 73.8703 secs using 982.1% CPU
Optimizing NNI: done in 52.7889 secs using 980.1% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 100: -31134.521
Iteration 100 / LogL: -31134.521 / Time: 1h:56m:50s (1h:58m:1s left)
Log-likelihood cutoff on original alignment: -31279.935
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.819
NOTE: UFBoot does not converge, continue at least 100 more iterations
UFBoot trees printed to iqtree_gene_trees/COG2967.ufboot
Optimizing NNI: done in 55.2587 secs using 980.8% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 101: -31127.161
Optimizing NNI: done in 49.3997 secs using 981.3% CPU
Optimizing NNI: done in 51.4572 secs using 982.6% CPU
Optimizing NNI: done in 53.4302 secs using 982.9% CPU
Optimizing NNI: done in 47.6393 secs using 981.6% CPU
Optimizing NNI: done in 40.8319 secs using 983.2% CPU
Optimizing NNI: done in 42.0128 secs using 982.9% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 107: -31121.509
Optimizing NNI: done in 42.2493 secs using 981.2% CPU
Optimizing NNI: done in 80.8395 secs using 981.1% CPU
Optimizing NNI: done in 45.4965 secs using 980.6% CPU
Iteration 110 / LogL: -31133.197 / Time: 2h:5m:34s (1h:51m:44s left)
Optimizing NNI: done in 39.0633 secs using 983.9% CPU
Optimizing NNI: done in 41.9527 secs using 983.5% CPU
Optimizing NNI: done in 34.7897 secs using 979.4% CPU
Optimizing NNI: done in 42.1199 secs using 981.8% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 114: -31116.075
Optimizing NNI: done in 36.6075 secs using 981.8% CPU
Optimizing NNI: done in 34.8688 secs using 980.8% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 116: -31113.882
Optimizing NNI: done in 43.5118 secs using 980.3% CPU
Optimizing NNI: done in 46.0161 secs using 982.9% CPU
Optimizing NNI: done in 42.6961 secs using 982.5% CPU
Optimizing NNI: done in 48.4453 secs using 982.3% CPU
Iteration 120 / LogL: -31120.277 / Time: 2h:12m:48s (1h:47m:8s left)
Optimizing NNI: done in 44.0612 secs using 981.2% CPU
Optimizing NNI: done in 45.0196 secs using 981.8% CPU
Optimizing NNI: done in 44.8795 secs using 982.7% CPU
Optimizing NNI: done in 51.6135 secs using 983.5% CPU
Optimizing NNI: done in 40.864 secs using 983.2% CPU
Optimizing NNI: done in 41.2053 secs using 981.6% CPU
Optimizing NNI: done in 68.3863 secs using 980.8% CPU
Optimizing NNI: done in 37.9259 secs using 982.2% CPU
Optimizing NNI: done in 40.8434 secs using 980.6% CPU
Optimizing NNI: done in 39.4697 secs using 981.7% CPU
Iteration 130 / LogL: -31121.416 / Time: 2h:20m:26s (1h:33m:37s left)
Optimizing NNI: done in 47.6085 secs using 983.4% CPU
Optimizing NNI: done in 37.897 secs using 982.6% CPU
Optimizing NNI: done in 39.2076 secs using 983.9% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 133: -31112.578
Optimizing NNI: done in 32.9175 secs using 982.6% CPU
Optimizing NNI: done in 37.4307 secs using 980.9% CPU
Optimizing NNI: done in 48.5591 secs using 980.9% CPU
Optimizing NNI: done in 49.0957 secs using 981.9% CPU
Optimizing NNI: done in 37.9344 secs using 979.5% CPU
Optimizing NNI: done in 33.3177 secs using 974.8% CPU
Optimizing NNI: done in 38.024 secs using 980.6% CPU
Iteration 140 / LogL: -31112.677 / Time: 2h:27m:17s (1h:38m:32s left)
Optimizing NNI: done in 42.0916 secs using 981.5% CPU
Optimizing NNI: done in 40.2344 secs using 980.1% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 142: -31111.576
Optimizing NNI: done in 48.4288 secs using 983.5% CPU
Optimizing NNI: done in 38.0847 secs using 981% CPU
Optimizing NNI: done in 35.1055 secs using 983.3% CPU
Optimizing NNI: done in 40.5793 secs using 982.1% CPU
Optimizing NNI: done in 39.0091 secs using 982.7% CPU
Optimizing NNI: done in 54.6065 secs using 983.1% CPU
Optimizing NNI: done in 31.2004 secs using 981.7% CPU
Optimizing NNI: done in 53.6494 secs using 983.2% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 150: -31109.414
Iteration 150 / LogL: -31109.414 / Time: 2h:34m:33s (1h:43m:44s left)
Log-likelihood cutoff on original alignment: -31265.522
UFBoot trees printed to iqtree_gene_trees/COG2967.ufboot
Optimizing NNI: done in 38.252 secs using 979.8% CPU
Optimizing NNI: done in 38.9765 secs using 982.9% CPU
Optimizing NNI: done in 52.1802 secs using 982.3% CPU
Optimizing NNI: done in 39.7987 secs using 982.6% CPU
Optimizing NNI: done in 44.0367 secs using 981.8% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 155: -31105.568
Optimizing NNI: done in 48.5736 secs using 983.4% CPU
Optimizing NNI: done in 54.4525 secs using 979.4% CPU
Optimizing NNI: done in 39.6897 secs using 981.8% CPU
Optimizing NNI: done in 40.4081 secs using 981.2% CPU
Optimizing NNI: done in 43.3187 secs using 981.4% CPU
Iteration 160 / LogL: -31112.493 / Time: 2h:42m:4s (1h:36m:50s left)
Optimizing NNI: done in 44.5589 secs using 983.4% CPU
Optimizing NNI: done in 40.5716 secs using 983.2% CPU
Optimizing NNI: done in 38.3511 secs using 981.5% CPU
Optimizing NNI: done in 45.1723 secs using 983.4% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 164: -31103.607
Optimizing NNI: done in 48.8672 secs using 979.9% CPU
Optimizing NNI: done in 36.4081 secs using 980.9% CPU
Optimizing NNI: done in 61.0211 secs using 979.2% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 167: -31097.946
Optimizing NNI: done in 50.0778 secs using 980.3% CPU
Optimizing NNI: done in 38.0341 secs using 981.2% CPU
Optimizing NNI: done in 43.5041 secs using 979.8% CPU
Iteration 170 / LogL: -31173.471 / Time: 2h:49m:44s (1h:37m:25s left)
Optimizing NNI: done in 44.6896 secs using 982.6% CPU
Optimizing NNI: done in 42.579 secs using 982% CPU
Optimizing NNI: done in 48.4942 secs using 980.9% CPU
Optimizing NNI: done in 45.4728 secs using 980.1% CPU
Optimizing NNI: done in 59.1062 secs using 976.3% CPU
Optimizing NNI: done in 45.5359 secs using 978.2% CPU
Optimizing NNI: done in 33.837 secs using 981.5% CPU
Optimizing NNI: done in 40.645 secs using 979.8% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 178: -31097.397
Optimizing NNI: done in 58.5122 secs using 980.1% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 179: -31096.468
Optimizing NNI: done in 43.0448 secs using 981% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 180: -31094.915
Iteration 180 / LogL: -31094.915 / Time: 2h:57m:46s (1h:39m:18s left)
Optimizing NNI: done in 50.8415 secs using 983.2% CPU
Optimizing NNI: done in 31.7951 secs using 982.1% CPU
Optimizing NNI: done in 39.7198 secs using 981.1% CPU
Optimizing NNI: done in 39.4627 secs using 981.8% CPU
Optimizing NNI: done in 55.6059 secs using 979.5% CPU
Optimizing NNI: done in 45.4375 secs using 982.2% CPU
Optimizing NNI: done in 42.5742 secs using 982.6% CPU
Optimizing NNI: done in 52.1439 secs using 982.3% CPU
Optimizing NNI: done in 34.7748 secs using 982.4% CPU
Optimizing NNI: done in 35.9543 secs using 980.5% CPU
Iteration 190 / LogL: -31097.018 / Time: 3h:4m:58s (1h:28m:5s left)
Optimizing NNI: done in 38.671 secs using 979% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 191: -31085.294
Optimizing NNI: done in 32.8863 secs using 980.3% CPU
Optimizing NNI: done in 69.4905 secs using 979.7% CPU
Optimizing NNI: done in 35.9044 secs using 979.2% CPU
Optimizing NNI: done in 40.9202 secs using 981.1% CPU
Optimizing NNI: done in 39.5882 secs using 981.9% CPU
Optimizing NNI: done in 36.0156 secs using 982% CPU
Optimizing NNI: done in 34.5723 secs using 975.4% CPU
Optimizing NNI: done in 42.6471 secs using 974.4% CPU
Optimizing NNI: done in 42.1185 secs using 975.9% CPU
Iteration 200 / LogL: -31088.235 / Time: 3h:11m:59s (1h:27m:47s left)
Log-likelihood cutoff on original alignment: -31252.593
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.630
NOTE: UFBoot does not converge, continue at least 100 more iterations
UFBoot trees printed to iqtree_gene_trees/COG2967.ufboot
Optimizing NNI: done in 41.8985 secs using 975.7% CPU
Optimizing NNI: done in 42.7134 secs using 980.8% CPU
Optimizing NNI: done in 45.2482 secs using 979.8% CPU
Optimizing NNI: done in 41.5921 secs using 978.6% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 204: -31083.207
Optimizing NNI: done in 44.9716 secs using 977.1% CPU
Optimizing NNI: done in 45.6011 secs using 982.3% CPU
Optimizing NNI: done in 36.196 secs using 981.6% CPU
Optimizing NNI: done in 47.9773 secs using 981% CPU
Optimizing NNI: done in 43.2975 secs using 980.3% CPU
Optimizing NNI: done in 40.3528 secs using 980.2% CPU
Iteration 210 / LogL: -31089.297 / Time: 3h:19m:21s (1h:29m:39s left)
Optimizing NNI: done in 50.1148 secs using 977.3% CPU
Optimizing NNI: done in 38.5813 secs using 979.7% CPU
Optimizing NNI: done in 48.7465 secs using 982.1% CPU
Optimizing NNI: done in 47.8952 secs using 977.6% CPU
Optimizing NNI: done in 48.3404 secs using 978% CPU
Optimizing NNI: done in 65.301 secs using 977.6% CPU
Optimizing NNI: done in 48.8672 secs using 983.9% CPU
Optimizing NNI: done in 43.7968 secs using 985.1% CPU
Optimizing NNI: done in 46.0991 secs using 982% CPU
Optimizing NNI: done in 64.3389 secs using 982.4% CPU
Iteration 220 / LogL: -31091.181 / Time: 3h:27m:48s (1h:19m:42s left)
Optimizing NNI: done in 60.8073 secs using 981.5% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 221: -31081.564
Optimizing NNI: done in 57.7543 secs using 973.2% CPU
Optimizing NNI: done in 56.5691 secs using 971.8% CPU
Optimizing NNI: done in 59.4876 secs using 975.2% CPU
Optimizing NNI: done in 53.2538 secs using 978.4% CPU
Optimizing NNI: done in 42.6792 secs using 977.1% CPU
Optimizing NNI: done in 55.6766 secs using 977.2% CPU
Optimizing NNI: done in 38.4261 secs using 981.3% CPU
Optimizing NNI: done in 53.5337 secs using 980.2% CPU
Optimizing NNI: done in 39.5798 secs using 979.2% CPU
Iteration 230 / LogL: -31083.421 / Time: 3h:36m:37s (1h:26m:4s left)
Optimizing NNI: done in 51.6284 secs using 977.1% CPU
Optimizing NNI: done in 45.6333 secs using 980.7% CPU
Optimizing NNI: done in 41.844 secs using 977.6% CPU
Optimizing NNI: done in 48.3828 secs using 977.9% CPU
Optimizing NNI: done in 41.628 secs using 976.9% CPU
Optimizing NNI: done in 52.567 secs using 979.4% CPU
Optimizing NNI: done in 57.8471 secs using 975.3% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 237: -31080.177
Optimizing NNI: done in 62.5657 secs using 977.1% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 238: -31079.423
Optimizing NNI: done in 50.9441 secs using 976.1% CPU
Optimizing NNI: done in 50.2614 secs using 978.8% CPU
Iteration 240 / LogL: -31080.231 / Time: 3h:45m:16s (1h:32m:22s left)
Optimizing NNI: done in 49.1995 secs using 973% CPU
Optimizing NNI: done in 45.3314 secs using 975.4% CPU
Optimizing NNI: done in 52.3901 secs using 974.3% CPU
Optimizing NNI: done in 49.6526 secs using 973.5% CPU
Optimizing NNI: done in 46.171 secs using 971.4% CPU
Optimizing NNI: done in 58.0367 secs using 968.4% CPU
Optimizing NNI: done in 47.9892 secs using 973.4% CPU
Optimizing NNI: done in 50.6661 secs using 972% CPU
Optimizing NNI: done in 62.6897 secs using 973% CPU
Optimizing NNI: done in 53.1939 secs using 969.7% CPU
Iteration 250 / LogL: -31085.399 / Time: 3h:53m:57s (1h:22m:41s left)
Log-likelihood cutoff on original alignment: -31246.566
UFBoot trees printed to iqtree_gene_trees/COG2967.ufboot
Optimizing NNI: done in 67.0641 secs using 965.3% CPU
Optimizing NNI: done in 50.6399 secs using 964.4% CPU
Optimizing NNI: done in 59.1174 secs using 970.2% CPU
Optimizing NNI: done in 59.4991 secs using 967.8% CPU
Optimizing NNI: done in 47.3029 secs using 965.3% CPU
Optimizing NNI: done in 59.2363 secs using 966.4% CPU
Optimizing NNI: done in 61.7179 secs using 967.6% CPU
Optimizing NNI: done in 43.3596 secs using 969% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 258: -31078.133
Optimizing NNI: done in 45.5683 secs using 973.5% CPU
Optimizing NNI: done in 50.4468 secs using 974.8% CPU
Iteration 260 / LogL: -31085.220 / Time: 4h:3m:14s (1h:32m:2s left)
Optimizing NNI: done in 54.7238 secs using 973.1% CPU
Optimizing NNI: done in 75.257 secs using 973.4% CPU
Optimizing NNI: done in 47.4795 secs using 974.6% CPU
Optimizing NNI: done in 49.418 secs using 971.5% CPU
Optimizing NNI: done in 42.3639 secs using 975.3% CPU
Optimizing NNI: done in 49.3899 secs using 971.3% CPU
Optimizing NNI: done in 67.4986 secs using 969.3% CPU
Optimizing NNI: done in 59.6609 secs using 974.7% CPU
Optimizing NNI: done in 51.2085 secs using 967.5% CPU
Optimizing NNI: done in 49.3352 secs using 968.5% CPU
Iteration 270 / LogL: -31087.548 / Time: 4h:12m:26s (1h:22m:35s left)
Optimizing NNI: done in 50.6672 secs using 971.1% CPU
Optimizing NNI: done in 54.4558 secs using 968.5% CPU
Optimizing NNI: done in 64.9058 secs using 967.8% CPU
Optimizing NNI: done in 53.0956 secs using 970% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 274: -31076.330
Optimizing NNI: done in 51.3991 secs using 975.2% CPU
Optimizing NNI: done in 52.9564 secs using 971.6% CPU
Optimizing NNI: done in 80.192 secs using 970.9% CPU
Optimizing NNI: done in 64.6853 secs using 974.8% CPU
Optimizing NNI: done in 67.4433 secs using 965.3% CPU
Optimizing NNI: done in 53.0756 secs using 964.8% CPU
Iteration 280 / LogL: -31089.089 / Time: 4h:22m:30s (1h:28m:26s left)
Optimizing NNI: done in 42.7305 secs using 970.5% CPU
Optimizing NNI: done in 49.0554 secs using 969.4% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 282: -31075.635
Optimizing NNI: done in 54.3702 secs using 971.3% CPU
Optimizing NNI: done in 53.7092 secs using 971.7% CPU
Optimizing NNI: done in 43.0664 secs using 972.1% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 285: -31074.057
Optimizing NNI: done in 45.4279 secs using 968.1% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 286: -31073.686
Optimizing NNI: done in 47.0239 secs using 972.4% CPU
Optimizing NNI: done in 48.3975 secs using 973.7% CPU
Optimizing NNI: done in 45.7926 secs using 973.7% CPU
Optimizing NNI: done in 57.202 secs using 973% CPU
Iteration 290 / LogL: -31086.735 / Time: 4h:31m:1s (1h:30m:1s left)
Optimizing NNI: done in 66.9511 secs using 965.9% CPU
Optimizing NNI: done in 61.2539 secs using 972.7% CPU
Optimizing NNI: done in 54.5177 secs using 973.8% CPU
Optimizing NNI: done in 55.1993 secs using 969.2% CPU
Optimizing NNI: done in 53.1249 secs using 970.5% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 295: -31070.361
Optimizing NNI: done in 55.1178 secs using 972% CPU
Optimizing NNI: done in 37.2013 secs using 970.8% CPU
Optimizing NNI: done in 47.8343 secs using 971.3% CPU
Optimizing NNI: done in 55.7159 secs using 971.6% CPU
Optimizing NNI: done in 50.5599 secs using 965.7% CPU
Iteration 300 / LogL: -31085.999 / Time: 4h:40m:9s (1h:29m:0s left)
Log-likelihood cutoff on original alignment: -31246.566
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.739
NOTE: UFBoot does not converge, continue at least 100 more iterations
UFBoot trees printed to iqtree_gene_trees/COG2967.ufboot
Optimizing NNI: done in 63.4642 secs using 967.9% CPU
Optimizing NNI: done in 53.6705 secs using 972.1% CPU
Optimizing NNI: done in 50.7177 secs using 972.1% CPU
Optimizing NNI: done in 53.5383 secs using 970.4% CPU
Optimizing NNI: done in 38.9391 secs using 968.7% CPU
Optimizing NNI: done in 67.1997 secs using 969.5% CPU
Optimizing NNI: done in 42.9063 secs using 974.5% CPU
Optimizing NNI: done in 44.0264 secs using 971.8% CPU
Optimizing NNI: done in 42.7511 secs using 975.9% CPU
Optimizing NNI: done in 51.1306 secs using 975% CPU
Iteration 310 / LogL: -31141.308 / Time: 4h:48m:45s (1h:24m:6s left)
Optimizing NNI: done in 46.9634 secs using 973.2% CPU
Optimizing NNI: done in 57.2946 secs using 975.8% CPU
Optimizing NNI: done in 42.0688 secs using 971.2% CPU
Optimizing NNI: done in 51.9552 secs using 973.1% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 314: -31068.189
Optimizing NNI: done in 45.2119 secs using 972.3% CPU
Optimizing NNI: done in 57.7366 secs using 953% CPU
Optimizing NNI: done in 56.3975 secs using 967.7% CPU
Optimizing NNI: done in 68.4098 secs using 965.9% CPU
Optimizing NNI: done in 56.0791 secs using 956% CPU
Optimizing NNI: done in 53.8585 secs using 969.3% CPU
Iteration 320 / LogL: -31071.049 / Time: 4h:57m:52s (1h:27m:46s left)
Optimizing NNI: done in 57.6684 secs using 969.2% CPU
Optimizing NNI: done in 45.9037 secs using 969.6% CPU
Optimizing NNI: done in 48.9775 secs using 968.8% CPU
Optimizing NNI: done in 56.1801 secs using 967% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 324: -31067.792
Optimizing NNI: done in 47.7391 secs using 970.4% CPU
Optimizing NNI: done in 47.6502 secs using 970.7% CPU
Optimizing NNI: done in 48.8647 secs using 969.5% CPU
Optimizing NNI: done in 58.7863 secs using 972% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 328: -31065.320
Optimizing NNI: done in 49.089 secs using 973.6% CPU
Optimizing NNI: done in 62.235 secs using 968.4% CPU
Iteration 330 / LogL: -31079.861 / Time: 5h:6m:51s (1h:31m:24s left)
Optimizing NNI: done in 52.9974 secs using 969.2% CPU
Optimizing NNI: done in 48.1308 secs using 975% CPU
Optimizing NNI: done in 52.0419 secs using 972.9% CPU
Optimizing NNI: done in 48.803 secs using 973.6% CPU
Optimizing NNI: done in 45.7299 secs using 972.5% CPU
Optimizing NNI: done in 51.7081 secs using 972.1% CPU
Optimizing NNI: done in 47.4056 secs using 968.5% CPU
Optimizing NNI: done in 49.3052 secs using 970.1% CPU
Optimizing NNI: done in 50.2691 secs using 972.6% CPU
Optimizing NNI: done in 67.9575 secs using 968.4% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 340: -31064.983
Iteration 340 / LogL: -31064.983 / Time: 5h:15m:36s (1h:33m:6s left)
Optimizing NNI: done in 50.9658 secs using 972.5% CPU
Optimizing NNI: done in 47.0667 secs using 974.8% CPU
Optimizing NNI: done in 54.3209 secs using 971.5% CPU
Optimizing NNI: done in 39.0081 secs using 975.3% CPU
Optimizing NNI: done in 43.7119 secs using 974.4% CPU
Optimizing NNI: done in 62.9775 secs using 963.1% CPU
Optimizing NNI: done in 73.92 secs using 957% CPU
Optimizing NNI: done in 65.6777 secs using 959.3% CPU
