IQ-TREE multicore version 2.2.0.3 COVID-edition for Linux 64-bit built May 11 2022
Developed by Bui Quang Minh, James Barbetti, Nguyen Lam Tung,
Olga Chernomor, Heiko Schmidt, Dominik Schrempf, Michael Woodhams, Ly Trong Nhan.

Host:    deming (AVX512, FMA3, 1511 GB RAM)
Command: iqtree -s gene_alignments/trimmed_COG1342.afa -m MFP -bb 1000 -wbtl -ntmax 10 -nt AUTO -T 10 --prefix /researchdrive/zhongj2/tree-reconciliation/iqtree_gene_trees/COG1342 -madd C10,C20,C30,C40,C50,C60,EX2,EX3,EHO,UL2,UL3,EX_EHO,LG4M,LG4X,CF4 -mrate E,I,G,I+G,R
Seed:    855272 (Using SPRNG - Scalable Parallel Random Number Generator)
Time:    Sun Apr  2 01:56:07 2023
Kernel:  AVX+FMA - 10 threads (128 CPU cores detected)

Reading alignment file gene_alignments/trimmed_COG1342.afa ... Fasta format detected
Reading fasta file: done in 0.00147673 secs using 72.8% CPU
Alignment most likely contains protein sequences
Constructing alignment: done in 0.00119582 secs using 99.68% CPU
Alignment has 217 sequences with 154 columns, 154 distinct patterns
152 parsimony-informative, 2 singleton sites, 0 constant sites
                                                                  Gap/Ambiguity  Composition  p-value
Analyzing sequences: done in 4.06653e-05 secs using 9935% CPU
   1  GCF.900129115.1.Bacteria.Firmicutes.A_NZ_FQUR01000020.1_39         23.38%    passed     77.95%
   2  GCA.002329525.1.Bacteria.Firmicutes.C_DCTI01000160.1_25            12.99%    passed     69.12%
   3  GCA.002327765.1.Bacteria.Desulfobacterota.E_DCUH01000136.1_3        5.84%    passed     11.39%
   4  GCA.002770755.1.Bacteria.Patescibacteria_PCQY01000021.1_6          40.26%    passed     22.58%
   5  GCA.002747255.1.Bacteria.Acidobacteriota_PDUC01000012.1_7          22.08%    passed     90.37%
   6  GCF.002257705.1.Bacteria.Firmicutes.C_NZ_LSLK01000059.1_357         3.25%    passed     36.53%
   7  GCF.000212395.1.Bacteria.Thermodesulfobiota_NC_015499.1_1534       31.17%    passed      5.24%
   8  GCA.001029735.1.Bacteria.Patescibacteria_CP011213.1_601            11.69%    passed     92.39%
   9  GCA.002841825.1.Bacteria.Myxococcota_PHAZ01000023.1_26             16.88%    passed     67.32%
  10  GCF.000011005.1.Archaea.Euryarchaeota_NC_013665.1_543              22.73%    passed     67.53%
  11  GCA.001872685.1.Bacteria.Marinisomatota_MNWS01000102.1_15          53.90%    passed     22.82%
  12  GCA.001940655.1.Archaea.Asgardarchaeota_MBAA01000017.1_15          11.69%    passed     79.28%
  13  GCA.002328485.1.Bacteria.Desulfobacterota.G_DCUF01000038.1_21      51.95%    passed     39.08%
  14  GCA.001799695.1.Bacteria.Elusimicrobiota_MGTY01000093.1_13         37.66%    passed     31.26%
  15  GCA.003527145.1.Bacteria.Firmicutes.A_DPSW01000212.1_5             27.27%    passed     26.56%
  16  GCA.002255045.1.Archaea.Thermoproteota_NJEE01000095.1_4            34.42%    passed     50.28%
  17  GCA.001563325.1.Archaea.Asgardarchaeota_LRSK01000051.1_17           6.49%    passed     52.59%
  18  GCA.003144275.1.Archaea.Asgardarchaeota_NJBF01000065.1_11           3.25%    passed     19.10%
  19  GCA.001577135.1.Bacteria.Cloacimonadota_LSCK01000073.1_1           49.35%    passed     79.42%
  20  GCA.002375895.1.Bacteria.Firmicutes.E_DFND01000050.1_19            25.97%    passed     43.86%
  21  GCA.002305395.1.Bacteria.Patescibacteria_DBQW01000012.1_3          40.26%    passed     72.16%
  22  GCA.002402635.1.Bacteria.Deferribacterota_DHGE01000143.1_34        20.13%    passed     94.97%
  23  GCF.900142265.1.Bacteria.Firmicutes.A_NZ_FRAH01000011.1_36         21.43%    passed     16.13%
  24  GCA.002792135.1.Bacteria.Patescibacteria_PFNU01000068.1_6          37.66%    failed      3.98%
  25  GCA.001791465.1.Bacteria.Patescibacteria_MGER01000066.1_10         35.71%    passed     57.21%
  26  GCA.001512665.1.Bacteria.Firmicutes.B_LFSF01000004.1_4             18.83%    passed     27.49%
  27  GCA.000403035.1.Bacteria.Latescibacterota_AQSL01000134.1_6         60.39%    failed      0.00%
  28  GCA.002215665.1.Bacteria.WOR.3_NGFL01000007.1_2                    11.69%    passed     96.96%
  29  GCA.001723855.1.Archaea.Altiarchaeota_MCBC01000120.1_18            35.71%    passed     14.62%
  30  GCA.002306345.1.Bacteria.Patescibacteria_DBRQ01000004.1_17         38.96%    passed     44.00%
  31  GCA.002502685.1.Archaea.Thermoplasmatota_DAQA01000013.1_34         36.36%    passed     91.01%
  32  GCA.001513395.1.Bacteria.Firmicutes.G_LFTP01000209.1_3             17.53%    passed     41.07%
  33  GCA.001816655.1.Bacteria.Patescibacteria_MHCP01000015.1_8          38.96%    passed     45.95%
  34  GCA.001768075.1.Bacteria.Myxococcota_MEMX01000033.1_163            23.38%    passed     52.35%
  35  GCA.002772205.1.Bacteria.Patescibacteria_PCRZ01000045.1_2          55.84%    failed      4.55%
  36  GCA.002307275.1.Bacteria.Firmicutes.A_DBTX01000036.1_12             1.95%    passed     36.31%
  37  GCA.002747255.1.Bacteria.Acidobacteriota_PDUC01000039.1_54         35.06%    passed     33.31%
  38  GCA.002291985.1.Bacteria.Firmicutes.E_DBBB01000026.1_16            22.73%    passed     60.55%
  39  GCF.002607855.1.Bacteria.Firmicutes.B_NZ_AWQQ01000143.1_5          39.61%    passed     27.43%
  40  GCA.001800245.1.Bacteria.Elusimicrobiota_MGVA01000059.1_47         66.23%    passed     26.58%
  41  GCA.001819495.1.Bacteria.Patescibacteria_MHMW01000018.1_23         40.26%    passed     36.82%
  42  GCA.002779205.1.Bacteria.Actinobacteriota_PEXF01000060.1_12        13.64%    failed      1.05%
  43  GCA.001940665.1.Archaea.Asgardarchaeota_MDVT01000006.1_9           65.58%    failed      0.27%
  44  GCA.003170555.1.Bacteria.FEN.1099_PMZC01000102.1_21                36.36%    passed     83.54%
  45  GCA.002423965.1.Bacteria.Firmicutes.D_DIOR01000008.1_99            24.68%    passed     98.02%
  46  GCA.002772895.1.Bacteria.Patescibacteria_PFCS01000029.1_13         38.31%    failed      0.36%
  47  GCF.000166335.1.Bacteria.Firmicutes.A_NC_014657.1_2014              7.14%    passed     76.18%
  48  GCA.001800245.1.Bacteria.Elusimicrobiota_MGVA01000059.1_59         11.69%    failed      0.44%
  49  GCA.002409975.1.Bacteria.Firmicutes.G_DHOO01000070.1_12             1.95%    passed     41.39%
  50  GCF.000020005.1.Bacteria.Firmicutes.D_NC_010718.1_2432             25.32%    passed     99.62%
  51  GCA.002789615.1.Bacteria.Acidobacteriota_PFTO01000002.1_1          18.83%    passed     35.40%
  52  GCA.001303885.1.Bacteria.Planctomycetota_LJUE01000099.1_3          23.38%    failed      0.47%
  53  GCF.002607855.1.Bacteria.Firmicutes.B_NZ_AWQQ01000017.1_25         12.99%    passed     88.43%
  54  GCA.002428525.1.Bacteria.UBP14_DIWU01000010.1_10                   20.78%    passed     85.58%
  55  GCF.000970205.1.Archaea.Halobacteriota_NZ_CP009512.1_325           24.68%    passed     74.34%
  56  GCA.002779595.1.Archaea.Nanoarchaeota_PEWF01000043.1_11            40.26%    passed     96.71%
  57  GCF.000970205.1.Archaea.Halobacteriota_NZ_CP009512.1_2766           2.60%    passed     92.81%
  58  GCA.001797675.1.Bacteria.Desulfobacterota_MGQB01000039.1_74        57.79%    failed      0.00%
  59  GCF.000328625.1.Bacteria.Firmicutes.F_NC_019978.1_1032             19.48%    failed      2.53%
  60  GCF.000430605.1.Bacteria.Firmicutes.C_WP_018702634.1                3.90%    failed      0.54%
  61  GCA.002878135.1.Archaea.Thermoplasmatota_PNIT01000042.1_3          38.31%    passed     41.42%
  62  GCA.002877955.1.Bacteria.Caldisericota_PNIL01000010.1_2            33.12%    passed     59.23%
  63  GCA.002084765.1.Bacteria.4572.55_NBMB01000004.1_10                 55.84%    failed      0.62%
  64  GCA.003245625.1.Bacteria.Firmicutes_QKCT01000038.1_9               23.38%    passed     58.06%
  65  GCA.002375925.1.Bacteria.Firmicutes.E_DFNE01000059.1_5              3.90%    passed     99.24%
  66  GCA.000961765.1.Bacteria.Firmicutes.B_LADT01000072.1_24             8.44%    passed     22.15%
  67  GCA.002376045.1.Bacteria.Firmicutes.A_DFNM01000020.1_14             3.25%    passed     98.10%
  68  GCA.002049985.1.Bacteria.Latescibacterota_MVCY01000020.1_12        24.68%    failed      0.78%
  69  GCA.002011355.1.Archaea.Thermoplasmatota_MTNE01000201.1_7          38.31%    passed     43.93%
  70  GCA.003194485.1.Bacteria.Desulfobacterota_PQXD01000003.1_94        29.22%    passed     79.42%
  71  GCA.002428295.1.Bacteria.Caldisericota_DIVS01000013.1_32           24.68%    passed     49.33%
  72  GCA.002428295.1.Bacteria.Caldisericota_DIVS01000053.1_5            25.32%    passed     90.30%
  73  GCA.001766825.1.Archaea.Halobacteriota_LYOR01000002.1_178          72.08%    failed      0.24%
  74  GCA.001421185.1.Archaea.Thermoplasmatota_LJKK01000056.1_41         27.27%    passed     74.87%
  75  GCA.002502135.1.Archaea.Undinarchaeota_DAPM01000010.1_35           27.92%    passed     21.70%
  76  GCA.002347965.1.Bacteria.UBA2233_DDYN01000049.1_64                 11.04%    passed     91.12%
  77  GCA.001829155.1.Bacteria.Spirochaetota_MIAO01000135.1_10            3.25%    passed     48.01%
  78  GCA.001587715.1.Archaea.Methanobacteriota.B_LNGC01000115.1_3        8.44%    passed     14.90%
  79  GCA.001508005.1.Bacteria.Firmicutes.B_LGEZ01000022.1_11             0.65%    passed     98.23%
  80  GCA.003501375.1.Bacteria.Sumerlaeota_DNPO01000471.1_2              26.62%    passed     72.99%
  81  GCA.002426645.1.Bacteria.Firmicutes.G_DIRN01000047.1_4              9.09%    passed     84.81%
  82  GCA.002790835.1.Bacteria.Krumholzibacteriota_PFVX01000094.1_29      1.95%    passed     10.72%
  83  GCA.001790645.1.Bacteria.Schekmanbacteria_MGDB01000092.1_2          2.60%    passed     67.74%
  84  GCF.900176005.1.Bacteria.Firmicutes.B_NZ_LT838272.1_394             5.84%    passed     71.61%
  85  GCA.001771505.1.Bacteria.Margulisbacteria_MEUA01000041.1_19        35.06%    passed     95.49%
  86  GCF.000025525.1.Archaea.Methanobacteriota.A_NC_013887.1_712        22.08%    passed     65.98%
  87  GCF.002224645.1.Bacteria.Firmicutes.B_NZ_CP022121.1_2938           24.68%    passed     99.37%
  88  GCA.002784945.1.Bacteria.Patescibacteria_PFMD01000010.1_17         38.96%    passed     77.40%
  89  GCA.900016865.1.Bacteria.Firmicutes.G_FIZI01000016.1_96            21.43%    passed     75.97%
  90  GCF.001049895.1.Bacteria.Firmicutes_NZ_CVPE01000006.1_132           1.95%    failed      0.01%
  91  GCA.003152095.1.Bacteria.Acidobacteriota_PLZI01000011.1_53         14.94%    passed     63.02%
  92  GCA.001412425.1.Bacteria.Cloacimonadota_LKUH01000229.1_5            1.95%    failed      0.97%
  93  GCA.002494765.1.Archaea.Thermoplasmatota_DACJ01000092.1_7          12.99%    passed     85.26%
  94  GCF.000024605.1.Bacteria.Firmicutes.B_NC_013385.1_1427              9.09%    passed     15.83%
  95  GCA.000987045.1.Bacteria.Firmicutes.B_LAKY01000063.1_140            1.95%    passed     35.23%
  96  GCA.002402995.1.Bacteria.Patescibacteria_DHGX01000001.1_69         40.91%    passed      8.47%
  97  GCA.003070825.1.Bacteria.Firmicutes.F_QBLP01000172.1_4             14.94%    passed     89.42%
  98  GCA.002011075.1.Archaea.Thermoproteota_MTMA01000002.1_83           41.56%    passed     17.10%
  99  GCA.002328485.1.Bacteria.Desulfobacterota.G_DCUF01000038.1_27       1.30%    passed     61.09%
 100  GCA.002419125.1.Bacteria.Patescibacteria_DIFL01000004.1_13         53.90%    failed      0.69%
 101  GCA.001563325.1.Archaea.Asgardarchaeota_LRSK01000028.1_22          38.31%    passed     58.70%
 102  GCA.002375925.1.Bacteria.Firmicutes.E_DFNE01000135.1_21            28.57%    passed     83.46%
 103  GCA.001567355.1.Bacteria.Patescibacteria_JYNZ01000005.1_88         40.26%    passed      6.96%
 104  GCA.003245715.1.Bacteria.Planctomycetota_QKCJ01000024.1_68          2.60%    passed     83.30%
 105  GCA.002436065.1.Bacteria.Chloroflexota_DIXP01000079.1_10            1.30%    passed     85.45%
 106  GCA.002789635.1.Archaea.Aenigmatarchaeota_PFTQ01000002.1_18        34.42%    passed     96.88%
 107  GCF.900104455.1.Bacteria.Firmicutes.C_NZ_FNHB01000017.1_10         27.27%    passed     79.31%
 108  GCA.002436065.1.Bacteria.Chloroflexota_DIXP01000079.1_39            3.90%    passed     19.63%
 109  GCF.002224645.1.Bacteria.Firmicutes.B_NZ_CP022121.1_456            18.83%    passed     97.86%
 110  GCF.000019605.1.Archaea.Thermoproteota_NC_010482.1_773             38.96%    passed     82.25%
 111  GCA.001766825.1.Archaea.Halobacteriota_LYOR01000002.1_182          18.18%    passed     96.53%
 112  GCA.002452295.1.Bacteria.Firmicutes.G_DKEX01000079.1_6              1.30%    passed     21.99%
 113  GCA.002352365.1.Bacteria.Chloroflexota_DEIJ01000011.1_1             2.60%    passed     58.45%
 114  GCA.002049825.1.Bacteria.Calditrichota_MVCZ01000106.1_5            60.39%    failed      1.74%
 115  GCA.003158365.1.Bacteria.Bacteroidota_PMIW01000056.1_19            10.39%    failed      2.49%
 116  GCA.002791215.1.Bacteria.Patescibacteria_PFWQ01000086.1_10         38.96%    passed     17.66%
 117  GCA.002419125.1.Bacteria.Patescibacteria_DIFL01000004.1_12         38.31%    failed      0.36%
 118  GCA.003170085.1.Bacteria.Planctomycetota_PMZT01000046.1_5           1.30%    passed     71.08%
 119  GCA.002215665.1.Bacteria.WOR.3_NGFL01000073.1_17                    3.25%    passed     32.40%
 120  GCA.002482535.1.Bacteria.Firmicutes.B_DLGE01000001.1_27            16.23%    passed     38.17%
 121  GCA.002878375.1.Bacteria.Dictyoglomota_NIRF01000009.1_81           61.69%    failed      2.31%
 122  GCF.900107485.1.Bacteria.Firmicutes.A_NZ_FNQE01000002.1_110        20.13%    passed     73.93%
 123  GCF.000212395.1.Bacteria.Thermodesulfobiota_NC_015499.1_1612       34.42%    passed     41.03%
 124  GCA.002367275.1.Bacteria.Chloroflexota_DFBE01000080.1_30            2.60%    passed      8.61%
 125  GCA.001723855.1.Archaea.Altiarchaeota_MCBC01000140.1_3             40.26%    passed     38.21%
 126  GCA.002254565.1.Archaea.Altiarchaeota_NJEG01000008.1_22            11.04%    passed     34.03%
 127  GCA.001800245.1.Bacteria.Elusimicrobiota_MGVA01000069.1_63         31.17%    passed     46.28%
 128  GCA.001593865.1.Archaea.Thermoproteota_LUCB01000005.1_77           39.61%    passed     81.31%
 129  GCA.003154195.1.Bacteria.Omnitrophota_PMCS01000009.1_53            36.36%    passed     70.61%
 130  GCA.003154195.1.Bacteria.Omnitrophota_PMCS01000029.1_150           36.36%    passed     75.97%
 131  GCA.002452555.1.Bacteria.Marinisomatota_DKER01000169.1_10          14.29%    passed     89.17%
 132  GCA.003153275.1.Bacteria.Nitrospirota_PLXX01000077.1_17            57.79%    passed     30.08%
 133  GCA.002418765.1.Bacteria.Firmicutes.B_DIET01000005.1_104           22.08%    passed     49.59%
 134  GCA.001940665.1.Archaea.Asgardarchaeota_MDVT01000006.1_13          35.71%    passed     14.77%
 135  GCA.001412335.1.Archaea.Halobacteriota_LKUF01000221.1_10           25.32%    passed     28.80%
 136  GCA.002796125.1.Bacteria.Omnitrophota_PCWA01000026.1_16            37.01%    passed     77.16%
 137  GCA.002423325.1.Bacteria.Chloroflexota_DIVQ01000208.1_58           60.39%    failed      0.01%
 138  GCA.000998185.1.Bacteria.Patescibacteria_LCCW01000019.1_11         59.74%    failed      1.58%
 139  GCA.002352365.1.Bacteria.Chloroflexota_DEIJ01000008.1_6             9.09%    passed     35.51%
 140  GCA.003056205.1.Bacteria.Patescibacteria_LSNS01000004.1_47         41.56%    failed      1.53%
 141  GCA.001515205.2.Archaea.Hadarchaeota_LQMQ01000061.1_9              29.87%    passed     66.87%
 142  GCA.003497555.1.Bacteria.Spirochaetota_DNNS01000421.1_2            40.91%    passed     86.00%
 143  GCA.002347645.1.Bacteria.Actinobacteriota_DDYF01000059.1_65         1.95%    failed      0.77%
 144  GCA.001769805.1.Bacteria.Bdellovibrionota_MEPO01000008.1_17        37.66%    passed     93.41%
 145  GCF.900100785.1.Bacteria.Firmicutes.B_NZ_FNCP01000012.1_71         18.18%    passed     69.25%
 146  GCA.001768645.1.Bacteria.Actinobacteriota_MELK01000028.1_40        15.58%    passed     97.56%
 147  GCA.002783585.1.Bacteria.Omnitrophota_PFHB01000075.1_18            18.83%    passed     86.80%
 148  GCF.000092905.1.Bacteria.Firmicutes_NC_014098.1_1404                1.95%    passed     25.71%
 149  GCA.001787855.1.Bacteria.Riflebacteria_MFYY01000091.1_18            7.79%    passed     96.02%
 150  GCF.002958735.1.Bacteria.Proteobacteria_NZ_PPGH01000037.1_1028     35.71%    passed     21.95%
 151  GCA.002385745.1.Bacteria.Firmicutes.D_DGEC01000113.1_1              3.25%    passed     43.57%
 152  GCA.003194485.1.Bacteria.Desulfobacterota_PQXD01000002.1_131       24.68%    passed     23.99%
 153  GCF.001886815.1.Bacteria.Calditrichota_NZ_CP018099.1_1835          59.09%    passed      7.77%
 154  GCA.003133645.1.Bacteria.Acidobacteriota_PKYI01000067.1_8          59.74%    passed     29.00%
 155  GCA.002085385.1.Bacteria.UBP14_NATO01000103.1_5                    22.08%    passed     46.59%
 156  GCA.003194435.1.Archaea.Halobacteriota_PQXC01000012.1_19           25.32%    passed     95.35%
 157  GCA.001302825.1.Bacteria.Planctomycetota_LIZR01000006.1_24          1.30%    passed     10.74%
 158  GCA.001829315.1.Bacteria.Spirochaetota_MIAY01000001.1_136          23.38%    passed     20.14%
 159  GCA.001513495.1.Bacteria.Firmicutes.G_LFTN01000177.1_5              1.30%    passed     30.61%
 160  GCA.003451585.1.Bacteria.Omnitrophota_DMEU01000010.1_6             36.36%    passed     83.41%
 161  GCA.001513545.1.Bacteria.Firmicutes.B_LFTQ01000144.1_25            13.64%    passed     63.14%
 162  GCA.003133645.1.Bacteria.Acidobacteriota_PKYI01000067.1_17         13.64%    failed      0.56%
 163  GCF.002257705.1.Bacteria.Firmicutes.C_NZ_LSLK01000070.1_234        18.18%    passed     61.06%
 164  GCF.000177635.2.Bacteria.Chrysiogenota_NC_014836.1_2598            33.77%    passed     77.84%
 165  GCA.002352365.1.Bacteria.Chloroflexota_DEIJ01000057.1_2             3.90%    passed     15.07%
 166  GCA.003454665.1.Bacteria.Nitrospirota_DMKB01000172.1_14            41.56%    passed     90.35%
 167  GCA.002345475.1.Bacteria.Firmicutes.H_DDWC01000111.1_5             13.64%    passed     75.27%
 168  GCA.001940755.1.Archaea.Asgardarchaeota_MEHH01000087.1_10          36.36%    passed     14.68%
 169  GCA.000739515.1.Bacteria.Moduliflexota_DF820455.1_1197              1.30%    passed     30.62%
 170  GCF.900142995.1.Bacteria.Firmicutes.A_NZ_FRCR01000013.1_16         22.73%    passed     73.41%
 171  GCA.002011395.1.Archaea.Thermoplasmatota_MTNG01000129.1_9          40.26%    passed     43.69%
 172  GCF.001886815.1.Bacteria.Calditrichota_NZ_CP018099.1_1829           9.74%    passed     23.17%
 173  GCA.001799195.1.Bacteria.Bdellovibrionota_MGSU01000124.1_15         8.44%    passed     57.26%
 174  GCF.900100785.1.Bacteria.Firmicutes.B_NZ_FNCP01000026.1_24          5.84%    passed     65.14%
 175  GCF.000195295.1.Bacteria.Desulfobacterota_NC_015388.1_274          28.57%    passed     23.19%
 176  GCF.000021725.1.Bacteria.Campylobacterota_NC_012115.1_767          42.21%    passed     32.58%
 177  GCF.000487995.1.Bacteria.Deferribacterota_NZ_KI530573.1_479        25.97%    passed     14.60%
 178  GCA.001412335.1.Archaea.Halobacteriota_LKUF01000124.1_2            26.62%    passed     92.12%
 179  GCA.002408345.1.Bacteria.Firmicutes.G_DHRX01000071.1_6             32.47%    passed     57.21%
 180  GCA.002396805.1.Bacteria.Firmicutes.G_DGYW01000058.1_25            24.68%    passed     65.34%
 181  GCA.000987045.1.Bacteria.Firmicutes.B_LAKY01000063.1_96            13.64%    passed     94.30%
 182  GCA.001783275.1.Bacteria.Margulisbacteria_MFRH01000050.1_21        40.26%    passed     10.86%
 183  GCA.000353875.1.Bacteria.Atribacterota_APKF01000120.1_2            24.68%    passed     67.41%
 184  GCA.003170085.1.Bacteria.Planctomycetota_PMZT01000246.1_3          35.06%    passed     66.83%
 185  GCA.001717025.1.Archaea.Thermoproteota_MAGU01000034.1_16           41.56%    passed     38.49%
 186  GCF.000526155.1.Bacteria.Desulfobacterota_NZ_JAFN01000001.1_2327   28.57%    passed      6.73%
 187  GCA.002347095.1.Bacteria.Desulfobacterota_DDWZ01000004.1_45        34.42%    passed     59.19%
 188  GCA.001302725.1.Bacteria.Zixibacteria_LIZU01000045.1_6              1.95%    passed      9.15%
 189  GCA.002011165.1.Archaea.Halobacteriota_MTMI01000018.1_19           37.01%    passed     35.24%
 190  GCF.000970205.1.Archaea.Halobacteriota_NZ_CP009512.1_3413          13.64%    passed     90.61%
 191  GCF.000011005.1.Archaea.Euryarchaeota_NC_013665.1_532               2.60%    passed     40.37%
 192  GCA.001780825.1.Bacteria.Gemmatimonadota_MFIX01000082.1_7           1.30%    passed     48.30%
 193  GCA.003245715.1.Bacteria.Planctomycetota_QKCJ01000005.1_104        15.58%    passed     61.28%
 194  GCA.002385465.1.Bacteria.Firmicutes.E_DGDN01000118.1_37             1.30%    passed     99.17%
 195  GCF.000758165.1.Bacteria.Spirochaetota_NZ_JNUP01000064.1_218       44.81%    passed      5.01%
 196  GCF.002252565.1.Bacteria.Firmicutes.A_NZ_NPML01000018.1_222         6.49%    passed     44.91%
 197  GCA.002366545.1.Bacteria.Actinobacteriota_DFBH01000032.1_14         1.30%    passed     99.48%
 198  GCA.001563325.1.Archaea.Asgardarchaeota_LRSK01000003.1_18          42.21%    passed     93.50%
 199  GCA.000961655.1.Bacteria.Desulfobacterota_LADR01000010.1_94        21.43%    passed     33.98%
 200  GCA.000999095.1.Bacteria.Patescibacteria_LCFP01000008.1_62         39.61%    passed     66.47%
 201  GCA.001800495.1.Bacteria.Elusimicrobiota_MGVM01000041.1_16         29.22%    passed     85.52%
 202  GCA.002366725.1.Bacteria.WOR.3_DFBT01000063.1_2                    11.69%    passed     96.96%
 203  GCA.002084955.1.Bacteria.Patescibacteria_MZGJ01000012.1_20         14.29%    passed     32.05%
 204  GCA.001873285.1.Bacteria.CG2.30.53.67_MNYV01000127.1_2             51.30%    passed     61.80%
 205  GCA.001742785.1.Archaea.Altiarchaeota_MCBF01000001.1_729           37.66%    passed     70.46%
 206  GCA.002441125.1.Bacteria.WOR.3_DJVI01000033.1_25                   25.32%    passed     54.38%
 207  GCA.003133645.1.Bacteria.Acidobacteriota_PKYI01000094.1_20          4.55%    failed      4.45%
 208  GCF.002252565.1.Bacteria.Firmicutes.A_NZ_NPML01000002.1_159         2.60%    failed      0.71%
 209  GCA.002011355.1.Archaea.Thermoplasmatota_MTNE01000201.1_3          64.94%    failed      0.00%
 210  GCA.002792135.1.Bacteria.Patescibacteria_PFNU01000029.1_1          55.19%    failed      2.73%
 211  GCA.002298155.1.Bacteria.Acidobacteriota_DBME01000464.1_9          40.26%    passed     12.07%
 212  GCF.000194625.1.Archaea.Halobacteriota_NC_015320.1_454             11.04%    passed     40.48%
 213  GCF.002214485.1.Archaea.Methanobacteriota.B_NZ_CP015102.1_1689     32.47%    passed     84.07%
 214  GCA.002789635.1.Archaea.Aenigmatarchaeota_PFTQ01000012.1_13        34.42%    passed     91.26%
 215  GCA.003105265.1.Bacteria.Zixibacteria_PQAP01000026.1_6              1.30%    passed     94.30%
 216  GCA.002347295.1.Bacteria.Chloroflexota_DDXZ01000070.1_19            3.25%    passed     84.62%
 217  GCA.002796125.1.Bacteria.Omnitrophota_PCWA01000035.1_61            18.83%    passed      5.99%
WARNING: 20 sequences contain more than 50% gaps/ambiguity
****  TOTAL                                                              24.79%  30 sequences failed composition chi2 test (p-value<5%; df=19)
NOTE: GCA.002366725.1.Bacteria.WOR.3_DFBT01000063.1_2 is identical to GCA.002215665.1.Bacteria.WOR.3_NGFL01000007.1_2 but kept for subsequent analysis
Checking for duplicate sequences: done in 0.00121769 secs using 3043% CPU


Create initial parsimony tree by phylogenetic likelihood library (PLL)... 0.107 seconds
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
Perform fast likelihood tree search using LG+G model...
Estimate model parameters (epsilon = 5.000)
Perform nearest neighbor interchange...
Optimizing NNI: done in 2.17851 secs using 994.9% CPU
Estimate model parameters (epsilon = 1.000)
1. Initial log-likelihood: -41117.740
Optimal log-likelihood: -41116.579
Gamma shape alpha: 0.836
Parameters optimization took 1 rounds (0.151 sec)
Time for fast ML tree search: 2.844 seconds

NOTE: ModelFinder requires 59 MB RAM!
ModelFinder will test up to 743 protein models (sample size: 154) ...
 No. Model         -LnL         df  AIC          AICc         BIC
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  1  LG            43987.423    431 88836.846    461220.846   90145.773
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  2  LG+I          43987.406    432 88838.811    462950.811   90150.775
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  3  LG+G4         41116.415    432 83096.829    457208.829   84408.793
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  4  LG+I+G4       41116.404    433 83098.807    458942.807   84413.808
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  5  LG+R2         41657.876    433 84181.752    460025.752   85496.753
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  6  LG+R3         41300.473    435 83470.945    462790.945   84792.019
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  7  LG+R4         41084.298    437 83042.596    465854.596   84369.744
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  8  LG+R5         41038.967    439 82955.934    469275.934   84289.156
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  9  LG+R6         41018.563    441 82919.126    472763.126   84258.422
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 10  LG+R7         41004.959    443 82895.918    476279.918   84241.288
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 11  LG+R8         40984.659    445 82859.319    479799.319   84210.763
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 12  LG+R9         40983.503    447 82861.006    483373.006   84218.524
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 14  LG+F          43782.255    450 88464.511    494364.511   89831.140
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 15  LG+F+I        43782.252    451 88466.504    496170.504   89836.170
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 16  LG+F+G4       40962.147    451 82826.293    490530.293   84195.959
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 17  LG+F+I+G4     40963.347    452 82830.695    492342.695   84203.397
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 18  LG+F+R2       41482.387    452 83868.774    493380.774   85241.477
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 19  LG+F+R3       41150.675    454 83209.350    496349.350   84588.126
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 20  LG+F+R4       40925.574    456 82763.147    499547.147   84147.998
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 21  LG+F+R5       40890.410    458 82696.819    503140.819   84087.743
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 22  LG+F+R6       40865.953    460 82651.907    506771.907   84048.905
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 23  LG+F+R7       40855.738    462 82635.476    510447.476   84038.549
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 24  LG+F+R8       40835.355    464 82598.710    514118.710   84007.856
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 25  LG+F+R9       40830.868    466 82593.735    517837.735   84008.955
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 27  WAG           43556.479    431 87974.958    460358.958   89283.885
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 28  WAG+I         43556.476    432 87976.951    462088.951   89288.915
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 29  WAG+G4        41063.369    432 82990.739    457102.739   84302.702
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 30  WAG+I+G4      41063.369    433 82992.739    458836.739   84307.739
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 31  WAG+R2        41623.003    433 84112.006    459956.006   85427.007
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 32  WAG+R3        41226.149    435 83322.298    462642.298   84643.373
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 33  WAG+R4        41029.346    437 82932.692    465744.692   84259.840
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 34  WAG+R5        40988.542    439 82855.084    469175.084   84188.306
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 35  WAG+R6        40972.791    441 82827.581    472671.581   84166.877
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 36  WAG+R7        40968.411    443 82822.823    476206.823   84168.193
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 40  WAG+F         43397.892    450 87695.784    493595.784   89062.413
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 41  WAG+F+I       43397.885    451 87697.771    495401.771   89067.436
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 42  WAG+F+G4      40866.551    451 82635.101    490339.101   84004.767
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 43  WAG+F+I+G4    40866.555    452 82637.110    492149.110   84009.812
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 44  WAG+F+R2      41424.282    452 83752.565    493264.565   85125.268
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 45  WAG+F+R3      41066.317    454 83040.634    496180.634   84419.411
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 46  WAG+F+R4      40840.124    456 82592.249    499376.249   83977.099
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 47  WAG+F+R5      40798.420    458 82512.839    502956.839   83903.763
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 48  WAG+F+R6      40786.756    460 82493.511    506613.511   83890.510
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 49  WAG+F+R7      40762.614    462 82449.229    510261.229   83852.301
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 50  WAG+F+R8      40759.428    464 82446.856    513966.856   83856.002
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 53  JTT           43798.639    431 88459.279    460843.279   89768.205
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 54  JTT+I         43798.636    432 88461.272    462573.272   89773.236
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 55  JTT+G4        41069.715    432 83003.431    457115.431   84315.394
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 56  JTT+I+G4      41069.720    433 83005.439    458849.439   84320.440
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 57  JTT+R2        41625.170    433 84116.340    459960.340   85431.341
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 58  JTT+R3        41282.927    435 83435.854    462755.854   84756.929
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 59  JTT+R4        41037.353    437 82948.705    465760.705   84275.854
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 60  JTT+R5        40995.137    439 82868.274    469188.274   84201.496
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 61  JTT+R6        40979.225    441 82840.450    472684.450   84179.746
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 62  JTT+R7        40963.255    443 82812.510    476196.510   84157.880
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 63  JTT+R8        40956.992    445 82803.984    479743.984   84155.428
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
WARNING: Log-likelihood -40960.5 of JTT+R9 worse than JTT+R8 -40957
 64  JTT+R9        40960.495    447 82814.989    483326.989   84172.507
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 66  JTT+F         43689.324    450 88278.648    494178.648   89645.276
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 67  JTT+F+I       43689.318    451 88280.636    495984.636   89650.301
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 68  JTT+F+G4      40995.546    451 82893.092    490597.092   84262.757
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 69  JTT+F+I+G4    40995.549    452 82895.097    492407.097   84267.800
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 70  JTT+F+R2      41548.987    452 84001.974    493513.974   85374.677
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 71  JTT+F+R3      41228.061    454 83364.121    496504.121   84742.898
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 72  JTT+F+R4      40965.994    456 82843.989    499627.989   84228.839
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 73  JTT+F+R5      40935.753    458 82787.506    503231.506   84178.430
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 74  JTT+F+R6      40925.340    460 82770.680    506890.680   84167.678
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 75  JTT+F+R7      40902.145    462 82728.289    510540.289   84131.361
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 76  JTT+F+R8      40895.571    464 82719.143    514239.143   84128.289
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
WARNING: Log-likelihood -40897 of JTT+F+R9 worse than JTT+F+R8 -40895.6
 77  JTT+F+R9      40896.972    466 82725.944    517969.944   84141.164
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 79  Q.pfam        43916.114    431 88694.229    461078.229   90003.155
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 80  Q.pfam+I      43916.098    432 88696.196    462808.196   90008.159
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 81  Q.pfam+G4     41100.767    432 83065.533    457177.533   84377.497
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 82  Q.pfam+I+G4   41100.767    433 83067.534    458911.534   84382.535
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 83  Q.pfam+R2     41605.290    433 84076.580    459920.580   85391.580
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 84  Q.pfam+R3     41275.461    435 83420.921    462740.921   84741.996
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 85  Q.pfam+R4     41065.299    437 83004.599    465816.599   84331.747
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 86  Q.pfam+R5     41016.648    439 82911.295    469231.295   84244.517
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 87  Q.pfam+R6     40993.542    441 82869.083    472713.083   84208.379
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 88  Q.pfam+R7     40970.245    443 82826.490    476210.490   84171.860
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 89  Q.pfam+R8     40961.243    445 82812.487    479752.487   84163.931
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 90  Q.pfam+R9     40959.660    447 82813.321    483325.321   84170.839
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 92  Q.pfam+F      43706.919    450 88313.837    494213.837   89680.466
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 93  Q.pfam+F+I    43706.916    451 88315.832    496019.832   89685.497
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 94  Q.pfam+F+G4   40925.317    451 82752.633    490456.633   84122.299
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 95  Q.pfam+F+I+G4 40925.310    452 82754.621    492266.621   84127.324
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 96  Q.pfam+F+R2   41402.962    452 83709.925    493221.925   85082.627
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 97  Q.pfam+F+R3   41097.880    454 83103.761    496243.761   84482.537
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 98  Q.pfam+F+R4   40883.268    456 82678.535    499462.535   84063.386
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 99  Q.pfam+F+R5   40849.043    458 82614.087    503058.087   84005.011
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
100  Q.pfam+F+R6   40824.306    460 82568.612    506688.612   83965.610
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
101  Q.pfam+F+R7   40804.625    462 82533.249    510345.249   83936.321
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
102  Q.pfam+F+R8   40790.002    464 82508.004    514028.004   83917.150
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
103  Q.pfam+F+R9   40789.696    466 82511.392    517755.392   83926.612
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
105  Q.bird        45124.319    431 91110.638    463494.638   92419.565
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
106  Q.bird+I      45124.305    432 91112.610    465224.610   92424.573
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
107  Q.bird+G4     41778.635    432 84421.270    458533.270   85733.233
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
108  Q.bird+I+G4   41778.631    433 84423.262    460267.262   85738.262
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
109  Q.bird+R2     42333.982    433 85533.964    461377.964   86848.964
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
110  Q.bird+R3     42007.965    435 84885.930    464205.930   86207.004
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
111  Q.bird+R4     41734.358    437 84342.716    467154.716   85669.864
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
112  Q.bird+R5     41695.690    439 84269.379    470589.379   85602.601
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
113  Q.bird+R6     41660.072    441 84202.145    474046.145   85541.441
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
114  Q.bird+R7     41641.792    443 84169.583    477553.583   85514.953
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
115  Q.bird+R8     41627.886    445 84145.773    481085.773   85497.217
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
WARNING: Log-likelihood -41631.7 of Q.bird+R9 worse than Q.bird+R8 -41627.9
116  Q.bird+R9     41631.673    447 84157.345    484669.345   85514.863
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
118  Q.bird+F      45008.411    450 90916.821    496816.821   92283.450
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
119  Q.bird+F+I    45008.394    451 90918.789    498622.789   92288.454
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
120  Q.bird+F+G4   41733.031    451 84368.062    492072.062   85737.728
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
121  Q.bird+F+I+G4 41733.022    452 84370.045    493882.045   85742.748
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
122  Q.bird+F+R2   42296.658    452 85497.316    495009.316   86870.019
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
123  Q.bird+F+R3   41954.545    454 84817.090    497957.090   86195.867
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
124  Q.bird+F+R4   41690.027    456 84292.055    501076.055   85676.905
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
125  Q.bird+F+R5   41646.131    458 84208.261    504652.261   85599.185
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
126  Q.bird+F+R6   41620.785    460 84161.571    508281.571   85558.569
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
127  Q.bird+F+R7   41603.530    462 84131.060    511943.060   85534.132
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
128  Q.bird+F+R8   41590.187    464 84108.374    515628.374   85517.520
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
129  Q.bird+F+R9   41589.665    466 84111.330    519355.330   85526.550
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
131  Q.mammal      44639.855    431 90141.709    462525.709   91450.636
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
132  Q.mammal+I    44639.836    432 90143.672    464255.672   91455.635
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
133  Q.mammal+G4   41516.149    432 83896.298    458008.298   85208.261
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
134  Q.mammal+I+G4 41516.157    433 83898.314    459742.314   85213.315
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
135  Q.mammal+R2   42030.478    433 84926.956    460770.956   86241.956
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
136  Q.mammal+R3   41721.435    435 84312.870    463632.870   85633.944
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
137  Q.mammal+R4   41470.656    437 83815.311    466627.311   85142.460
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
138  Q.mammal+R5   41436.363    439 83750.725    470070.725   85083.947
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
139  Q.mammal+R6   41403.961    441 83689.922    473533.922   85029.218
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
140  Q.mammal+R7   41387.090    443 83660.180    477044.180   85005.550
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
141  Q.mammal+R8   41372.222    445 83634.444    480574.444   84985.888
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
142  Q.mammal+R9   41372.652    447 83639.305    484151.305   84996.823
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
144  Q.mammal+F    44461.625    450 89823.249    495723.249   91189.878
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
145  Q.mammal+F+I  44461.608    451 89825.216    497529.216   91194.881
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
146  Q.mammal+F+G4 41414.387    451 83730.774    491434.774   85100.440
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
147  Q.mammal+F+I+G4 41414.382    452 83732.765    493244.765   85105.467
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
148  Q.mammal+F+R2 41936.715    452 84777.430    494289.430   86150.133
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
149  Q.mammal+F+R3 41611.929    454 84131.857    497271.857   85510.634
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
150  Q.mammal+F+R4 41368.080    456 83648.159    500432.159   85033.009
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
151  Q.mammal+F+R5 41325.470    458 83566.940    504010.940   84957.864
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
152  Q.mammal+F+R6 41303.875    460 83527.751    507647.751   84924.749
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
153  Q.mammal+F+R7 41289.761    462 83503.523    511315.523   84906.595
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
154  Q.mammal+F+R8 41273.475    464 83474.951    514994.951   84884.097
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
WARNING: Log-likelihood -41277.6 of Q.mammal+F+R9 worse than Q.mammal+F+R8 -41273.5
155  Q.mammal+F+R9 41277.609    466 83487.217    518731.217   84902.437
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
157  Q.insect      44227.771    431 89317.542    461701.542   90626.468
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
158  Q.insect+I    44227.758    432 89319.516    463431.516   90631.480
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
159  Q.insect+G4   41256.452    432 83376.904    457488.904   84688.868
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
160  Q.insect+I+G4 41256.449    433 83378.898    459222.898   84693.898
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
161  Q.insect+R2   41779.078    433 84424.155    460268.155   85739.156
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
162  Q.insect+R3   41438.803    435 83747.606    463067.606   85068.680
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
163  Q.insect+R4   41221.087    437 83316.174    466128.174   84643.322
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
164  Q.insect+R5   41190.359    439 83258.718    469578.718   84591.941
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
165  Q.insect+R6   41174.293    441 83230.586    473074.586   84569.882
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
166  Q.insect+R7   41146.089    443 83178.177    476562.177   84523.547
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
167  Q.insect+R8   41133.140    445 83156.279    480096.279   84507.723
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
168  Q.insect+R9   41134.012    447 83162.024    483674.024   84519.542
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
170  Q.insect+F    43808.765    450 88517.531    494417.531   89884.159
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
171  Q.insect+F+I  43808.762    451 88519.524    496223.524   89889.189
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
172  Q.insect+F+G4 40970.505    451 82843.010    490547.010   84212.675
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
173  Q.insect+F+I+G4 40970.502    452 82845.004    492357.004   84217.707
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
174  Q.insect+F+R2 41485.012    452 83874.024    493386.024   85246.727
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
175  Q.insect+F+R3 41160.598    454 83229.196    496369.196   84607.972
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
176  Q.insect+F+R4 40937.644    456 82787.288    499571.288   84172.138
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
177  Q.insect+F+R5 40899.857    458 82715.714    503159.714   84106.638
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
178  Q.insect+F+R6 40887.737    460 82695.475    506815.475   84092.473
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
179  Q.insect+F+R7 40857.746    462 82639.491    510451.491   84042.563
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
180  Q.insect+F+R8 40846.839    464 82621.677    514141.677   84030.823
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
181  Q.insect+F+R9 40847.282    466 82626.565    517870.565   84041.785
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
183  Q.plant       44739.991    431 90341.981    462725.981   91650.908
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
184  Q.plant+I     44739.983    432 90343.966    464455.966   91655.930
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
185  Q.plant+G4    41495.234    432 83854.469    457966.469   85166.432
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
186  Q.plant+I+G4  41495.227    433 83856.453    459700.453   85171.454
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
187  Q.plant+R2    42071.274    433 85008.548    460852.548   86323.549
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
188  Q.plant+R3    41689.371    435 84248.742    463568.742   85569.816
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
189  Q.plant+R4    41462.830    437 83799.660    466611.660   85126.808
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
190  Q.plant+R5    41414.520    439 83707.041    470027.041   85040.263
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
191  Q.plant+R6    41384.055    441 83650.111    473494.111   84989.407
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
192  Q.plant+R7    41371.315    443 83628.629    477012.629   84973.999
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
193  Q.plant+R8    41351.508    445 83593.016    480533.016   84944.460
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
194  Q.plant+R9    41349.484    447 83592.968    484104.968   84950.486
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
196  Q.plant+F     44402.390    450 89704.781    495604.781   91071.409
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
197  Q.plant+F+I   44402.378    451 89706.755    497410.755   91076.421
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
198  Q.plant+F+G4  41285.009    451 83472.018    491176.018   84841.684
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
199  Q.plant+F+I+G4 41285.009    452 83474.017    492986.017   84846.720
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
200  Q.plant+F+R2  41851.510    452 84607.020    494119.020   85979.722
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
201  Q.plant+F+R3  41496.229    454 83900.458    497040.458   85279.234
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
202  Q.plant+F+R4  41251.586    456 83415.171    500199.171   84800.022
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
203  Q.plant+F+R5  41207.021    458 83330.042    503774.042   84720.967
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
204  Q.plant+F+R6  41189.536    460 83299.072    507419.072   84696.070
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
205  Q.plant+F+R7  41165.046    462 83254.092    511066.092   84657.164
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
206  Q.plant+F+R8  41151.657    464 83231.314    514751.314   84640.460
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
207  Q.plant+F+R9  41151.415    466 83234.830    518478.830   84650.049
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
209  Q.yeast       44565.600    431 89993.201    462377.201   91302.127
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
210  Q.yeast+I     44565.588    432 89995.175    464107.175   91307.139
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
211  Q.yeast+G4    41522.093    432 83908.186    458020.186   85220.150
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
212  Q.yeast+I+G4  41522.098    433 83910.196    459754.196   85225.196
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
213  Q.yeast+R2    42076.514    433 85019.028    460863.028   86334.029
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
214  Q.yeast+R3    41721.727    435 84313.454    463633.454   85634.528
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
215  Q.yeast+R4    41495.361    437 83864.722    466676.722   85191.870
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
216  Q.yeast+R5    41453.858    439 83785.716    470105.716   85118.938
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
217  Q.yeast+R6    41434.966    441 83751.933    473595.933   85091.229
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
218  Q.yeast+R7    41411.241    443 83708.482    477092.482   85053.852
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
219  Q.yeast+R8    41404.970    445 83699.939    480639.939   85051.383
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
220  Q.yeast+R9    41405.018    447 83704.035    484216.035   85061.553
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
222  Q.yeast+F     43979.851    450 88859.703    494759.703   90226.332
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
223  Q.yeast+F+I   43979.849    451 88861.697    496565.697   90231.363
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
224  Q.yeast+F+G4  41036.575    451 82975.149    490679.149   84344.815
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
225  Q.yeast+F+I+G4 41036.578    452 82977.157    492489.157   84349.859
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
226  Q.yeast+F+R2  41561.587    452 84027.173    493539.173   85399.876
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
227  Q.yeast+F+R3  41243.527    454 83395.054    496535.054   84773.831
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
228  Q.yeast+F+R4  41004.257    456 82920.514    499704.514   84305.364
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
229  Q.yeast+F+R5  40971.500    458 82858.999    503302.999   84249.923
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
230  Q.yeast+F+R6  40954.885    460 82829.770    506949.770   84226.768
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
231  Q.yeast+F+R7  40934.422    462 82792.845    510604.845   84195.917
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
232  Q.yeast+F+R8  40920.840    464 82769.680    514289.680   84178.826
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
233  Q.yeast+F+R9  40918.803    466 82769.606    518013.606   84184.826
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
235  JTTDCMut      43800.708    431 88463.417    460847.417   89772.343
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
236  JTTDCMut+I    43800.705    432 88465.411    462577.411   89777.374
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
237  JTTDCMut+G4   41077.993    432 83019.985    457131.985   84331.949
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
238  JTTDCMut+I+G4 41077.997    433 83021.994    458865.994   84336.994
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
239  JTTDCMut+R2   41639.283    433 84144.566    459988.566   85459.566
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
240  JTTDCMut+R3   41290.117    435 83450.233    462770.233   84771.307
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
241  JTTDCMut+R4   41046.941    437 82967.882    465779.882   84295.031
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
242  JTTDCMut+R5   41003.173    439 82884.345    469204.345   84217.567
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
243  JTTDCMut+R6   40986.918    441 82855.835    472699.835   84195.132
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
244  JTTDCMut+R7   40971.721    443 82829.441    476213.441   84174.811
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
245  JTTDCMut+R8   40965.290    445 82820.581    479760.581   84172.025
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
WARNING: Log-likelihood -40968.4 of JTTDCMut+R9 worse than JTTDCMut+R8 -40965.3
246  JTTDCMut+R9   40968.372    447 82830.744    483342.744   84188.262
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
248  JTTDCMut+F    43685.003    450 88270.007    494170.007   89636.635
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
249  JTTDCMut+F+I  43684.999    451 88271.998    495975.998   89641.663
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
250  JTTDCMut+F+G4 40995.487    451 82892.975    490596.975   84262.641
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
251  JTTDCMut+F+I+G4 40995.487    452 82894.975    492406.975   84267.677
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
252  JTTDCMut+F+R2 41555.081    452 84014.162    493526.162   85386.865
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
253  JTTDCMut+F+R3 41227.457    454 83362.914    496502.914   84741.691
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
254  JTTDCMut+F+R4 40967.528    456 82847.056    499631.056   84231.907
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
255  JTTDCMut+F+R5 40935.095    458 82786.189    503230.189   84177.113
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
256  JTTDCMut+F+R6 40923.480    460 82766.961    506886.961   84163.959
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
257  JTTDCMut+F+R7 40901.079    462 82726.158    510538.158   84129.230
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
258  JTTDCMut+F+R8 40894.288    464 82716.577    514236.577   84125.723
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
WARNING: Log-likelihood -40895.3 of JTTDCMut+F+R9 worse than JTTDCMut+F+R8 -40894.3
259  JTTDCMut+F+R9 40895.347    466 82722.695    517966.695   84137.915
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
261  DCMut         44448.329    431 89758.658    462142.658   91067.585
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
262  DCMut+I       44448.319    432 89760.639    463872.639   91072.602
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
263  DCMut+G4      41616.160    432 84096.320    458208.320   85408.284
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
264  DCMut+I+G4    41616.164    433 84098.328    459942.328   85413.329
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
265  DCMut+R2      42283.392    433 85432.784    461276.784   86747.784
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
266  DCMut+R3      41777.411    435 84424.823    463744.823   85745.897
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
267  DCMut+R4      41594.737    437 84063.474    466875.474   85390.623
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
268  DCMut+R5      41537.887    439 83953.773    470273.773   85286.995
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
269  DCMut+R6      41501.846    441 83885.693    473729.693   85224.989
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
270  DCMut+R7      41486.742    443 83859.483    477243.483   85204.854
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
271  DCMut+R8      41479.990    445 83849.979    480789.979   85201.423
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
272  DCMut+R9      41480.346    447 83854.691    484366.691   85212.209
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
274  DCMut+F       44064.590    450 89029.180    494929.180   90395.808
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
275  DCMut+F+I     44064.586    451 89031.172    496735.172   90400.837
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
276  DCMut+F+G4    41267.187    451 83436.374    491140.374   84806.040
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
277  DCMut+F+I+G4  41265.469    452 83434.938    492946.938   84807.641
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
278  DCMut+F+R2    41907.200    452 84718.400    494230.400   86091.103
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
279  DCMut+F+R3    41455.469    454 83818.937    496958.937   85197.714
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
280  DCMut+F+R4    41247.955    456 83407.911    500191.911   84792.761
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
281  DCMut+F+R5    41192.129    458 83300.259    503744.259   84691.183
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
282  DCMut+F+R6    41172.632    460 83265.263    507385.263   84662.262
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
283  DCMut+F+R7    41145.164    462 83214.328    511026.328   84617.400
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
284  DCMut+F+R8    41137.102    464 83202.204    514722.204   84611.350
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
WARNING: Log-likelihood -41138.1 of DCMut+F+R9 worse than DCMut+F+R8 -41137.1
285  DCMut+F+R9    41138.150    466 83208.299    518452.299   84623.519
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
287  VT            43355.267    431 87572.533    459956.533   88881.460
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
288  VT+I          43355.246    432 87574.491    461686.491   88886.455
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
289  VT+G4         40971.895    432 82807.789    456919.789   84119.753
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
290  VT+I+G4       40971.892    433 82809.785    458653.785   84124.785
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
291  VT+R2         41452.197    433 83770.395    459614.395   85085.395
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
292  VT+R3         41148.939    435 83167.877    462487.877   84488.952
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
293  VT+R4         40934.346    437 82742.692    465554.692   84069.840
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
294  VT+R5         40890.024    439 82658.049    468978.049   83991.271
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
295  VT+R6         40878.358    441 82638.717    472482.717   83978.013
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
296  VT+R7         40857.932    443 82601.865    475985.865   83947.235
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
297  VT+R8         40854.789    445 82599.577    479539.577   83951.021
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
300  VT+F          43209.898    450 87319.796    493219.796   88686.424
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
301  VT+F+I        43209.894    451 87321.787    495025.787   88691.453
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
302  VT+F+G4       40842.067    451 82586.133    490290.133   83955.799
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
303  VT+F+I+G4     40842.066    452 82588.132    492100.132   83960.835
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
304  VT+F+R2       41314.879    452 83533.758    493045.758   84906.460
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
305  VT+F+R3       41032.604    454 82973.208    496113.208   84351.985
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
306  VT+F+R4       40807.959    456 82527.918    499311.918   83912.768
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
307  VT+F+R5       40772.128    458 82460.255    502904.255   83851.180
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
308  VT+F+R6       40761.314    460 82442.627    506562.627   83839.626
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
309  VT+F+R7       40743.021    462 82410.041    510222.041   83813.113
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
310  VT+F+R8       40739.418    464 82406.837    513926.837   83815.983
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
313  PMB           43363.486    431 87588.973    459972.973   88897.899
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
314  PMB+I         43363.473    432 87590.946    461702.946   88902.909
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
315  PMB+G4        41035.263    432 82934.526    457046.526   84246.489
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
316  PMB+I+G4      41035.261    433 82936.522    458780.522   84251.522
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
317  PMB+R2        41506.365    433 83878.731    459722.731   85193.731
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
318  PMB+R3        41175.176    435 83220.353    462540.353   84541.427
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
319  PMB+R4        40999.720    437 82873.439    465685.439   84200.587
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
320  PMB+R5        40942.276    439 82762.552    469082.552   84095.775
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
321  PMB+R6        40933.208    441 82748.415    472592.415   84087.711
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
322  PMB+R7        40913.357    443 82712.713    476096.713   84058.083
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
323  PMB+R8        40908.361    445 82706.722    479646.722   84058.166
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
326  PMB+F         43350.857    450 87601.714    493501.714   88968.343
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
327  PMB+F+I       43350.845    451 87603.690    495307.690   88973.356
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
328  PMB+F+G4      41015.377    451 82932.753    490636.753   84302.419
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
329  PMB+F+I+G4    41015.390    452 82934.779    492446.779   84307.482
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
330  PMB+F+R2      41505.011    452 83914.023    493426.023   85286.725
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
331  PMB+F+R3      41175.570    454 83259.141    496399.141   84637.917
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
332  PMB+F+R4      40984.658    456 82881.317    499665.317   84266.167
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
333  PMB+F+R5      40933.902    458 82783.805    503227.805   84174.729
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
334  PMB+F+R6      40921.259    460 82762.518    506882.518   84159.516
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
335  PMB+F+R7      40901.203    462 82726.406    510538.406   84129.478
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
336  PMB+F+R8      40898.822    464 82725.644    514245.644   84134.790
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
339  Blosum62      43498.357    431 87858.713    460242.713   89167.640
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
340  Blosum62+I    43498.347    432 87860.693    461972.693   89172.657
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
341  Blosum62+G4   41107.926    432 83079.851    457191.851   84391.815
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
342  Blosum62+I+G4 41107.924    433 83081.848    458925.848   84396.849
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
343  Blosum62+R2   41609.202    433 84084.403    459928.403   85399.404
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
344  Blosum62+R3   41260.287    435 83390.574    462710.574   84711.648
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
345  Blosum62+R4   41075.135    437 83024.270    465836.270   84351.418
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
346  Blosum62+R5   41024.347    439 82926.695    469246.695   84259.917
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
347  Blosum62+R6   41008.650    441 82899.301    472743.301   84238.597
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
348  Blosum62+R7   40991.947    443 82869.895    476253.895   84215.265
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
349  Blosum62+R8   40983.625    445 82857.249    479797.249   84208.693
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
350  Blosum62+R9   40984.078    447 82862.156    483374.156   84219.673
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
352  Blosum62+F    43498.558    450 87897.115    493797.115   89263.744
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
353  Blosum62+F+I  43498.536    451 87899.072    495603.072   89268.738
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
354  Blosum62+F+G4 41076.951    451 83055.902    490759.902   84425.568
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
355  Blosum62+F+I+G4 41076.952    452 83057.903    492569.903   84430.606
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
356  Blosum62+F+R2 41600.853    452 84105.707    493617.707   85478.409
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
357  Blosum62+F+R3 41269.845    454 83447.690    496587.690   84826.466
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
358  Blosum62+F+R4 41050.526    456 83013.052    499797.052   84397.902
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
359  Blosum62+F+R5 41002.710    458 82921.420    503365.420   84312.344
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
360  Blosum62+F+R6 40977.055    460 82874.110    506994.110   84271.108
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
361  Blosum62+F+R7 40968.190    462 82860.380    510672.380   84263.452
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
362  Blosum62+F+R8 40964.030    464 82856.061    514376.061   84265.207
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
365  Dayhoff       44453.666    431 89769.332    462153.332   91078.258
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
366  Dayhoff+I     44453.659    432 89771.317    463883.317   91083.281
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
367  Dayhoff+G4    41617.284    432 84098.569    458210.569   85410.532
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
368  Dayhoff+I+G4  41617.286    433 84100.573    459944.573   85415.573
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
369  Dayhoff+R2    42286.036    433 85438.072    461282.072   86753.072
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
370  Dayhoff+R3    41776.978    435 84423.956    463743.956   85745.030
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
371  Dayhoff+R4    41595.861    437 84065.723    466877.723   85392.871
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
372  Dayhoff+R5    41539.160    439 83956.319    470276.319   85289.541
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
373  Dayhoff+R6    41502.319    441 83886.638    473730.638   85225.935
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
374  Dayhoff+R7    41487.122    443 83860.245    477244.245   85205.615
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
375  Dayhoff+R8    41480.514    445 83851.028    480791.028   85202.472
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
376  Dayhoff+R9    41481.102    447 83856.204    484368.204   85213.722
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
378  Dayhoff+F     44070.935    450 89041.870    494941.870   90408.498
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
379  Dayhoff+F+I   44070.921    451 89043.842    496747.842   90413.508
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
380  Dayhoff+F+G4  41266.932    451 83435.863    491139.863   84805.529
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
381  Dayhoff+F+I+G4 41266.927    452 83437.854    492949.854   84810.557
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
382  Dayhoff+F+R2  41910.720    452 84725.440    494237.440   86098.143
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
383  Dayhoff+F+R3  41457.905    454 83823.810    496963.810   85202.586
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
384  Dayhoff+F+R4  41249.329    456 83410.658    500194.658   84795.509
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
385  Dayhoff+F+R5  41193.786    458 83303.573    503747.573   84694.497
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
386  Dayhoff+F+R6  41174.214    460 83268.428    507388.428   84665.427
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
387  Dayhoff+F+R7  41146.517    462 83217.034    511029.034   84620.106
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
388  Dayhoff+F+R8  41138.343    464 83204.687    514724.687   84613.833
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
389  Dayhoff+F+R9  41139.190    466 83210.380    518454.380   84625.600
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
391  mtREV         47605.577    431 96073.154    468457.154   97382.081
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
392  mtREV+I       47605.575    432 96075.150    470187.150   97387.114
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
393  mtREV+G4      43764.404    432 88392.807    462504.807   89704.771
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
394  mtREV+I+G4    43764.402    433 88394.804    464238.804   89709.805
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
395  mtREV+R2      44398.552    433 89663.104    465507.104   90978.104
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
396  mtREV+R3      43952.964    435 88775.928    468095.928   90097.002
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
397  mtREV+R4      43728.029    437 88330.059    471142.059   89657.207
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
398  mtREV+R5      43620.070    439 88118.139    474438.139   89451.361
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
399  mtREV+R6      43580.322    441 88042.644    477886.644   89381.941
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
400  mtREV+R7      43540.569    443 87967.139    481351.139   89312.509
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
401  mtREV+R8      43528.784    445 87947.567    484887.567   89299.011
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
402  mtREV+R9      43524.468    447 87942.936    488454.936   89300.454
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
404  mtREV+F       44655.594    450 90211.187    496111.187   91577.816
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
405  mtREV+F+I     44655.583    451 90213.165    497917.165   91582.831
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
406  mtREV+F+G4    41557.686    451 84017.372    491721.372   85387.038
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
407  mtREV+F+I+G4  41557.685    452 84019.370    493531.370   85392.072
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
408  mtREV+F+R2    42239.988    452 85383.977    494895.977   86756.679
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
409  mtREV+F+R3    41760.021    454 84428.042    497568.042   85806.819
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
410  mtREV+F+R4    41535.869    456 83983.738    500767.738   85368.588
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
411  mtREV+F+R5    41487.365    458 83890.730    504334.730   85281.654
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
412  mtREV+F+R6    41458.465    460 83836.929    507956.929   85233.928
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
413  mtREV+F+R7    41408.896    462 83741.793    511553.793   85144.865
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
414  mtREV+F+R8    41400.644    464 83729.287    515249.287   85138.433
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
415  mtREV+F+R9    41400.326    466 83732.652    518976.652   85147.872
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
417  mtART         49891.951    431 100645.902   473029.902   101954.829
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
418  mtART+I       49891.938    432 100647.876   474759.876   101959.839
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
419  mtART+G4      44594.809    432 90053.617    464165.617   91365.581
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
420  mtART+I+G4    44594.812    433 90055.625    465899.625   91370.625
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
421  mtART+R2      45669.880    433 92205.760    468049.760   93520.761
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
422  mtART+R3      45025.565    435 90921.130    470241.130   92242.204
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
423  mtART+R4      44587.859    437 90049.717    472861.717   91376.865
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
424  mtART+R5      44516.478    439 89910.955    476230.955   91244.177
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
425  mtART+R6      44494.603    441 89871.206    479715.206   91210.502
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
426  mtART+R7      44439.113    443 89764.226    483148.226   91109.596
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
427  mtART+R8      44416.564    445 89723.128    486663.128   91074.571
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
428  mtART+R9      44380.638    447 89655.276    490167.276   91012.794
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
429  mtART+R10     44349.053    449 89596.106    493696.106   90959.698
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
430  mtART+F       46428.788    450 93757.577    499657.577   95124.205
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
431  mtART+F+I     46428.785    451 93759.570    501463.570   95129.236
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
432  mtART+F+G4    42413.105    451 85728.211    493432.211   87097.876
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
433  mtART+F+I+G4  42387.168    452 85678.336    495190.336   87051.039
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
434  mtART+F+R2    43283.700    452 87471.400    496983.400   88844.102
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
435  mtART+F+R3    42635.265    454 86178.531    499318.531   87557.307
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
436  mtART+F+R4    42383.188    456 85678.376    502462.376   87063.226
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
437  mtART+F+R5    42288.307    458 85492.614    505936.614   86883.538
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
438  mtART+F+R6    42249.056    460 85418.113    509538.113   86815.111
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
439  mtART+F+R7    42188.067    462 85300.135    513112.135   86703.207
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
440  mtART+F+R8    42177.560    464 85283.120    516803.120   86692.266
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
441  mtART+F+R9    42152.087    466 85236.174    520480.174   86651.394
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
442  mtART+F+R10   42147.432    468 85230.863    524214.863   86652.157
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
443  mtZOA         47907.715    431 96677.430    469061.430   97986.356
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
444  mtZOA+I       47907.710    432 96679.420    470791.420   97991.384
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
445  mtZOA+G4      43329.631    432 87523.261    461635.261   88835.225
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
446  mtZOA+I+G4    43329.630    433 87525.261    463369.261   88840.261
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
447  mtZOA+R2      44176.804    433 89219.607    465063.607   90534.608
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
448  mtZOA+R3      43513.477    435 87896.954    467216.954   89218.028
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
449  mtZOA+R4      43309.647    437 87493.293    470305.293   88820.442
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
450  mtZOA+R5      43222.907    439 87323.815    473643.815   88657.037
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
451  mtZOA+R6      43194.125    441 87270.251    477114.251   88609.547
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
452  mtZOA+R7      43155.928    443 87197.856    480581.856   88543.226
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
453  mtZOA+R8      43143.443    445 87176.886    484116.886   88528.330
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
454  mtZOA+R9      43142.083    447 87178.165    487690.165   88535.683
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
456  mtZOA+F       45449.126    450 91798.251    497698.251   93164.880
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
457  mtZOA+F+I     45449.122    451 91800.245    499504.245   93169.910
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
458  mtZOA+F+G4    41880.202    451 84662.404    492366.404   86032.070
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
459  mtZOA+F+I+G4  41880.202    452 84664.404    494176.404   86037.106
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
460  mtZOA+F+R2    42584.844    452 86073.687    495585.687   87446.390
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
461  mtZOA+F+R3    42067.577    454 85043.155    498183.155   86421.931
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
462  mtZOA+F+R4    41851.357    456 84614.714    501398.714   85999.564
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
463  mtZOA+F+R5    41782.958    458 84481.916    504925.916   85872.840
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
464  mtZOA+F+R6    41739.716    460 84399.433    508519.433   85796.431
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
465  mtZOA+F+R7    41708.967    462 84341.934    512153.934   85745.006
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
466  mtZOA+F+R8    41694.908    464 84317.817    515837.817   85726.963
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
467  mtZOA+F+R9    41693.373    466 84318.746    519562.746   85733.966
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
469  mtMet         47652.446    431 96166.892    468550.892   97475.819
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
470  mtMet+I       47652.438    432 96168.877    470280.877   97480.840
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
471  mtMet+G4      43612.085    432 88088.171    462200.171   89400.134
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
472  mtMet+I+G4    43612.091    433 88090.181    463934.181   89405.182
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
473  mtMet+R2      44300.670    433 89467.340    465311.340   90782.341
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
474  mtMet+R3      43722.624    435 88315.249    467635.249   89636.323
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
475  mtMet+R4      43593.594    437 88061.189    470873.189   89388.337
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
476  mtMet+R5      43474.400    439 87826.800    474146.800   89160.022
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
477  mtMet+R6      43444.126    441 87770.252    477614.252   89109.548
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
478  mtMet+R7      43422.569    443 87731.139    481115.139   89076.509
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
479  mtMet+R8      43419.348    445 87728.697    484668.697   89080.141
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
482  mtMet+F       44821.788    450 90543.576    496443.576   91910.205
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
483  mtMet+F+I     44821.786    451 90545.572    498249.572   91915.237
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
484  mtMet+F+G4    41569.230    451 84040.460    491744.460   85410.126
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
485  mtMet+F+I+G4  41569.230    452 84042.460    493554.460   85415.163
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
486  mtMet+F+R2    42217.832    452 85339.664    494851.664   86712.367
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
487  mtMet+F+R3    41757.419    454 84422.838    497562.838   85801.614
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
488  mtMet+F+R4    41537.427    456 83986.855    500770.855   85371.705
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
489  mtMet+F+R5    41483.747    458 83883.494    504327.494   85274.418
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
490  mtMet+F+R6    41461.765    460 83843.531    507963.531   85240.529
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
491  mtMet+F+R7    41426.868    462 83777.735    511589.735   85180.808
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
492  mtMet+F+R8    41418.986    464 83765.973    515285.973   85175.119
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
493  mtMet+F+R9    41418.090    466 83768.180    519012.180   85183.400
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
495  mtVer         48340.254    431 97542.509    469926.509   98851.435
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
496  mtVer+I       48340.251    432 97544.502    471656.502   98856.465
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
497  mtVer+G4      43904.604    432 88673.208    462785.208   89985.171
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
498  mtVer+I+G4    43904.603    433 88675.207    464519.207   89990.207
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
499  mtVer+R2      44581.416    433 90028.832    465872.832   91343.833
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
500  mtVer+R3      44030.274    435 88930.548    468250.548   90251.623
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
501  mtVer+R4      43853.723    437 88581.446    471393.446   89908.594
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
502  mtVer+R5      43751.041    439 88380.082    474700.082   89713.305
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
503  mtVer+R6      43717.621    441 88317.242    478161.242   89656.538
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
504  mtVer+R7      43682.125    443 88250.250    481634.250   89595.620
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
505  mtVer+R8      43680.199    445 88250.397    485190.397   89601.841
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
508  mtVer+F       45443.666    450 91787.333    497687.333   93153.961
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
509  mtVer+F+I     45443.651    451 91789.301    499493.301   93158.967
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
510  mtVer+F+G4    42024.142    451 84950.284    492654.284   86319.950
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
511  mtVer+F+I+G4  42024.145    452 84952.290    494464.290   86324.993
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
512  mtVer+F+R2    42710.524    452 86325.048    495837.048   87697.750
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
513  mtVer+F+R3    42205.344    454 85318.688    498458.688   86697.465
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
514  mtVer+F+R4    41999.902    456 84911.804    501695.804   86296.655
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
515  mtVer+F+R5    41948.776    458 84813.552    505257.552   86204.477
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
516  mtVer+F+R6    41903.266    460 84726.533    508846.533   86123.531
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
517  mtVer+F+R7    41875.149    462 84674.298    512486.298   86077.370
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
518  mtVer+F+R8    41868.805    464 84665.609    516185.609   86074.755
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
519  mtVer+F+R9    41868.637    466 84669.274    519913.274   86084.494
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
521  mtInv         47462.786    431 95787.572    468171.572   97096.498
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
522  mtInv+I       47462.773    432 95789.546    469901.546   97101.510
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
523  mtInv+G4      43823.307    432 88510.614    462622.614   89822.577
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
524  mtInv+I+G4    43823.309    433 88512.618    464356.618   89827.619
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
525  mtInv+R2      44485.326    433 89836.652    465680.652   91151.653
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
526  mtInv+R3      43940.357    435 88750.715    468070.715   90071.789
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
527  mtInv+R4      43792.759    437 88459.518    471271.518   89786.666
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
528  mtInv+R5      43722.378    439 88322.756    474642.756   89655.979
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
529  mtInv+R6      43686.347    441 88254.695    478098.695   89593.991
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
530  mtInv+R7      43665.706    443 88217.412    481601.412   89562.782
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
531  mtInv+R8      43655.125    445 88200.250    485140.250   89551.694
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
532  mtInv+R9      43649.394    447 88192.788    488704.788   89550.306
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
533  mtInv+R10     43649.053    449 88196.107    492296.107   89559.698
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
534  mtInv+F       44358.877    450 89617.754    495517.754   90984.383
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
535  mtInv+F+I     44358.871    451 89619.742    497323.742   90989.408
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
536  mtInv+F+G4    41376.324    451 83654.648    491358.648   85024.314
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
537  mtInv+F+I+G4  41371.288    452 83646.576    493158.576   85019.279
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
538  mtInv+F+R2    41987.702    452 84879.403    494391.403   86252.106
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
539  mtInv+F+R3    41563.608    454 84035.216    497175.216   85413.993
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
540  mtInv+F+R4    41345.686    456 83603.372    500387.372   84988.222
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
541  mtInv+F+R5    41292.279    458 83500.558    503944.558   84891.483
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
542  mtInv+F+R6    41273.116    460 83466.232    507586.232   84863.230
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
543  mtInv+F+R7    41239.816    462 83403.633    511215.633   84806.705
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
544  mtInv+F+R8    41232.863    464 83393.726    514913.726   84802.872
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
WARNING: Log-likelihood -41235.4 of mtInv+F+R9 worse than mtInv+F+R8 -41232.9
545  mtInv+F+R9    41235.391    466 83402.781    518646.781   84818.001
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
547  mtMAM         49866.786    431 100595.573   472979.573   101904.499
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
548  mtMAM+I       49866.784    432 100597.569   474709.569   101909.532
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
549  mtMAM+G4      44547.282    432 89958.564    464070.564   91270.528
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
550  mtMAM+I+G4    44547.306    433 89960.611    465804.611   91275.612
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
551  mtMAM+R2      45358.274    433 91582.548    467426.548   92897.548
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
552  mtMAM+R3      44850.770    435 90571.539    469891.539   91892.614
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
553  mtMAM+R4      44507.331    437 89888.662    472700.662   91215.810
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
554  mtMAM+R5      44391.676    439 89661.352    475981.352   90994.574
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
555  mtMAM+R6      44349.587    441 89581.174    479425.174   90920.470
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
556  mtMAM+R7      44287.654    443 89461.308    482845.308   90806.678
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
557  mtMAM+R8      44274.712    445 89439.424    486379.424   90790.868
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
558  mtMAM+R9      44263.745    447 89421.491    489933.491   90779.009
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
559  mtMAM+R10     44255.949    449 89409.897    493509.897   90773.489
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
560  mtMAM+F       46432.074    450 93764.148    499664.148   95130.777
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
561  mtMAM+F+I     46432.071    451 93766.142    501470.142   95135.808
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
562  mtMAM+F+G4    42468.326    451 85838.652    493542.652   87208.318
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
563  mtMAM+F+I+G4  42468.330    452 85840.660    495352.660   87213.362
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
564  mtMAM+F+R2    43233.208    452 87370.417    496882.417   88743.119
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
565  mtMAM+F+R3    42667.798    454 86243.596    499383.596   87622.373
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
566  mtMAM+F+R4    42451.968    456 85815.936    502599.936   87200.786
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
567  mtMAM+F+R5    42383.701    458 85683.403    506127.403   87074.327
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
568  mtMAM+F+R6    42317.788    460 85555.575    509675.575   86952.573
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
569  mtMAM+F+R7    42246.793    462 85417.585    513229.585   86820.657
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
570  mtMAM+F+R8    42238.504    464 85405.008    516925.008   86814.154
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
571  mtMAM+F+R9    42238.489    466 85408.978    520652.978   86824.198
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
573  FLAVI         46674.843    431 94211.686    466595.686   95520.612
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
574  FLAVI+I       46674.838    432 94213.676    468325.676   95525.639
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
575  FLAVI+G4      42738.207    432 86340.413    460452.413   87652.377
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
576  FLAVI+I+G4    42738.207    433 86342.414    462186.414   87657.415
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
577  FLAVI+R2      43486.458    433 87838.916    463682.916   89153.916
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
578  FLAVI+R3      42953.055    435 86776.110    466096.110   88097.184
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
579  FLAVI+R4      42726.216    437 86326.431    469138.431   87653.579
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
580  FLAVI+R5      42660.967    439 86199.934    472519.934   87533.156
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
581  FLAVI+R6      42631.344    441 86144.688    475988.688   87483.984
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
582  FLAVI+R7      42613.123    443 86112.245    479496.245   87457.615
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
583  FLAVI+R8      42609.982    445 86109.965    483049.965   87461.409
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
586  FLAVI+F       46057.987    450 93015.974    498915.974   94382.603
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
587  FLAVI+F+I     46057.976    451 93017.952    500721.952   94387.618
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
588  FLAVI+F+G4    42483.818    451 85869.636    493573.636   87239.302
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
589  FLAVI+F+I+G4  42483.820    452 85871.640    495383.640   87244.342
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
590  FLAVI+F+R2    43205.288    452 87314.575    496826.575   88687.278
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
591  FLAVI+F+R3    42700.403    454 86308.806    499448.806   87687.583
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
592  FLAVI+F+R4    42454.960    456 85821.921    502605.921   87206.771
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
593  FLAVI+F+R5    42385.226    458 85686.452    506130.452   87077.376
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
594  FLAVI+F+R6    42356.396    460 85632.793    509752.793   87029.791
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
595  FLAVI+F+R7    42337.620    462 85599.240    513411.240   87002.313
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
596  FLAVI+F+R8    42331.388    464 85590.776    517110.776   86999.922
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
597  FLAVI+F+R9    42327.333    466 85586.666    520830.666   87001.885
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
599  HIVb          44918.696    431 90699.393    463083.393   92008.319
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
600  HIVb+I        44918.692    432 90701.384    464813.384   92013.348
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
601  HIVb+G4       41832.967    432 84529.934    458641.934   85841.898
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
602  HIVb+I+G4     41832.971    433 84531.941    460375.941   85846.942
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
603  HIVb+R2       42436.325    433 85738.650    461582.650   87053.651
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
604  HIVb+R3       42045.667    435 84961.333    464281.333   86282.407
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
605  HIVb+R4       41802.063    437 84478.127    467290.127   85805.275
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
606  HIVb+R5       41746.441    439 84370.881    470690.881   85704.103
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
607  HIVb+R6       41715.494    441 84312.988    474156.988   85652.284
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
608  HIVb+R7       41704.565    443 84295.131    477679.131   85640.501
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
609  HIVb+R8       41693.061    445 84276.123    481216.123   85627.567
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
WARNING: Log-likelihood -41699.1 of HIVb+R9 worse than HIVb+R8 -41693.1
610  HIVb+R9       41699.086    447 84292.173    484804.173   85649.690
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
612  HIVb+F        44912.476    450 90724.953    496624.953   92091.581
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
613  HIVb+F+I      44912.474    451 90726.947    498430.947   92096.613
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
614  HIVb+F+G4     41854.946    451 84611.892    492315.892   85981.558
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
615  HIVb+F+I+G4   41854.943    452 84613.886    494125.886   85986.589
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
616  HIVb+F+R2     42499.800    452 85903.600    495415.600   87276.302
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
617  HIVb+F+R3     42103.154    454 85114.307    498254.307   86493.084
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
618  HIVb+F+R4     41825.478    456 84562.955    501346.955   85947.805
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
619  HIVb+F+R5     41760.315    458 84436.630    504880.630   85827.554
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
620  HIVb+F+R6     41742.051    460 84404.103    508524.103   85801.101
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
621  HIVb+F+R7     41727.089    462 84378.178    512190.178   85781.251
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
622  HIVb+F+R8     41717.274    464 84362.548    515882.548   85771.694
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
WARNING: Log-likelihood -41722.7 of HIVb+F+R9 worse than HIVb+F+R8 -41717.3
623  HIVb+F+R9     41722.748    466 84377.495    519621.495   85792.715
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
625  HIVw          46651.430    431 94164.859    466548.859   95473.786
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
626  HIVw+I        46651.426    432 94166.852    468278.852   95478.815
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
627  HIVw+G4       43231.476    432 87326.952    461438.952   88638.915
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
628  HIVw+I+G4     43231.480    433 87328.961    463172.961   88643.961
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
629  HIVw+R2       44034.708    433 88935.416    464779.416   90250.416
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
630  HIVw+R3       43518.003    435 87906.005    467226.005   89227.080
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
631  HIVw+R4       43219.467    437 87312.934    470124.934   88640.083
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
632  HIVw+R5       43153.002    439 87184.005    473504.005   88517.227
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
633  HIVw+R6       43137.613    441 87157.227    477001.227   88496.523
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
634  HIVw+R7       43108.588    443 87103.177    480487.177   88448.547
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
635  HIVw+R8       43105.323    445 87100.645    484040.645   88452.089
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
638  HIVw+F        46302.951    450 93505.902    499405.902   94872.531
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
639  HIVw+F+I      46302.948    451 93507.895    501211.895   94877.561
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
640  HIVw+F+G4     42940.562    451 86783.123    494487.123   88152.789
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
641  HIVw+F+I+G4   42940.559    452 86785.119    496297.119   88157.821
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
642  HIVw+F+R2     43705.683    452 88315.366    497827.366   89688.068
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
643  HIVw+F+R3     43199.574    454 87307.148    500447.148   88685.924
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
644  HIVw+F+R4     42928.276    456 86768.552    503552.552   88153.402
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
645  HIVw+F+R5     42851.022    458 86618.043    507062.043   88008.968
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
646  HIVw+F+R6     42830.734    460 86581.469    510701.469   87978.467
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
647  HIVw+F+R7     42809.914    462 86543.828    514355.828   87946.900
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
648  HIVw+F+R8     42800.169    464 86528.338    518048.338   87937.484
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
649  HIVw+F+R9     42795.006    466 86522.011    521766.011   87937.231
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
650  HIVw+F+R10    42791.727    468 86519.454    525503.454   87940.748
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
651  FLU           45357.871    431 91577.742    463961.742   92886.669
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
652  FLU+I         45357.861    432 91579.722    465691.722   92891.686
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
653  FLU+G4        41942.781    432 84749.562    458861.562   86061.525
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
654  FLU+I+G4      41942.779    433 84751.559    460595.559   86066.559
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
655  FLU+R2        42610.436    433 86086.872    461930.872   87401.872
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
656  FLU+R3        42145.533    435 85161.067    464481.067   86482.141
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
657  FLU+R4        41919.657    437 84713.314    467525.314   86040.462
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
658  FLU+R5        41849.902    439 84577.804    470897.804   85911.026
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
659  FLU+R6        41825.986    441 84533.972    474377.972   85873.269
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
660  FLU+R7        41814.200    443 84514.399    477898.399   85859.769
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
661  FLU+R8        41807.332    445 84504.664    481444.664   85856.108
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
662  FLU+R9        41806.280    447 84506.561    485018.561   85864.078
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
664  FLU+F         45216.443    450 91332.887    497232.887   92699.516
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
665  FLU+F+I       45216.434    451 91334.869    499038.869   92704.534
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
666  FLU+F+G4      41772.768    451 84447.536    492151.536   85817.201
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
667  FLU+F+I+G4    41772.767    452 84449.535    493961.535   85822.237
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
668  FLU+F+R2      42442.870    452 85789.741    495301.741   87162.443
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
669  FLU+F+R3      41975.907    454 84859.814    497999.814   86238.590
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
670  FLU+F+R4      41736.019    456 84384.037    501168.037   85768.888
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
671  FLU+F+R5      41666.812    458 84249.623    504693.623   85640.547
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
672  FLU+F+R6      41644.070    460 84208.141    508328.141   85605.139
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
673  FLU+F+R7      41629.866    462 84183.731    511995.731   85586.803
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
674  FLU+F+R8      41622.460    464 84172.919    515692.919   85582.065
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
675  FLU+F+R9      41600.307    466 84132.615    519376.615   85547.834
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
676  FLU+F+R10     41597.449    468 84130.897    523114.897   85552.191
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
677  rtREV         44188.987    431 89239.974    461623.974   90548.900
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
678  rtREV+I       44188.981    432 89241.963    463353.963   90553.926
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
679  rtREV+G4      41382.148    432 83628.295    457740.295   84940.259
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
680  rtREV+I+G4    41382.151    433 83630.302    459474.302   84945.303
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
681  rtREV+R2      41946.507    433 84759.014    460603.014   86074.014
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
682  rtREV+R3      41559.039    435 83988.078    463308.078   85309.152
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
683  rtREV+R4      41353.194    437 83580.387    466392.387   84907.536
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
684  rtREV+R5      41296.903    439 83471.806    469791.806   84805.029
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
685  rtREV+R6      41284.195    441 83450.390    473294.390   84789.686
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
686  rtREV+R7      41248.267    443 83382.534    476766.534   84727.904
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
687  rtREV+R8      41239.545    445 83369.090    480309.090   84720.534
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
688  rtREV+R9      41240.139    447 83374.277    483886.277   84731.795
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
690  rtREV+F       43871.302    450 88642.604    494542.604   90009.233
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
691  rtREV+F+I     43871.253    451 88644.507    496348.507   90014.172
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
692  rtREV+F+G4    41062.685    451 83027.370    490731.370   84397.036
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
693  rtREV+F+I+G4  41062.672    452 83029.343    492541.343   84402.046
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
694  rtREV+F+R2    41584.804    452 84073.609    493585.609   85446.311
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
695  rtREV+F+R3    41248.780    454 83405.559    496545.559   84784.336
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
696  rtREV+F+R4    41029.287    456 82970.575    499754.575   84355.425
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
697  rtREV+F+R5    40987.033    458 82890.065    503334.065   84280.989
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
698  rtREV+F+R6    40959.955    460 82839.910    506959.910   84236.908
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
699  rtREV+F+R7    40936.741    462 82797.483    510609.483   84200.555
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
700  rtREV+F+R8    40926.701    464 82781.402    514301.402   84190.548
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
701  rtREV+F+R9    40925.426    466 82782.853    518026.853   84198.072
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
703  cpREV         43786.325    431 88434.651    460818.651   89743.577
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
704  cpREV+I       43786.318    432 88436.636    462548.636   89748.599
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
705  cpREV+G4      41231.747    432 83327.493    457439.493   84639.457
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
706  cpREV+I+G4    41231.739    433 83329.478    459173.478   84644.478
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
707  cpREV+R2      41756.279    433 84378.558    460222.558   85693.559
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
708  cpREV+R3      41367.653    435 83605.305    462925.305   84926.380
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
709  cpREV+R4      41210.130    437 83294.259    466106.259   84621.408
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
710  cpREV+R5      41157.468    439 83192.936    469512.936   84526.158
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
711  cpREV+R6      41139.867    441 83161.733    473005.733   84501.029
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
712  cpREV+R7      41112.884    443 83111.768    476495.768   84457.138
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
713  cpREV+R8      41104.844    445 83099.687    480039.687   84451.131
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
714  cpREV+R9      41105.720    447 83105.440    483617.440   84462.958
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
716  cpREV+F       43800.535    450 88501.069    494401.069   89867.698
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
717  cpREV+F+I     43800.529    451 88503.058    496207.058   89872.724
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
718  cpREV+F+G4    41211.456    451 83324.912    491028.912   84694.578
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
719  cpREV+F+I+G4  41211.464    452 83326.928    492838.928   84699.631
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
720  cpREV+F+R2    41781.132    452 84466.263    493978.263   85838.966
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
721  cpREV+F+R3    41372.147    454 83652.294    496792.294   85031.071
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
722  cpREV+F+R4    41194.337    456 83300.674    500084.674   84685.524
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
723  cpREV+F+R5    41150.166    458 83216.333    503660.333   84607.257
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
724  cpREV+F+R6    41116.794    460 83153.589    507273.589   84550.587
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
725  cpREV+F+R7    41090.001    462 83104.001    510916.001   84507.073
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
726  cpREV+F+R8    41081.974    464 83091.949    514611.949   84501.095
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
727  cpREV+F+R9    41081.835    466 83095.671    518339.671   84510.891
Model C10 is alias for POISSON+G+FMIX{C10pi1:1:0.1191344178,C10pi2:1:0.0874372456,C10pi3:1:0.1037105070,C10pi4:1:0.0922584809,C10pi5:1:0.1070492801,C10pi6:1:0.1329945166,C10pi7:1:0.0538028458,C10pi8:1:0.0691986212,C10pi9:1:0.1319937434,C10pi10:1:0.1024203429}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
729  C10           41756.496    432 84376.991    458488.991   85688.955
Model C20 is alias for POISSON+G+FMIX{C20pi1:1:0.0559910600,C20pi2:1:0.0514824870,C20pi3:1:0.0812922124,C20pi4:1:0.0721976867,C20pi5:1:0.0556718858,C20pi6:1:0.0331003080,C20pi7:1:0.0589501763,C20pi8:1:0.0263756889,C20pi9:1:0.0307584220,C20pi10:1:0.0376701125,C20pi11:1:0.0303058290,C20pi12:1:0.0808775576,C20pi13:1:0.0263349134,C20pi14:1:0.0579101455,C20pi15:1:0.0371248064,C20pi16:1:0.0586867766,C20pi17:1:0.0561479138,C20pi18:1:0.0349810886,C20pi19:1:0.0544937394,C20pi20:1:0.0596471901}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
730  C20           41424.213    432 83712.427    457824.427   85024.390
Model C30 is alias for POISSON+G+FMIX{C30pi1:1:0.0095783264,C30pi2:1:0.0248476365,C30pi3:1:0.0636309366,C30pi4:1:0.0537939225,C30pi5:1:0.0295885587,C30pi6:1:0.0117587936,C30pi7:1:0.0132013428,C30pi8:1:0.0236868805,C30pi9:1:0.0261687659,C30pi10:1:0.0239821974,C30pi11:1:0.0257100906,C30pi12:1:0.0465072425,C30pi13:1:0.0546794546,C30pi14:1:0.0536085131,C30pi15:1:0.0270622670,C30pi16:1:0.0403913593,C30pi17:1:0.0474212700,C30pi18:1:0.0458816478,C30pi19:1:0.0214036510,C30pi20:1:0.0290385981,C30pi21:1:0.0123391793,C30pi22:1:0.0569350229,C30pi23:1:0.0419687568,C30pi24:1:0.0339027062,C30pi25:1:0.0388777376,C30pi26:1:0.0196343766,C30pi27:1:0.0233086174,C30pi28:1:0.0622722654,C30pi29:1:0.0184803385,C30pi30:1:0.0203395454}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
731  C30           41317.228    432 83498.456    457610.456   84810.419
Model C40 is alias for POISSON+G+FMIX{C40pi1:1:0.0223853788,C40pi2:1:0.0338891820,C40pi3:1:0.0577169375,C40pi4:1:0.0252416233,C40pi5:1:0.0108607921,C40pi6:1:0.0462373793,C40pi7:1:0.0102293175,C40pi8:1:0.0147523625,C40pi9:1:0.0143161352,C40pi10:1:0.0182302541,C40pi11:1:0.0204025079,C40pi12:1:0.0425505156,C40pi13:1:0.0248627269,C40pi14:1:0.0105892988,C40pi15:1:0.0188238725,C40pi16:1:0.0086663445,C40pi17:1:0.0148496147,C40pi18:1:0.0343037402,C40pi19:1:0.0225335203,C40pi20:1:0.0174068578,C40pi21:1:0.0112207827,C40pi22:1:0.0443532245,C40pi23:1:0.0392573370,C40pi24:1:0.0196756555,C40pi25:1:0.0287690328,C40pi26:1:0.0114441177,C40pi27:1:0.0112338740,C40pi28:1:0.0582694099,C40pi29:1:0.0444272279,C40pi30:1:0.0112010942,C40pi31:1:0.0145176111,C40pi32:1:0.0114629026,C40pi33:1:0.0239628061,C40pi34:1:0.0266266492,C40pi35:1:0.0481201159,C40pi36:1:0.0371147423,C40pi37:1:0.0160476688,C40pi38:1:0.0237249267,C40pi39:1:0.0235226203,C40pi40:1:0.0261998398}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
732  C40           41233.317    432 83330.633    457442.633   84642.597
Model C50 is alias for POISSON+G+FMIX{C50pi1:1:0.0164297003,C50pi2:1:0.0273175755,C50pi3:1:0.0460247610,C50pi4:1:0.0084864734,C50pi5:1:0.0125389252,C50pi6:1:0.0343549036,C50pi7:1:0.0130241102,C50pi8:1:0.0094755681,C50pi9:1:0.0190040551,C50pi10:1:0.0151902354,C50pi11:1:0.0320534760,C50pi12:1:0.0210059850,C50pi13:1:0.0237408547,C50pi14:1:0.0239841203,C50pi15:1:0.0213748021,C50pi16:1:0.0210717705,C50pi17:1:0.0050241805,C50pi18:1:0.0166262276,C50pi19:1:0.0143945956,C50pi20:1:0.0104391130,C50pi21:1:0.0107628277,C50pi22:1:0.0148818171,C50pi23:1:0.0321480239,C50pi24:1:0.0145477978,C50pi25:1:0.0332355807,C50pi26:1:0.0143190281,C50pi27:1:0.0234478734,C50pi28:1:0.0183044983,C50pi29:1:0.0403269452,C50pi30:1:0.0135629530,C50pi31:1:0.0091880799,C50pi32:1:0.0158270022,C50pi33:1:0.0121019379,C50pi34:1:0.0353560982,C50pi35:1:0.0404495617,C50pi36:1:0.0104569232,C50pi37:1:0.0146187792,C50pi38:1:0.0093984095,C50pi39:1:0.0146773809,C50pi40:1:0.0201635562,C50pi41:1:0.0255640273,C50pi42:1:0.0039486842,C50pi43:1:0.0393652608,C50pi44:1:0.0056415419,C50pi45:1:0.0382833580,C50pi46:1:0.0039735086,C50pi47:1:0.0140269355,C50pi48:1:0.0476703673,C50pi49:1:0.0204062788,C50pi50:1:0.0117835304}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
733  C50           41137.563    432 83139.126    457251.126   84451.090
Model C60 is alias for POISSON+G+FMIX{C60pi1:1:0.0169698865,C60pi2:1:0.0211683374,C60pi3:1:0.0276589079,C60pi4:1:0.0065675964,C60pi5:1:0.0141221416,C60pi6:1:0.0068774834,C60pi7:1:0.0146909701,C60pi8:1:0.0067225777,C60pi9:1:0.0018396660,C60pi10:1:0.0102547197,C60pi11:1:0.0230896163,C60pi12:1:0.0057941033,C60pi13:1:0.0125394534,C60pi14:1:0.0204526478,C60pi15:1:0.0070629602,C60pi16:1:0.0117982741,C60pi17:1:0.0068334668,C60pi18:1:0.0433775839,C60pi19:1:0.0318278731,C60pi20:1:0.0222546108,C60pi21:1:0.0102264969,C60pi22:1:0.0150545891,C60pi23:1:0.0134159878,C60pi24:1:0.0148552065,C60pi25:1:0.0239111516,C60pi26:1:0.0128776278,C60pi27:1:0.0222318842,C60pi28:1:0.0247444742,C60pi29:1:0.0214274810,C60pi30:1:0.0115001882,C60pi31:1:0.0076017389,C60pi32:1:0.0130258568,C60pi33:1:0.0093701965,C60pi34:1:0.0467194264,C60pi35:1:0.0441940314,C60pi36:1:0.0322263154,C60pi37:1:0.0402999891,C60pi38:1:0.0150234227,C60pi39:1:0.0104589903,C60pi40:1:0.0214742395,C60pi41:1:0.0154957836,C60pi42:1:0.0101789953,C60pi43:1:0.0227980379,C60pi44:1:0.0123204539,C60pi45:1:0.0066777583,C60pi46:1:0.0004150083,C60pi47:1:0.0344385130,C60pi48:1:0.0113663379,C60pi49:1:0.0127143049,C60pi50:1:0.0124323741,C60pi51:1:0.0262124415,C60pi52:1:0.0064994957,C60pi53:1:0.0103203293,C60pi54:1:0.0142463512,C60pi55:1:0.0215600067,C60pi56:1:0.0199150700,C60pi57:1:0.0038964200,C60pi58:1:0.0113448855,C60pi59:1:0.0128595846,C60pi60:1:0.0117656776}
WARNING: Your input class weight 0.000415008 is very small and may cause numerical issues
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
734  C60           41125.726    432 83115.452    457227.452   84427.416
Model EX2 is alias for MIX{BurEX2:0.672020808818762,ExpEX2:1.6413466609931}
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
735  EX2           42026.729    432 84917.458    459029.458   86229.422
Model EX3 is alias for MIX{BurEX3:0.427672756793791,IntEX3:0.837595938019774,HExEX3:1.51863631431518}
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
736  EX3           41738.140    433 84342.280    460186.280   85657.281
Model EHO is alias for MIX{ExtEHO:0.720274356,HelEHO:0.976798797,OthEHO:0.783109376}
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
737  EHO           43400.865    433 87667.730    463511.730   88982.730
Model UL2 is alias for MIX{M1_UL2:0.581348617,M2_UL2:1.465482789}
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
738  UL2           42021.361    432 84906.721    459018.721   86218.685
Model UL3 is alias for MIX{Q1_UL3:0.484340397,Q2_UL3:0.492780514,Q3_UL3:1.15597274}
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
739  UL3           43811.484    433 88488.968    464332.968   89803.968
Model EX_EHO is alias for MIX{BUR_EXT:0.761816796788931,BUR_HEL:0.744425646802117,BUR_OTH:0.532457759429489,EXP_EXT:1.5639387472863,EXP_HEL:2.06403411829438,EXP_OTH:1.43336795177594}
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
740  EX_EHO        41569.243    436 84010.486    465074.486   85334.598
Model LG4M is alias for MIX{LG4M1,LG4M2,LG4M3,LG4M4}*G4
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
741  LG4M          41437.538    432 83739.076    457851.076   85051.040
Model LG4X is alias for MIX{LG4X1,LG4X2,LG4X3,LG4X4}*R4
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
742  LG4X          41310.398    437 83494.797    466306.797   84821.945
Model CF4 is alias for POISSON+FMIX{Fclass1,Fclass2,Fclass3,Fclass4}+F+G
WARNING: Normalizing State frequencies so that sum of them equals to 1
WARNING: Normalizing State frequencies so that sum of them equals to 1
WARNING: Normalizing State frequencies so that sum of them equals to 1
WARNING: Normalizing State frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
743  CF4           42039.696    455 84989.393    499949.393   86371.206
Akaike Information Criterion:           VT+F+R8
Corrected Akaike Information Criterion: VT+G4
Bayesian Information Criterion:         VT+F+R7
Best-fit model: VT+F+R7 chosen according to BIC

All model information printed to /researchdrive/zhongj2/tree-reconciliation/iqtree_gene_trees/COG1342.model.gz
CPU time for ModelFinder: 25943.300 seconds (7h:12m:23s)
Wall-clock time for ModelFinder: 2604.292 seconds (0h:43m:24s)
Generating 1000 samples for ultrafast bootstrap (seed: 855272)...

NOTE: 41 MB RAM (0 GB) is required!
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
Estimate model parameters (epsilon = 0.100)
1. Initial log-likelihood: -40743.021
Optimal log-likelihood: -40743.010
Site proportion and rates:  (0.072,0.054) (0.074,0.155) (0.190,0.352) (0.100,0.647) (0.254,1.014) (0.220,1.695) (0.090,2.472)
Parameters optimization took 1 rounds (0.449 sec)
Wrote distance file to... 
Computing ML distances based on estimated model parameters...
Calculating distance matrix: done in 1.71311 secs using 1001% CPU
Computing ML distances took 1.713530 sec (of wall-clock time) 17.156730 sec (of CPU time)
WARNING: Some pairwise ML distances are too long (saturated)
Setting up auxiliary I and S matrices: done in 0.00380708 secs using 219.7% CPU
Constructing RapidNJ tree: done in 0.375064 secs using 307.1% CPU
Computing RapidNJ tree took 0.379147 sec (of wall-clock time) 1.166153 sec (of CPU time)
Log-likelihood of RapidNJ tree: -40857.632
--------------------------------------------------------------------
|             INITIALIZING CANDIDATE TREE SET                      |
--------------------------------------------------------------------
Generating 98 parsimony trees... 11.551 second
Computing log-likelihood of 98 initial trees ... 8.331 seconds
Current best score: -40743.010

Do NNI search on 20 best initial trees
Optimizing NNI: done in 1.84468 secs using 994.2% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 1: -40723.101
Optimizing NNI: done in 3.58816 secs using 998.9% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 2: -40576.942
Optimizing NNI: done in 5.83749 secs using 999.8% CPU
Optimizing NNI: done in 3.5467 secs using 999.7% CPU
Optimizing NNI: done in 5.58044 secs using 999.3% CPU
Optimizing NNI: done in 5.80258 secs using 999% CPU
Optimizing NNI: done in 3.91787 secs using 1000% CPU
Optimizing NNI: done in 5.57359 secs using 999.4% CPU
Optimizing NNI: done in 5.79056 secs using 998.1% CPU
Optimizing NNI: done in 4.41584 secs using 998.9% CPU
Iteration 10 / LogL: -40628.227 / Time: 0h:1m:13s
Optimizing NNI: done in 4.45824 secs using 998.5% CPU
Optimizing NNI: done in 5.55406 secs using 998.6% CPU
Optimizing NNI: done in 5.60489 secs using 998.7% CPU
Optimizing NNI: done in 4.34057 secs using 998.6% CPU
Optimizing NNI: done in 5.32386 secs using 998.7% CPU
Optimizing NNI: done in 4.85268 secs using 999% CPU
Optimizing NNI: done in 6.15497 secs using 999.2% CPU
Optimizing NNI: done in 6.11297 secs using 999.5% CPU
Optimizing NNI: done in 5.74814 secs using 999.2% CPU
Optimizing NNI: done in 5.90076 secs using 998.4% CPU
Iteration 20 / LogL: -40628.880 / Time: 0h:2m:7s
Finish initializing candidate tree set (20)
Current best tree score: -40576.942 / CPU time: 123.938
Number of iterations: 20
--------------------------------------------------------------------
|               OPTIMIZING CANDIDATE TREE SET                      |
--------------------------------------------------------------------
Optimizing NNI: done in 3.59625 secs using 998.4% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 21: -40560.602
Optimizing NNI: done in 3.81817 secs using 997.8% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 22: -40518.176
Optimizing NNI: done in 3.21488 secs using 999.7% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 23: -40508.029
Optimizing NNI: done in 2.2682 secs using 999.7% CPU
Optimizing NNI: done in 3.22932 secs using 997.3% CPU
Optimizing NNI: done in 3.25068 secs using 998% CPU
Optimizing NNI: done in 2.87765 secs using 998.8% CPU
Optimizing NNI: done in 3.27738 secs using 998.8% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 28: -40505.441
Optimizing NNI: done in 3.21712 secs using 997.7% CPU
Optimizing NNI: done in 3.593 secs using 999.8% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 30: -40499.972
Iteration 30 / LogL: -40499.972 / Time: 0h:2m:47s (0h:9m:38s left)
Optimizing NNI: done in 2.78929 secs using 1000% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 31: -40470.989
Optimizing NNI: done in 2.40689 secs using 999.4% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 32: -40469.183
Optimizing NNI: done in 2.92833 secs using 998.9% CPU
Optimizing NNI: done in 3.01268 secs using 999.3% CPU
Optimizing NNI: done in 3.01995 secs using 999.7% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 35: -40426.319
Optimizing NNI: done in 2.43303 secs using 999.1% CPU
Optimizing NNI: done in 2.759 secs using 998.3% CPU
Optimizing NNI: done in 2.19075 secs using 997.7% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 38: -40425.425
Optimizing NNI: done in 2.47897 secs using 1000% CPU
Optimizing NNI: done in 2.02106 secs using 998.9% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 40: -40420.651
Iteration 40 / LogL: -40420.651 / Time: 0h:3m:19s (0h:8m:30s left)
Optimizing NNI: done in 2.29087 secs using 997.8% CPU
Optimizing NNI: done in 2.84612 secs using 998.9% CPU
Optimizing NNI: done in 2.41255 secs using 998.8% CPU
Optimizing NNI: done in 2.46902 secs using 998.8% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 44: -40408.220
Optimizing NNI: done in 2.75883 secs using 999.6% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 45: -40403.483
Optimizing NNI: done in 2.71269 secs using 998.6% CPU
Optimizing NNI: done in 2.46525 secs using 999% CPU
Optimizing NNI: done in 2.29118 secs using 998.7% CPU
Optimizing NNI: done in 2.45875 secs using 999.3% CPU
Optimizing NNI: done in 2.24829 secs using 999% CPU
Iteration 50 / LogL: -40408.746 / Time: 0h:3m:45s (0h:7m:17s left)
Log-likelihood cutoff on original alignment: -40701.241
UFBoot trees printed to /researchdrive/zhongj2/tree-reconciliation/iqtree_gene_trees/COG1342.ufboot
Optimizing NNI: done in 2.49452 secs using 999.6% CPU
Optimizing NNI: done in 2.31375 secs using 998.4% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 52: -40403.001
Optimizing NNI: done in 2.37076 secs using 999.3% CPU
Optimizing NNI: done in 2.25182 secs using 999.2% CPU
Optimizing NNI: done in 2.72977 secs using 997.8% CPU
Optimizing NNI: done in 2.40033 secs using 1000% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 56: -40402.533
Optimizing NNI: done in 2.30914 secs using 998.2% CPU
Optimizing NNI: done in 2.59301 secs using 1000% CPU
Optimizing NNI: done in 3.32144 secs using 999.1% CPU
Optimizing NNI: done in 2.52156 secs using 998.2% CPU
Iteration 60 / LogL: -40408.109 / Time: 0h:4m:15s (0h:6m:55s left)
Optimizing NNI: done in 2.4389 secs using 999.6% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 61: -40401.890
Optimizing NNI: done in 2.37231 secs using 998.5% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 62: -40401.407
Optimizing NNI: done in 2.4499 secs using 999.9% CPU
Optimizing NNI: done in 3.0892 secs using 1001% CPU
Optimizing NNI: done in 3.01138 secs using 999.1% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 65: -40401.045
Optimizing NNI: done in 3.03429 secs using 998.9% CPU
Optimizing NNI: done in 2.524 secs using 999.4% CPU
Optimizing NNI: done in 2.36647 secs using 999% CPU
Optimizing NNI: done in 2.73904 secs using 999.7% CPU
Optimizing NNI: done in 3.48826 secs using 999.2% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 70: -40400.512
Iteration 70 / LogL: -40400.512 / Time: 0h:4m:47s (0h:6m:56s left)
Optimizing NNI: done in 2.70231 secs using 1000% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 71: -40393.952
Optimizing NNI: done in 2.44538 secs using 998.6% CPU
Optimizing NNI: done in 2.23929 secs using 998.7% CPU
Optimizing NNI: done in 2.12438 secs using 998.1% CPU
Optimizing NNI: done in 2.29239 secs using 999.1% CPU
Optimizing NNI: done in 2.77776 secs using 1000% CPU
Optimizing NNI: done in 2.21677 secs using 998.1% CPU
Optimizing NNI: done in 2.71095 secs using 999.7% CPU
Optimizing NNI: done in 2.57673 secs using 999.1% CPU
Optimizing NNI: done in 2.13165 secs using 999.9% CPU
Iteration 80 / LogL: -40403.397 / Time: 0h:5m:12s (0h:5m:59s left)
Optimizing NNI: done in 2.34487 secs using 1001% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 81: -40389.779
Optimizing NNI: done in 2.65421 secs using 998.2% CPU
Optimizing NNI: done in 2.10333 secs using 999.7% CPU
Optimizing NNI: done in 2.44637 secs using 997.8% CPU
Optimizing NNI: done in 2.51977 secs using 999.8% CPU
Optimizing NNI: done in 2.4784 secs using 999.6% CPU
Optimizing NNI: done in 2.08849 secs using 999.2% CPU
Optimizing NNI: done in 3.11729 secs using 999.2% CPU
Optimizing NNI: done in 2.5121 secs using 999.1% CPU
Optimizing NNI: done in 2.70824 secs using 999% CPU
Iteration 90 / LogL: -40406.053 / Time: 0h:5m:38s (0h:5m:46s left)
Optimizing NNI: done in 2.63296 secs using 999.8% CPU
Optimizing NNI: done in 2.96851 secs using 999.3% CPU
Optimizing NNI: done in 2.86907 secs using 998.5% CPU
Optimizing NNI: done in 3.64216 secs using 999.7% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 94: -40384.700
Optimizing NNI: done in 2.30221 secs using 998.1% CPU
Optimizing NNI: done in 2.72402 secs using 998.8% CPU
Optimizing NNI: done in 2.73523 secs using 999.2% CPU
Optimizing NNI: done in 2.30868 secs using 1001% CPU
Optimizing NNI: done in 2.84684 secs using 998.7% CPU
Optimizing NNI: done in 2.64838 secs using 999.7% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 100: -40378.520
Iteration 100 / LogL: -40378.520 / Time: 0h:6m:9s (0h:6m:12s left)
Log-likelihood cutoff on original alignment: -40591.081
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.855
NOTE: UFBoot does not converge, continue at least 100 more iterations
UFBoot trees printed to /researchdrive/zhongj2/tree-reconciliation/iqtree_gene_trees/COG1342.ufboot
Optimizing NNI: done in 2.73244 secs using 999% CPU
Optimizing NNI: done in 3.07958 secs using 998.4% CPU
Optimizing NNI: done in 2.33437 secs using 998.2% CPU
Optimizing NNI: done in 3.41556 secs using 998.1% CPU
Optimizing NNI: done in 2.65535 secs using 999.3% CPU
Optimizing NNI: done in 2.96779 secs using 998.6% CPU
Optimizing NNI: done in 2.81313 secs using 998.2% CPU
Optimizing NNI: done in 3.45405 secs using 999% CPU
Optimizing NNI: done in 3.198 secs using 999.3% CPU
Optimizing NNI: done in 3.13638 secs using 998.7% CPU
Iteration 110 / LogL: -40387.990 / Time: 0h:6m:41s (0h:5m:31s left)
Optimizing NNI: done in 2.62865 secs using 997.6% CPU
Optimizing NNI: done in 3.35109 secs using 998.1% CPU
Optimizing NNI: done in 2.64408 secs using 999.2% CPU
Optimizing NNI: done in 3.18757 secs using 999.2% CPU
Optimizing NNI: done in 3.57039 secs using 998.2% CPU
Optimizing NNI: done in 3.112 secs using 998.2% CPU
Optimizing NNI: done in 3.3053 secs using 998.7% CPU
Optimizing NNI: done in 3.03204 secs using 998.7% CPU
Optimizing NNI: done in 2.62405 secs using 998.2% CPU
Optimizing NNI: done in 2.54732 secs using 998.5% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 120: -40377.173
Iteration 120 / LogL: -40377.173 / Time: 0h:7m:12s (0h:6m:3s left)
Optimizing NNI: done in 2.99475 secs using 999.4% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 121: -40375.778
Optimizing NNI: done in 3.30607 secs using 998% CPU
Optimizing NNI: done in 3.02972 secs using 999.1% CPU
Optimizing NNI: done in 2.45206 secs using 999% CPU
Optimizing NNI: done in 2.3729 secs using 998.5% CPU
Optimizing NNI: done in 3.40318 secs using 997.9% CPU
Optimizing NNI: done in 2.96936 secs using 998.9% CPU
Optimizing NNI: done in 3.73241 secs using 998.5% CPU
Optimizing NNI: done in 2.94162 secs using 999.6% CPU
Optimizing NNI: done in 2.72365 secs using 999.1% CPU
Iteration 130 / LogL: -40377.950 / Time: 0h:7m:44s (0h:5m:27s left)
Optimizing NNI: done in 2.7579 secs using 999.4% CPU
Optimizing NNI: done in 3.48582 secs using 999.3% CPU
Optimizing NNI: done in 2.96196 secs using 1000% CPU
Optimizing NNI: done in 3.15049 secs using 997.5% CPU
Optimizing NNI: done in 2.41055 secs using 997.6% CPU
Optimizing NNI: done in 2.66751 secs using 999.1% CPU
Optimizing NNI: done in 3.45969 secs using 997.6% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 137: -40374.180
Optimizing NNI: done in 3.03437 secs using 999% CPU
Optimizing NNI: done in 3.11951 secs using 998.1% CPU
Optimizing NNI: done in 3.57715 secs using 999.7% CPU
Iteration 140 / LogL: -40379.492 / Time: 0h:8m:16s (0h:5m:46s left)
Optimizing NNI: done in 3.08204 secs using 997.1% CPU
Optimizing NNI: done in 2.22334 secs using 997.6% CPU
Optimizing NNI: done in 2.22497 secs using 998.7% CPU
Optimizing NNI: done in 2.21152 secs using 998.7% CPU
Optimizing NNI: done in 2.40817 secs using 998.8% CPU
Optimizing NNI: done in 2.21022 secs using 997.3% CPU
Optimizing NNI: done in 2.30157 secs using 1000% CPU
Optimizing NNI: done in 2.79143 secs using 997.3% CPU
Optimizing NNI: done in 2.19081 secs using 999.6% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 149: -40371.913
Optimizing NNI: done in 2.82505 secs using 999.1% CPU
Iteration 150 / LogL: -40383.264 / Time: 0h:8m:42s (0h:5m:46s left)
Log-likelihood cutoff on original alignment: -40453.564
UFBoot trees printed to /researchdrive/zhongj2/tree-reconciliation/iqtree_gene_trees/COG1342.ufboot
Optimizing NNI: done in 2.2068 secs using 999.4% CPU
Optimizing NNI: done in 2.49069 secs using 999.5% CPU
Optimizing NNI: done in 2.36112 secs using 998.9% CPU
Optimizing NNI: done in 2.65319 secs using 1000% CPU
Optimizing NNI: done in 2.66799 secs using 998.9% CPU
Optimizing NNI: done in 2.62872 secs using 999% CPU
Optimizing NNI: done in 2.6988 secs using 999.8% CPU
Optimizing NNI: done in 2.61149 secs using 999.2% CPU
Optimizing NNI: done in 2.55658 secs using 998.9% CPU
Optimizing NNI: done in 2.29246 secs using 998.6% CPU
Iteration 160 / LogL: -40395.264 / Time: 0h:9m:9s (0h:5m:7s left)
Optimizing NNI: done in 2.57977 secs using 998.5% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 161: -40363.963
Optimizing NNI: done in 2.30215 secs using 998.1% CPU
Optimizing NNI: done in 2.28216 secs using 999.8% CPU
Optimizing NNI: done in 2.31378 secs using 997.7% CPU
Optimizing NNI: done in 2.53796 secs using 998.5% CPU
Optimizing NNI: done in 2.67394 secs using 998.6% CPU
Optimizing NNI: done in 1.97938 secs using 997% CPU
Optimizing NNI: done in 2.46532 secs using 998.7% CPU
Optimizing NNI: done in 2.61466 secs using 999.2% CPU
Optimizing NNI: done in 2.66774 secs using 999.2% CPU
Iteration 170 / LogL: -40365.190 / Time: 0h:9m:35s (0h:5m:9s left)
Optimizing NNI: done in 1.78819 secs using 999.4% CPU
Optimizing NNI: done in 2.74555 secs using 998.9% CPU
Optimizing NNI: done in 2.37505 secs using 998.8% CPU
Optimizing NNI: done in 2.37104 secs using 999% CPU
Optimizing NNI: done in 3.27397 secs using 1000% CPU
Optimizing NNI: done in 2.37583 secs using 998.9% CPU
Optimizing NNI: done in 2.54364 secs using 999% CPU
Optimizing NNI: done in 2.52876 secs using 998.8% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 178: -40361.534
Optimizing NNI: done in 2.33752 secs using 998.4% CPU
Optimizing NNI: done in 2.40871 secs using 997.1% CPU
Iteration 180 / LogL: -40372.898 / Time: 0h:10m:1s (0h:5m:29s left)
Optimizing NNI: done in 2.14798 secs using 999.4% CPU
Optimizing NNI: done in 2.22017 secs using 998.7% CPU
Optimizing NNI: done in 2.55021 secs using 997.8% CPU
Optimizing NNI: done in 2.86175 secs using 998.3% CPU
Optimizing NNI: done in 2.36621 secs using 999.8% CPU
Optimizing NNI: done in 2.14665 secs using 1000% CPU
Optimizing NNI: done in 2.13123 secs using 998.1% CPU
Optimizing NNI: done in 2.64645 secs using 998.4% CPU
Optimizing NNI: done in 2.62423 secs using 999.1% CPU
Optimizing NNI: done in 2.86669 secs using 999.6% CPU
Iteration 190 / LogL: -40382.862 / Time: 0h:10m:26s (0h:4m:51s left)
Optimizing NNI: done in 2.28683 secs using 998.3% CPU
Optimizing NNI: done in 2.78134 secs using 998.8% CPU
Optimizing NNI: done in 2.18704 secs using 999.5% CPU
Optimizing NNI: done in 2.69194 secs using 999.3% CPU
Optimizing NNI: done in 2.37108 secs using 999.8% CPU
Optimizing NNI: done in 3.47879 secs using 998.2% CPU
Optimizing NNI: done in 2.18109 secs using 1000% CPU
Optimizing NNI: done in 2.09374 secs using 1000% CPU
Optimizing NNI: done in 2.43127 secs using 999.6% CPU
Optimizing NNI: done in 2.2852 secs using 998.8% CPU
Iteration 200 / LogL: -40382.934 / Time: 0h:10m:52s (0h:4m:15s left)
Log-likelihood cutoff on original alignment: -40448.091
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.905
NOTE: UFBoot does not converge, continue at least 100 more iterations
UFBoot trees printed to /researchdrive/zhongj2/tree-reconciliation/iqtree_gene_trees/COG1342.ufboot
Optimizing NNI: done in 2.39148 secs using 999.2% CPU
Optimizing NNI: done in 2.00059 secs using 998.5% CPU
Optimizing NNI: done in 2.39443 secs using 999.4% CPU
Optimizing NNI: done in 2.54994 secs using 998% CPU
Optimizing NNI: done in 2.68667 secs using 998.9% CPU
Optimizing NNI: done in 2.23519 secs using 999.6% CPU
Optimizing NNI: done in 2.43739 secs using 1000% CPU
Optimizing NNI: done in 2.31464 secs using 999% CPU
Optimizing NNI: done in 2.19268 secs using 998.1% CPU
Optimizing NNI: done in 3.84163 secs using 999.5% CPU
Iteration 210 / LogL: -40377.658 / Time: 0h:11m:19s (0h:4m:52s left)
Optimizing NNI: done in 2.86461 secs using 998.3% CPU
Optimizing NNI: done in 2.58593 secs using 998.4% CPU
Optimizing NNI: done in 3.00774 secs using 998.9% CPU
Optimizing NNI: done in 2.67432 secs using 998.9% CPU
Optimizing NNI: done in 3.04676 secs using 998.6% CPU
Optimizing NNI: done in 3.25981 secs using 999.2% CPU
Optimizing NNI: done in 3.53667 secs using 1000% CPU
Optimizing NNI: done in 2.86386 secs using 999.2% CPU
Optimizing NNI: done in 3.33993 secs using 999.3% CPU
Optimizing NNI: done in 2.95935 secs using 998.2% CPU
Iteration 220 / LogL: -40367.105 / Time: 0h:11m:50s (0h:4m:19s left)
Optimizing NNI: done in 3.25114 secs using 999% CPU
Optimizing NNI: done in 3.01316 secs using 999.6% CPU
Optimizing NNI: done in 2.95281 secs using 998.6% CPU
Optimizing NNI: done in 3.27187 secs using 999.5% CPU
Optimizing NNI: done in 3.04001 secs using 999.6% CPU
Optimizing NNI: done in 3.09409 secs using 998.1% CPU
Optimizing NNI: done in 3.21618 secs using 999.6% CPU
Optimizing NNI: done in 3.3657 secs using 998.8% CPU
Optimizing NNI: done in 3.0326 secs using 999.8% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 229: -40356.183
Optimizing NNI: done in 2.8024 secs using 999.9% CPU
Iteration 230 / LogL: -40380.265 / Time: 0h:12m:23s (0h:5m:21s left)
Optimizing NNI: done in 3.00767 secs using 997.4% CPU
Optimizing NNI: done in 4.17927 secs using 999.5% CPU
Optimizing NNI: done in 3.44671 secs using 997.7% CPU
Optimizing NNI: done in 3.21361 secs using 998% CPU
Optimizing NNI: done in 2.23853 secs using 997.4% CPU
Optimizing NNI: done in 3.7035 secs using 998.9% CPU
Optimizing NNI: done in 3.52809 secs using 998.5% CPU
Optimizing NNI: done in 4.07596 secs using 999.1% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 238: -40353.380
Optimizing NNI: done in 2.76547 secs using 998.3% CPU
Optimizing NNI: done in 3.77134 secs using 998.8% CPU
Iteration 240 / LogL: -40388.890 / Time: 0h:12m:59s (0h:5m:19s left)
Optimizing NNI: done in 3.0506 secs using 999.3% CPU
Optimizing NNI: done in 3.59561 secs using 999.3% CPU
Optimizing NNI: done in 2.34005 secs using 999.3% CPU
Optimizing NNI: done in 2.27831 secs using 997.7% CPU
Optimizing NNI: done in 3.42144 secs using 998.1% CPU
Optimizing NNI: done in 3.73149 secs using 999.5% CPU
Optimizing NNI: done in 3.40039 secs using 999.2% CPU
Optimizing NNI: done in 2.30545 secs using 997.9% CPU
Optimizing NNI: done in 2.67334 secs using 998.3% CPU
Optimizing NNI: done in 2.88354 secs using 999.3% CPU
Iteration 250 / LogL: -40353.783 / Time: 0h:13m:29s (0h:4m:46s left)
Log-likelihood cutoff on original alignment: -40448.091
UFBoot trees printed to /researchdrive/zhongj2/tree-reconciliation/iqtree_gene_trees/COG1342.ufboot
Optimizing NNI: done in 3.03193 secs using 998.7% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 251: -40351.416
Optimizing NNI: done in 2.96018 secs using 999.1% CPU
Optimizing NNI: done in 2.72644 secs using 998.1% CPU
Optimizing NNI: done in 2.8084 secs using 998.8% CPU
Optimizing NNI: done in 3.13046 secs using 977.6% CPU
Optimizing NNI: done in 2.50811 secs using 998.5% CPU
Optimizing NNI: done in 3.24744 secs using 988.6% CPU
Optimizing NNI: done in 2.67416 secs using 998.4% CPU
Optimizing NNI: done in 1.72909 secs using 997.3% CPU
Optimizing NNI: done in 2.26755 secs using 998.9% CPU
Iteration 260 / LogL: -40360.485 / Time: 0h:13m:59s (0h:4m:55s left)
Optimizing NNI: done in 2.28293 secs using 998% CPU
Optimizing NNI: done in 2.56377 secs using 998.7% CPU
Optimizing NNI: done in 2.28211 secs using 999.2% CPU
Optimizing NNI: done in 2.26441 secs using 998.4% CPU
Optimizing NNI: done in 1.91699 secs using 998.7% CPU
Optimizing NNI: done in 2.17796 secs using 997.9% CPU
Optimizing NNI: done in 2.33016 secs using 1000% CPU
Optimizing NNI: done in 3.49081 secs using 998.8% CPU
Optimizing NNI: done in 2.41692 secs using 999.5% CPU
Optimizing NNI: done in 2.7146 secs using 987.5% CPU
Iteration 270 / LogL: -40356.425 / Time: 0h:14m:25s (0h:4m:20s left)
Optimizing NNI: done in 3.43001 secs using 999.8% CPU
Optimizing NNI: done in 2.62136 secs using 999.5% CPU
Optimizing NNI: done in 2.69651 secs using 998% CPU
Optimizing NNI: done in 2.47749 secs using 997.2% CPU
Optimizing NNI: done in 2.61971 secs using 997.2% CPU
Optimizing NNI: done in 2.46153 secs using 998.4% CPU
Optimizing NNI: done in 2.81258 secs using 998.2% CPU
Optimizing NNI: done in 2.38482 secs using 997.3% CPU
Optimizing NNI: done in 2.57543 secs using 999% CPU
Optimizing NNI: done in 2.63027 secs using 999.5% CPU
Iteration 280 / LogL: -40354.489 / Time: 0h:14m:52s (0h:3m:47s left)
Optimizing NNI: done in 2.16887 secs using 998% CPU
Optimizing NNI: done in 2.40865 secs using 1000% CPU
Optimizing NNI: done in 2.2669 secs using 997.1% CPU
Optimizing NNI: done in 2.45458 secs using 998.7% CPU
Optimizing NNI: done in 2.3238 secs using 999.6% CPU
Optimizing NNI: done in 2.07734 secs using 999% CPU
Optimizing NNI: done in 2.49809 secs using 1000% CPU
Optimizing NNI: done in 2.34223 secs using 999.8% CPU
Optimizing NNI: done in 2.50667 secs using 999.7% CPU
Optimizing NNI: done in 1.79332 secs using 997.3% CPU
Iteration 290 / LogL: -40391.876 / Time: 0h:15m:16s (0h:3m:13s left)
Optimizing NNI: done in 2.45767 secs using 997.9% CPU
Optimizing NNI: done in 2.2811 secs using 998.1% CPU
Optimizing NNI: done in 2.32325 secs using 999.8% CPU
Optimizing NNI: done in 2.8251 secs using 998.9% CPU
Optimizing NNI: done in 2.19955 secs using 998.5% CPU
Optimizing NNI: done in 2.46505 secs using 1000% CPU
Optimizing NNI: done in 2.86331 secs using 999.5% CPU
Optimizing NNI: done in 2.3938 secs using 998.1% CPU
Optimizing NNI: done in 2.37275 secs using 998.2% CPU
Optimizing NNI: done in 2.53986 secs using 999.1% CPU
Iteration 300 / LogL: -40411.859 / Time: 0h:15m:41s (0h:2m:40s left)
Log-likelihood cutoff on original alignment: -40448.091
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.929
NOTE: UFBoot does not converge, continue at least 100 more iterations
UFBoot trees printed to /researchdrive/zhongj2/tree-reconciliation/iqtree_gene_trees/COG1342.ufboot
Optimizing NNI: done in 2.1543 secs using 1001% CPU
Optimizing NNI: done in 1.85149 secs using 997.6% CPU
Optimizing NNI: done in 2.24635 secs using 999.6% CPU
Optimizing NNI: done in 2.52692 secs using 999.7% CPU
Optimizing NNI: done in 2.55434 secs using 999.8% CPU
Optimizing NNI: done in 2.42349 secs using 998.7% CPU
Optimizing NNI: done in 2.54559 secs using 998.6% CPU
Optimizing NNI: done in 1.98062 secs using 998.7% CPU
Optimizing NNI: done in 2.07544 secs using 999.3% CPU
Optimizing NNI: done in 2.74342 secs using 999.2% CPU
Iteration 310 / LogL: -40362.726 / Time: 0h:16m:6s (0h:4m:41s left)
Optimizing NNI: done in 2.39924 secs using 998.9% CPU
Optimizing NNI: done in 1.97505 secs using 999.6% CPU
Optimizing NNI: done in 2.59889 secs using 997.6% CPU
Optimizing NNI: done in 2.11574 secs using 999.9% CPU
Optimizing NNI: done in 2.25687 secs using 998.1% CPU
Optimizing NNI: done in 2.55221 secs using 997.4% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 316: -40349.960
Optimizing NNI: done in 2.22695 secs using 997.4% CPU
Optimizing NNI: done in 2.13045 secs using 999% CPU
Optimizing NNI: done in 2.1476 secs using 999% CPU
Optimizing NNI: done in 2.75919 secs using 999.2% CPU
Iteration 320 / LogL: -40369.008 / Time: 0h:16m:31s (0h:4m:58s left)
Optimizing NNI: done in 2.56619 secs using 999.1% CPU
Optimizing NNI: done in 1.99683 secs using 998.2% CPU
Optimizing NNI: done in 2.20507 secs using 1001% CPU
Optimizing NNI: done in 2.8613 secs using 1000% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 324: -40345.418
Optimizing NNI: done in 2.35918 secs using 998.1% CPU
Optimizing NNI: done in 2.48978 secs using 998.5% CPU
Optimizing NNI: done in 2.30664 secs using 1000% CPU
Optimizing NNI: done in 2.23285 secs using 998.7% CPU
Optimizing NNI: done in 2.27598 secs using 998.2% CPU
Optimizing NNI: done in 2.77082 secs using 997.5% CPU
Iteration 330 / LogL: -40373.915 / Time: 0h:16m:57s (0h:4m:50s left)
Optimizing NNI: done in 2.36445 secs using 999% CPU
Optimizing NNI: done in 2.59054 secs using 999.6% CPU
Optimizing NNI: done in 2.33023 secs using 998.3% CPU
Optimizing NNI: done in 2.25879 secs using 998.5% CPU
Optimizing NNI: done in 1.84471 secs using 998.3% CPU
Optimizing NNI: done in 2.69186 secs using 999% CPU
Optimizing NNI: done in 2.77881 secs using 998.9% CPU
Optimizing NNI: done in 2.15395 secs using 1000% CPU
Optimizing NNI: done in 2.9604 secs using 998.8% CPU
Optimizing NNI: done in 2.34499 secs using 998.4% CPU
Iteration 340 / LogL: -40351.707 / Time: 0h:17m:22s (0h:4m:18s left)
Optimizing NNI: done in 2.04312 secs using 998.4% CPU
Optimizing NNI: done in 2.68033 secs using 999.1% CPU
Optimizing NNI: done in 1.76407 secs using 1000% CPU
Optimizing NNI: done in 2.33414 secs using 999.8% CPU
Optimizing NNI: done in 2.6528 secs using 1000% CPU
Optimizing NNI: done in 2.8001 secs using 998.9% CPU
Optimizing NNI: done in 2.30466 secs using 998.9% CPU
Optimizing NNI: done in 2.0307 secs using 997.8% CPU
Optimizing NNI: done in 2.16335 secs using 999.3% CPU
Optimizing NNI: done in 2.39072 secs using 1000% CPU
Iteration 350 / LogL: -40367.470 / Time: 0h:17m:46s (0h:3m:46s left)
Log-likelihood cutoff on original alignment: -40448.091
UFBoot trees printed to /researchdrive/zhongj2/tree-reconciliation/iqtree_gene_trees/COG1342.ufboot
Optimizing NNI: done in 2.33523 secs using 999.7% CPU
Optimizing NNI: done in 2.35764 secs using 997.8% CPU
Optimizing NNI: done in 2.26592 secs using 999.2% CPU
Optimizing NNI: done in 2.26738 secs using 998.5% CPU
Optimizing NNI: done in 2.2903 secs using 999.1% CPU
Optimizing NNI: done in 2.60413 secs using 998.9% CPU
Optimizing NNI: done in 2.41123 secs using 999.1% CPU
Optimizing NNI: done in 2.23077 secs using 999.4% CPU
Optimizing NNI: done in 2.35159 secs using 999.8% CPU
Optimizing NNI: done in 2.12247 secs using 1000% CPU
Iteration 360 / LogL: -40390.688 / Time: 0h:18m:12s (0h:3m:14s left)
Optimizing NNI: done in 2.81244 secs using 999.4% CPU
Optimizing NNI: done in 2.57815 secs using 1000% CPU
Optimizing NNI: done in 1.95426 secs using 997.7% CPU
Optimizing NNI: done in 2.38724 secs using 999.3% CPU
Optimizing NNI: done in 1.86282 secs using 1000% CPU
Optimizing NNI: done in 2.57346 secs using 999% CPU
Optimizing NNI: done in 2.39856 secs using 999.4% CPU
Optimizing NNI: done in 2.22766 secs using 999.2% CPU
Optimizing NNI: done in 3.04823 secs using 998.5% CPU
Optimizing NNI: done in 2.28768 secs using 998.7% CPU
Iteration 370 / LogL: -40358.697 / Time: 0h:18m:37s (0h:2m:43s left)
Optimizing NNI: done in 2.39804 secs using 999.6% CPU
Optimizing NNI: done in 2.1232 secs using 999.2% CPU
Optimizing NNI: done in 2.29008 secs using 986.6% CPU
Optimizing NNI: done in 2.68015 secs using 999.2% CPU
Optimizing NNI: done in 1.88707 secs using 1000% CPU
Optimizing NNI: done in 2.09997 secs using 998.9% CPU
Optimizing NNI: done in 2.29378 secs using 1000% CPU
Optimizing NNI: done in 2.27904 secs using 999.8% CPU
Optimizing NNI: done in 2.13547 secs using 999.5% CPU
Optimizing NNI: done in 1.97404 secs using 1000% CPU
Iteration 380 / LogL: -40350.082 / Time: 0h:19m:0s (0h:2m:12s left)
Optimizing NNI: done in 2.0471 secs using 1000% CPU
Optimizing NNI: done in 1.87959 secs using 998.5% CPU
Optimizing NNI: done in 1.83921 secs using 999.3% CPU
Optimizing NNI: done in 1.73852 secs using 996.8% CPU
Optimizing NNI: done in 2.358 secs using 998.7% CPU
Optimizing NNI: done in 1.9185 secs using 999% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 386: -40344.170
Optimizing NNI: done in 1.64972 secs using 999.8% CPU
Optimizing NNI: done in 2.21861 secs using 1000% CPU
Optimizing NNI: done in 2.33093 secs using 997.5% CPU
Optimizing NNI: done in 2.35098 secs using 998.9% CPU
Iteration 390 / LogL: -40346.867 / Time: 0h:19m:22s (0h:4m:46s left)
Optimizing NNI: done in 2.70904 secs using 998.9% CPU
Optimizing NNI: done in 1.58691 secs using 996.8% CPU
Optimizing NNI: done in 2.38489 secs using 997.8% CPU
Optimizing NNI: done in 2.03112 secs using 1000% CPU
Optimizing NNI: done in 2.33256 secs using 999.3% CPU
Optimizing NNI: done in 2.19448 secs using 998.1% CPU
Optimizing NNI: done in 2.41775 secs using 998.3% CPU
Optimizing NNI: done in 2.36898 secs using 998.8% CPU
Optimizing NNI: done in 1.74933 secs using 998.8% CPU
Optimizing NNI: done in 2.71906 secs using 998.4% CPU
Iteration 400 / LogL: -40349.418 / Time: 0h:19m:45s (0h:4m:15s left)
Log-likelihood cutoff on original alignment: -40448.091
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.940
NOTE: UFBoot does not converge, continue at least 100 more iterations
UFBoot trees printed to /researchdrive/zhongj2/tree-reconciliation/iqtree_gene_trees/COG1342.ufboot
Optimizing NNI: done in 2.32473 secs using 999% CPU
Optimizing NNI: done in 2.14997 secs using 1000% CPU
Optimizing NNI: done in 2.40089 secs using 994% CPU
Optimizing NNI: done in 2.59749 secs using 1000% CPU
Optimizing NNI: done in 2.69853 secs using 999.4% CPU
Optimizing NNI: done in 2.35095 secs using 999.9% CPU
Optimizing NNI: done in 2.11915 secs using 998.6% CPU
Optimizing NNI: done in 2.33124 secs using 999.9% CPU
Optimizing NNI: done in 2.60842 secs using 1000% CPU
Optimizing NNI: done in 2.57112 secs using 999.4% CPU
Iteration 410 / LogL: -40349.042 / Time: 0h:20m:12s (0h:4m:26s left)
Optimizing NNI: done in 2.0421 secs using 1001% CPU
Optimizing NNI: done in 2.23057 secs using 998.4% CPU
Optimizing NNI: done in 2.25498 secs using 997.4% CPU
Optimizing NNI: done in 2.41621 secs using 999.2% CPU
Optimizing NNI: done in 3.76255 secs using 999.5% CPU
Optimizing NNI: done in 2.95723 secs using 1000% CPU
Optimizing NNI: done in 2.95293 secs using 1000% CPU
Optimizing NNI: done in 3.26997 secs using 997% CPU
Optimizing NNI: done in 2.83953 secs using 998.8% CPU
Optimizing NNI: done in 2.75859 secs using 999% CPU
Iteration 420 / LogL: -40358.637 / Time: 0h:20m:41s (0h:3m:57s left)
Optimizing NNI: done in 2.89715 secs using 998.4% CPU
Optimizing NNI: done in 2.66178 secs using 999.5% CPU
Optimizing NNI: done in 2.7604 secs using 999.1% CPU
Optimizing NNI: done in 2.35496 secs using 997.8% CPU
Optimizing NNI: done in 3.25785 secs using 999.2% CPU
Optimizing NNI: done in 3.69561 secs using 998.8% CPU
Optimizing NNI: done in 3.79093 secs using 997.9% CPU
Optimizing NNI: done in 3.33442 secs using 999.2% CPU
Optimizing NNI: done in 2.92986 secs using 998.6% CPU
Optimizing NNI: done in 3.34432 secs using 998.7% CPU
Iteration 430 / LogL: -40371.378 / Time: 0h:21m:13s (0h:3m:27s left)
Optimizing NNI: done in 3.01794 secs using 998.2% CPU
Optimizing NNI: done in 3.15583 secs using 999.2% CPU
Optimizing NNI: done in 3.25894 secs using 999.1% CPU
Optimizing NNI: done in 3.06799 secs using 999.3% CPU
Optimizing NNI: done in 4.41608 secs using 999.2% CPU
Optimizing NNI: done in 3.44807 secs using 998.4% CPU
Optimizing NNI: done in 3.19873 secs using 998.2% CPU
Optimizing NNI: done in 4.02113 secs using 998.8% CPU
Optimizing NNI: done in 3.66753 secs using 999% CPU
Optimizing NNI: done in 3.43974 secs using 999% CPU
Iteration 440 / LogL: -40347.916 / Time: 0h:21m:50s (0h:2m:59s left)
Optimizing NNI: done in 4.02213 secs using 999.6% CPU
Optimizing NNI: done in 3.4561 secs using 998.7% CPU
Optimizing NNI: done in 3.74796 secs using 999% CPU
Optimizing NNI: done in 3.97373 secs using 999.1% CPU
Optimizing NNI: done in 3.95503 secs using 998.8% CPU
Optimizing NNI: done in 2.95881 secs using 998.9% CPU
Optimizing NNI: done in 4.001 secs using 999.9% CPU
Optimizing NNI: done in 3.81474 secs using 998.5% CPU
Optimizing NNI: done in 4.04864 secs using 1000% CPU
Optimizing NNI: done in 3.37313 secs using 998.6% CPU
Iteration 450 / LogL: -40348.087 / Time: 0h:22m:28s (0h:2m:30s left)
Log-likelihood cutoff on original alignment: -40448.091
UFBoot trees printed to /researchdrive/zhongj2/tree-reconciliation/iqtree_gene_trees/COG1342.ufboot
Optimizing NNI: done in 2.95844 secs using 997.7% CPU
Optimizing NNI: done in 4.2148 secs using 998.5% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 452: -40341.507
Optimizing NNI: done in 4.08779 secs using 998.7% CPU
Optimizing NNI: done in 2.99163 secs using 999.1% CPU
Optimizing NNI: done in 4.10719 secs using 999.6% CPU
Optimizing NNI: done in 3.68859 secs using 998.5% CPU
Optimizing NNI: done in 3.5432 secs using 998.5% CPU
Optimizing NNI: done in 3.23938 secs using 999.6% CPU
Optimizing NNI: done in 5.04791 secs using 996.8% CPU
Optimizing NNI: done in 2.94754 secs using 999% CPU
Iteration 460 / LogL: -40350.882 / Time: 0h:23m:11s (0h:4m:38s left)
Optimizing NNI: done in 3.87289 secs using 998.9% CPU
Optimizing NNI: done in 4.05397 secs using 998.7% CPU
Optimizing NNI: done in 3.72793 secs using 999.1% CPU
Optimizing NNI: done in 4.17475 secs using 999.5% CPU
Optimizing NNI: done in 3.91234 secs using 999.3% CPU
Optimizing NNI: done in 3.53349 secs using 998.5% CPU
Optimizing NNI: done in 3.16092 secs using 998.8% CPU
Optimizing NNI: done in 3.23235 secs using 998.6% CPU
Optimizing NNI: done in 3.6328 secs using 998.1% CPU
Optimizing NNI: done in 3.27738 secs using 1000% CPU
Iteration 470 / LogL: -40343.277 / Time: 0h:23m:49s (0h:4m:9s left)
Optimizing NNI: done in 3.41605 secs using 998.8% CPU
Optimizing NNI: done in 3.84955 secs using 999.7% CPU
Optimizing NNI: done in 2.74606 secs using 998.6% CPU
Optimizing NNI: done in 3.00291 secs using 999.5% CPU
Optimizing NNI: done in 3.01857 secs using 997.2% CPU
Optimizing NNI: done in 2.6974 secs using 998.3% CPU
Optimizing NNI: done in 2.79875 secs using 998.5% CPU
Optimizing NNI: done in 3.22832 secs using 999% CPU
Optimizing NNI: done in 3.06962 secs using 999.4% CPU
Optimizing NNI: done in 3.0652 secs using 999.6% CPU
Iteration 480 / LogL: -40356.376 / Time: 0h:24m:22s (0h:3m:39s left)
Optimizing NNI: done in 2.25403 secs using 998.3% CPU
Optimizing NNI: done in 2.40338 secs using 999.1% CPU
Optimizing NNI: done in 2.62053 secs using 998.6% CPU
Optimizing NNI: done in 2.29804 secs using 998% CPU
Optimizing NNI: done in 2.30952 secs using 998.5% CPU
Optimizing NNI: done in 1.98095 secs using 999.1% CPU
Optimizing NNI: done in 2.23052 secs using 996.8% CPU
Optimizing NNI: done in 2.38939 secs using 1000% CPU
Optimizing NNI: done in 2.75981 secs using 999.3% CPU
Optimizing NNI: done in 2.4177 secs using 998.2% CPU
Iteration 490 / LogL: -40344.375 / Time: 0h:24m:47s (0h:3m:8s left)
Optimizing NNI: done in 2.62012 secs using 999.2% CPU
Optimizing NNI: done in 2.00557 secs using 998.3% CPU
Optimizing NNI: done in 2.09444 secs using 999.7% CPU
Optimizing NNI: done in 2.23889 secs using 999.7% CPU
Optimizing NNI: done in 2.55918 secs using 997.8% CPU
Optimizing NNI: done in 1.92052 secs using 998.1% CPU
Optimizing NNI: done in 2.32836 secs using 999.2% CPU
Optimizing NNI: done in 1.65559 secs using 999.2% CPU
Optimizing NNI: done in 2.49063 secs using 999.3% CPU
Optimizing NNI: done in 1.72628 secs using 999.7% CPU
Iteration 500 / LogL: -40369.833 / Time: 0h:25m:9s (0h:2m:37s left)
Log-likelihood cutoff on original alignment: -40433.037
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.953
NOTE: UFBoot does not converge, continue at least 100 more iterations
UFBoot trees printed to /researchdrive/zhongj2/tree-reconciliation/iqtree_gene_trees/COG1342.ufboot
Optimizing NNI: done in 3.04698 secs using 999.4% CPU
Optimizing NNI: done in 3.32834 secs using 998.6% CPU
Optimizing NNI: done in 2.93403 secs using 999.5% CPU
Optimizing NNI: done in 2.81654 secs using 1000% CPU
Optimizing NNI: done in 2.77452 secs using 997.7% CPU
Optimizing NNI: done in 2.85579 secs using 999.1% CPU
Optimizing NNI: done in 2.31827 secs using 997.5% CPU
Optimizing NNI: done in 2.58413 secs using 999.2% CPU
Optimizing NNI: done in 2.47099 secs using 998.1% CPU
Optimizing NNI: done in 1.84484 secs using 998% CPU
Iteration 510 / LogL: -40367.610 / Time: 0h:25m:39s (0h:4m:32s left)
Optimizing NNI: done in 2.19973 secs using 999.7% CPU
Optimizing NNI: done in 2.31842 secs using 999.2% CPU
Optimizing NNI: done in 2.13633 secs using 998.2% CPU
Optimizing NNI: done in 2.12004 secs using 999% CPU
Optimizing NNI: done in 2.45411 secs using 998.4% CPU
Optimizing NNI: done in 2.23086 secs using 1000% CPU
Optimizing NNI: done in 3.56691 secs using 999.1% CPU
Optimizing NNI: done in 3.12616 secs using 997.6% CPU
Optimizing NNI: done in 4.16679 secs using 995.1% CPU
Optimizing NNI: done in 3.39766 secs using 998.7% CPU
Iteration 520 / LogL: -40349.831 / Time: 0h:26m:8s (0h:4m:1s left)
Optimizing NNI: done in 2.76354 secs using 999.2% CPU
Optimizing NNI: done in 2.98823 secs using 999% CPU
Optimizing NNI: done in 3.64854 secs using 998.4% CPU
Optimizing NNI: done in 3.40218 secs using 998.5% CPU
Optimizing NNI: done in 2.57219 secs using 999.3% CPU
Optimizing NNI: done in 3.08046 secs using 998.7% CPU
Optimizing NNI: done in 3.85416 secs using 999.4% CPU
Optimizing NNI: done in 4.51817 secs using 998.6% CPU
Optimizing NNI: done in 3.39233 secs using 998.7% CPU
Optimizing NNI: done in 3.50981 secs using 999.4% CPU
Iteration 530 / LogL: -40375.345 / Time: 0h:26m:44s (0h:3m:32s left)
Optimizing NNI: done in 3.33095 secs using 997.7% CPU
Optimizing NNI: done in 4.08786 secs using 999.4% CPU
Optimizing NNI: done in 2.66047 secs using 997.6% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 533: -40339.107
Optimizing NNI: done in 3.2815 secs using 998.3% CPU
Optimizing NNI: done in 2.85748 secs using 998.4% CPU
Optimizing NNI: done in 3.48389 secs using 998.9% CPU
Optimizing NNI: done in 3.37963 secs using 998.9% CPU
Optimizing NNI: done in 2.5295 secs using 997.9% CPU
Optimizing NNI: done in 3.47605 secs using 998.8% CPU
Optimizing NNI: done in 3.51883 secs using 999.4% CPU
Iteration 540 / LogL: -40360.328 / Time: 0h:27m:20s (0h:4m:43s left)
Optimizing NNI: done in 3.62114 secs using 998.7% CPU
Optimizing NNI: done in 3.22062 secs using 1000% CPU
Optimizing NNI: done in 2.82321 secs using 998.1% CPU
Optimizing NNI: done in 2.91571 secs using 998% CPU
Optimizing NNI: done in 3.45478 secs using 998.7% CPU
Optimizing NNI: done in 2.81805 secs using 998.6% CPU
Optimizing NNI: done in 4.01922 secs using 999.1% CPU
Optimizing NNI: done in 3.54966 secs using 999.7% CPU
Optimizing NNI: done in 2.99777 secs using 999.7% CPU
Optimizing NNI: done in 3.66712 secs using 999.2% CPU
Iteration 550 / LogL: -40355.700 / Time: 0h:27m:55s (0h:4m:13s left)
Log-likelihood cutoff on original alignment: -40433.037
UFBoot trees printed to /researchdrive/zhongj2/tree-reconciliation/iqtree_gene_trees/COG1342.ufboot
Optimizing NNI: done in 3.39863 secs using 998.7% CPU
Optimizing NNI: done in 3.67136 secs using 998.6% CPU
Optimizing NNI: done in 3.17032 secs using 998.8% CPU
Optimizing NNI: done in 3.03594 secs using 999.3% CPU
Optimizing NNI: done in 4.55775 secs using 999.4% CPU
Optimizing NNI: done in 4.03018 secs using 998.3% CPU
Optimizing NNI: done in 3.1298 secs using 999% CPU
Optimizing NNI: done in 3.78867 secs using 998.5% CPU
Optimizing NNI: done in 3.66748 secs using 998.7% CPU
Optimizing NNI: done in 3.05246 secs using 996.9% CPU
Iteration 560 / LogL: -40342.048 / Time: 0h:28m:36s (0h:3m:44s left)
Optimizing NNI: done in 3.53152 secs using 999.4% CPU
Optimizing NNI: done in 3.10186 secs using 998.8% CPU
Optimizing NNI: done in 3.09703 secs using 999.2% CPU
Optimizing NNI: done in 3.07058 secs using 997.8% CPU
Optimizing NNI: done in 3.941 secs using 998.6% CPU
Optimizing NNI: done in 3.33904 secs using 999.3% CPU
Optimizing NNI: done in 3.49868 secs using 999.4% CPU
Optimizing NNI: done in 3.94144 secs using 998.6% CPU
Optimizing NNI: done in 2.64243 secs using 999.7% CPU
Optimizing NNI: done in 3.33119 secs using 999.5% CPU
Iteration 570 / LogL: -40345.569 / Time: 0h:29m:12s (0h:3m:13s left)
Optimizing NNI: done in 3.51066 secs using 998.3% CPU
Optimizing NNI: done in 3.9219 secs using 998.9% CPU
Optimizing NNI: done in 3.4014 secs using 999% CPU
Optimizing NNI: done in 3.32313 secs using 999.6% CPU
Optimizing NNI: done in 3.8069 secs using 998.7% CPU
Optimizing NNI: done in 3.27914 secs using 999.2% CPU
Optimizing NNI: done in 2.9543 secs using 999.5% CPU
Optimizing NNI: done in 3.39415 secs using 999.2% CPU
Optimizing NNI: done in 4.20415 secs using 998.4% CPU
Optimizing NNI: done in 3.59916 secs using 999.4% CPU
Iteration 580 / LogL: -40348.806 / Time: 0h:29m:49s (0h:2m:43s left)
Optimizing NNI: done in 3.47109 secs using 999% CPU
Optimizing NNI: done in 3.49435 secs using 999.6% CPU
Optimizing NNI: done in 3.79076 secs using 998.6% CPU
Optimizing NNI: done in 2.86926 secs using 998.2% CPU
Optimizing NNI: done in 2.73786 secs using 999.5% CPU
Optimizing NNI: done in 3.38079 secs using 997.8% CPU
Optimizing NNI: done in 3.75163 secs using 999% CPU
Optimizing NNI: done in 3.30743 secs using 998.5% CPU
Optimizing NNI: done in 3.86701 secs using 998% CPU
Optimizing NNI: done in 3.72511 secs using 998.3% CPU
Iteration 590 / LogL: -40348.953 / Time: 0h:30m:25s (0h:2m:13s left)
Optimizing NNI: done in 3.79551 secs using 999% CPU
Optimizing NNI: done in 3.77736 secs using 998.6% CPU
Optimizing NNI: done in 3.89482 secs using 999% CPU
Optimizing NNI: done in 3.15699 secs using 999.7% CPU
Optimizing NNI: done in 4.42586 secs using 999.2% CPU
Optimizing NNI: done in 3.99586 secs using 999.6% CPU
Optimizing NNI: done in 3.66883 secs using 999.1% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 597: -40338.977
Optimizing NNI: done in 3.4935 secs using 999.4% CPU
Optimizing NNI: done in 3.8163 secs using 999% CPU
Optimizing NNI: done in 3.10335 secs using 998.9% CPU
Iteration 600 / LogL: -40358.770 / Time: 0h:31m:5s (0h:5m:2s left)
Log-likelihood cutoff on original alignment: -40433.037
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.961
NOTE: UFBoot does not converge, continue at least 100 more iterations
UFBoot trees printed to /researchdrive/zhongj2/tree-reconciliation/iqtree_gene_trees/COG1342.ufboot
Optimizing NNI: done in 3.07778 secs using 998.1% CPU
Optimizing NNI: done in 3.39125 secs using 998.6% CPU
Optimizing NNI: done in 3.8389 secs using 998.5% CPU
Optimizing NNI: done in 3.36574 secs using 998.6% CPU
Optimizing NNI: done in 3.13502 secs using 997.6% CPU
Optimizing NNI: done in 3.43071 secs using 998.6% CPU
Optimizing NNI: done in 3.04996 secs using 999.5% CPU
Optimizing NNI: done in 3.02251 secs using 999.6% CPU
Optimizing NNI: done in 3.517 secs using 999.3% CPU
Optimizing NNI: done in 2.99233 secs using 998.6% CPU
Iteration 610 / LogL: -40378.757 / Time: 0h:31m:44s (0h:4m:41s left)
Optimizing NNI: done in 3.29786 secs using 999.2% CPU
Optimizing NNI: done in 2.68667 secs using 999.2% CPU
Optimizing NNI: done in 3.57289 secs using 999% CPU
Optimizing NNI: done in 3.6295 secs using 998.4% CPU
Optimizing NNI: done in 3.28428 secs using 998.8% CPU
Optimizing NNI: done in 3.29353 secs using 999.6% CPU
Optimizing NNI: done in 3.00452 secs using 999.3% CPU
Optimizing NNI: done in 3.71389 secs using 998.7% CPU
Optimizing NNI: done in 3.76793 secs using 999.1% CPU
Optimizing NNI: done in 4.13157 secs using 998.2% CPU
Iteration 620 / LogL: -40359.591 / Time: 0h:32m:20s (0h:4m:10s left)
Optimizing NNI: done in 3.5287 secs using 999.8% CPU
Optimizing NNI: done in 3.96699 secs using 999.5% CPU
Optimizing NNI: done in 3.55329 secs using 999.3% CPU
Optimizing NNI: done in 3.39544 secs using 999% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 624: -40338.353
Optimizing NNI: done in 3.63228 secs using 999.5% CPU
Optimizing NNI: done in 3.28709 secs using 999.1% CPU
Optimizing NNI: done in 3.54652 secs using 998.9% CPU
Optimizing NNI: done in 4.49705 secs using 998.1% CPU
Optimizing NNI: done in 3.21642 secs using 998.7% CPU
Optimizing NNI: done in 3.55972 secs using 999.2% CPU
Iteration 630 / LogL: -40349.454 / Time: 0h:33m:0s (0h:4m:55s left)
Optimizing NNI: done in 4.2413 secs using 1000% CPU
Optimizing NNI: done in 3.95989 secs using 998.9% CPU
Optimizing NNI: done in 3.14249 secs using 998.2% CPU
Optimizing NNI: done in 3.99645 secs using 998.5% CPU
Optimizing NNI: done in 4.0618 secs using 999.8% CPU
Optimizing NNI: done in 3.62947 secs using 999.4% CPU
Optimizing NNI: done in 3.24666 secs using 997.9% CPU
Optimizing NNI: done in 3.87778 secs using 997.6% CPU
Optimizing NNI: done in 3.36041 secs using 998.9% CPU
Optimizing NNI: done in 2.89478 secs using 999.8% CPU
Iteration 640 / LogL: -40347.239 / Time: 0h:33m:38s (0h:4m:25s left)
Optimizing NNI: done in 3.76999 secs using 997.7% CPU
Optimizing NNI: done in 3.43309 secs using 998.7% CPU
Optimizing NNI: done in 3.67246 secs using 998.9% CPU
Optimizing NNI: done in 3.72571 secs using 999.6% CPU
Optimizing NNI: done in 3.75847 secs using 998.3% CPU
Optimizing NNI: done in 4.25068 secs using 999.7% CPU
Optimizing NNI: done in 4.14281 secs using 999.7% CPU
Optimizing NNI: done in 3.9213 secs using 998% CPU
Optimizing NNI: done in 3.5129 secs using 999% CPU
Optimizing NNI: done in 4.62499 secs using 999.2% CPU
Iteration 650 / LogL: -40347.699 / Time: 0h:34m:19s (0h:3m:54s left)
Log-likelihood cutoff on original alignment: -40433.037
UFBoot trees printed to /researchdrive/zhongj2/tree-reconciliation/iqtree_gene_trees/COG1342.ufboot
Optimizing NNI: done in 3.99329 secs using 999% CPU
Optimizing NNI: done in 3.88229 secs using 998.5% CPU
Optimizing NNI: done in 3.50743 secs using 999.4% CPU
Optimizing NNI: done in 3.65417 secs using 999.8% CPU
Optimizing NNI: done in 3.00913 secs using 995% CPU
Optimizing NNI: done in 3.89037 secs using 998.6% CPU
Optimizing NNI: done in 3.37876 secs using 999% CPU
Optimizing NNI: done in 3.55239 secs using 999% CPU
Optimizing NNI: done in 4.00233 secs using 999.5% CPU
Optimizing NNI: done in 3.78228 secs using 999.8% CPU
Iteration 660 / LogL: -40347.977 / Time: 0h:35m:2s (0h:3m:24s left)
Optimizing NNI: done in 3.54044 secs using 999.3% CPU
Optimizing NNI: done in 3.54811 secs using 998.8% CPU
Optimizing NNI: done in 2.54236 secs using 998.3% CPU
Optimizing NNI: done in 3.00968 secs using 999.2% CPU
Optimizing NNI: done in 2.85227 secs using 999.2% CPU
Optimizing NNI: done in 2.81988 secs using 998.9% CPU
Optimizing NNI: done in 3.13202 secs using 998.8% CPU
Optimizing NNI: done in 2.25089 secs using 999% CPU
Optimizing NNI: done in 2.66269 secs using 998% CPU
Optimizing NNI: done in 2.54454 secs using 999.6% CPU
Iteration 670 / LogL: -40348.319 / Time: 0h:35m:32s (0h:2m:52s left)
Optimizing NNI: done in 2.72374 secs using 999% CPU
Optimizing NNI: done in 2.93305 secs using 999% CPU
Optimizing NNI: done in 3.77138 secs using 999% CPU
Optimizing NNI: done in 2.92616 secs using 998.5% CPU
Optimizing NNI: done in 3.14609 secs using 999.2% CPU
Optimizing NNI: done in 2.69066 secs using 999.1% CPU
Optimizing NNI: done in 3.70368 secs using 999% CPU
Optimizing NNI: done in 3.39988 secs using 999.4% CPU
Optimizing NNI: done in 3.24386 secs using 998.3% CPU
Optimizing NNI: done in 2.63689 secs using 998.6% CPU
Iteration 680 / LogL: -40343.621 / Time: 0h:36m:5s (0h:2m:20s left)
Optimizing NNI: done in 2.53098 secs using 999.1% CPU
Optimizing NNI: done in 2.6441 secs using 998.4% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 682: -40337.586
Optimizing NNI: done in 2.57673 secs using 998.8% CPU
Optimizing NNI: done in 2.71679 secs using 999% CPU
Optimizing NNI: done in 3.1288 secs using 1000% CPU
Optimizing NNI: done in 2.86751 secs using 998.6% CPU
Optimizing NNI: done in 2.61055 secs using 998% CPU
Optimizing NNI: done in 2.39376 secs using 998.3% CPU
Optimizing NNI: done in 2.98116 secs using 1000% CPU
Optimizing NNI: done in 3.25537 secs using 998.7% CPU
Iteration 690 / LogL: -40338.525 / Time: 0h:36m:36s (0h:4m:53s left)
Optimizing NNI: done in 2.45553 secs using 999.5% CPU
Optimizing NNI: done in 2.8526 secs using 998.5% CPU
Optimizing NNI: done in 3.32264 secs using 999.1% CPU
Optimizing NNI: done in 2.88037 secs using 999.2% CPU
Optimizing NNI: done in 3.2855 secs using 999.8% CPU
Optimizing NNI: done in 3.15653 secs using 997.9% CPU
Optimizing NNI: done in 3.34269 secs using 997.1% CPU
Optimizing NNI: done in 3.14659 secs using 998.1% CPU
Optimizing NNI: done in 2.93012 secs using 998.1% CPU
Optimizing NNI: done in 3.22419 secs using 998% CPU
Iteration 700 / LogL: -40342.983 / Time: 0h:37m:8s (0h:4m:21s left)
Log-likelihood cutoff on original alignment: -40433.037
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.964
NOTE: UFBoot does not converge, continue at least 100 more iterations
UFBoot trees printed to /researchdrive/zhongj2/tree-reconciliation/iqtree_gene_trees/COG1342.ufboot
Optimizing NNI: done in 3.26458 secs using 997.5% CPU
Optimizing NNI: done in 4.39544 secs using 999.4% CPU
Optimizing NNI: done in 3.48114 secs using 997.5% CPU
Optimizing NNI: done in 3.72515 secs using 999.8% CPU
Optimizing NNI: done in 5.10698 secs using 998.4% CPU
Optimizing NNI: done in 3.49284 secs using 998.1% CPU
Optimizing NNI: done in 3.54509 secs using 997.2% CPU
Optimizing NNI: done in 2.90799 secs using 998.8% CPU
Optimizing NNI: done in 3.3118 secs using 998.4% CPU
Optimizing NNI: done in 3.92558 secs using 998.5% CPU
Iteration 710 / LogL: -40343.163 / Time: 0h:37m:48s (0h:4m:48s left)
Optimizing NNI: done in 3.34303 secs using 999.5% CPU
Optimizing NNI: done in 3.28333 secs using 999.3% CPU
Optimizing NNI: done in 3.17091 secs using 999.4% CPU
Optimizing NNI: done in 3.46494 secs using 998.7% CPU
Optimizing NNI: done in 3.69752 secs using 999.9% CPU
Optimizing NNI: done in 4.12798 secs using 998.6% CPU
Optimizing NNI: done in 3.45784 secs using 999.7% CPU
Optimizing NNI: done in 2.85543 secs using 999.6% CPU
Optimizing NNI: done in 2.69833 secs using 998.5% CPU
Optimizing NNI: done in 3.14679 secs using 999.1% CPU
Iteration 720 / LogL: -40339.073 / Time: 0h:38m:23s (0h:4m:16s left)
Optimizing NNI: done in 3.68484 secs using 998.6% CPU
Optimizing NNI: done in 2.93924 secs using 999.5% CPU
Optimizing NNI: done in 3.5418 secs using 999.9% CPU
Optimizing NNI: done in 3.55893 secs using 998.2% CPU
Optimizing NNI: done in 3.0481 secs using 999.3% CPU
Optimizing NNI: done in 3.26741 secs using 999.3% CPU
Optimizing NNI: done in 3.44756 secs using 998% CPU
Optimizing NNI: done in 3.05519 secs using 999.2% CPU
Optimizing NNI: done in 3.43096 secs using 999.6% CPU
Optimizing NNI: done in 2.98777 secs using 999.4% CPU
Iteration 730 / LogL: -40358.750 / Time: 0h:38m:58s (0h:3m:44s left)
Optimizing NNI: done in 3.49139 secs using 998.5% CPU
Optimizing NNI: done in 3.51108 secs using 997.8% CPU
Optimizing NNI: done in 3.76859 secs using 998.9% CPU
Optimizing NNI: done in 3.42995 secs using 999.2% CPU
Optimizing NNI: done in 3.96958 secs using 1000% CPU
Optimizing NNI: done in 3.30938 secs using 998.4% CPU
Optimizing NNI: done in 3.9249 secs using 999.1% CPU
Optimizing NNI: done in 3.20268 secs using 999.9% CPU
Optimizing NNI: done in 2.72503 secs using 998.5% CPU
Optimizing NNI: done in 2.9888 secs using 998.4% CPU
Iteration 740 / LogL: -40356.755 / Time: 0h:39m:33s (0h:3m:12s left)
Optimizing NNI: done in 4.17548 secs using 999.2% CPU
Optimizing NNI: done in 3.6332 secs using 999.1% CPU
Optimizing NNI: done in 3.13678 secs using 998.7% CPU
Optimizing NNI: done in 3.42863 secs using 999% CPU
Optimizing NNI: done in 3.69224 secs using 999.2% CPU
Optimizing NNI: done in 3.59714 secs using 999.3% CPU
Optimizing NNI: done in 3.21817 secs using 1000% CPU
Optimizing NNI: done in 3.33554 secs using 999.4% CPU
Optimizing NNI: done in 3.60252 secs using 999.4% CPU
Optimizing NNI: done in 3.85716 secs using 1000% CPU
Iteration 750 / LogL: -40369.772 / Time: 0h:40m:11s (0h:2m:40s left)
Log-likelihood cutoff on original alignment: -40433.037
UFBoot trees printed to /researchdrive/zhongj2/tree-reconciliation/iqtree_gene_trees/COG1342.ufboot
Optimizing NNI: done in 3.77014 secs using 998.9% CPU
Optimizing NNI: done in 3.98001 secs using 998.9% CPU
Optimizing NNI: done in 3.91401 secs using 999.8% CPU
Optimizing NNI: done in 2.76928 secs using 998.3% CPU
Optimizing NNI: done in 4.11664 secs using 999.7% CPU
Optimizing NNI: done in 3.28612 secs using 998.4% CPU
Optimizing NNI: done in 3.15214 secs using 999.2% CPU
Optimizing NNI: done in 4.41637 secs using 999.2% CPU
Optimizing NNI: done in 3.2706 secs using 999.9% CPU
Optimizing NNI: done in 3.17456 secs using 999.5% CPU
Iteration 760 / LogL: -40339.240 / Time: 0h:40m:50s (0h:2m:9s left)
Optimizing NNI: done in 3.00824 secs using 998.3% CPU
Optimizing NNI: done in 3.15924 secs using 999.3% CPU
Optimizing NNI: done in 3.59111 secs using 998.4% CPU
BETTER TREE FOUND at iteration 763: -40337.583
Optimizing NNI: done in 3.86161 secs using 998.4% CPU
Optimizing NNI: done in 3.41785 secs using 999.5% CPU
Optimizing NNI: done in 3.3583 secs using 998.5% CPU
Optimizing NNI: done in 3.78154 secs using 998.7% CPU
Optimizing NNI: done in 3.72633 secs using 998.6% CPU
Optimizing NNI: done in 3.32395 secs using 998.4% CPU
Optimizing NNI: done in 3.28681 secs using 998.6% CPU
Iteration 770 / LogL: -40341.821 / Time: 0h:41m:26s (0h:5m:0s left)
Optimizing NNI: done in 3.51974 secs using 999.1% CPU
Optimizing NNI: done in 3.37987 secs using 999.3% CPU
Optimizing NNI: done in 3.23148 secs using 998.8% CPU
Optimizing NNI: done in 2.98603 secs using 999.5% CPU
Optimizing NNI: done in 4.14616 secs using 998.6% CPU
Optimizing NNI: done in 3.54356 secs using 998.3% CPU
Optimizing NNI: done in 2.91495 secs using 999.6% CPU
Optimizing NNI: done in 2.94015 secs using 998.6% CPU
Optimizing NNI: done in 3.75102 secs using 999.5% CPU
Optimizing NNI: done in 2.68554 secs using 999.9% CPU
Iteration 780 / LogL: -40362.428 / Time: 0h:42m:1s (0h:4m:28s left)
Optimizing NNI: done in 4.05444 secs using 998.2% CPU
Optimizing NNI: done in 2.96152 secs using 998.6% CPU
Optimizing NNI: done in 3.11444 secs using 999.7% CPU
Optimizing NNI: done in 2.74868 secs using 998.6% CPU
Optimizing NNI: done in 3.50449 secs using 999.1% CPU
Optimizing NNI: done in 3.46239 secs using 999.2% CPU
Optimizing NNI: done in 3.35494 secs using 997.8% CPU
Optimizing NNI: done in 3.40873 secs using 998.6% CPU
Optimizing NNI: done in 4.31844 secs using 998.6% CPU
Optimizing NNI: done in 3.255 secs using 998.7% CPU
Iteration 790 / LogL: -40349.123 / Time: 0h:42m:37s (0h:3m:56s left)
Optimizing NNI: done in 2.79255 secs using 998.4% CPU
Optimizing NNI: done in 3.25343 secs using 999.1% CPU
Optimizing NNI: done in 3.40291 secs using 999.5% CPU
Optimizing NNI: done in 3.1743 secs using 997.8% CPU
Optimizing NNI: done in 3.6283 secs using 998.4% CPU
Optimizing NNI: done in 3.38506 secs using 999.1% CPU
Optimizing NNI: done in 3.24911 secs using 999.2% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 797: -40337.459
Optimizing NNI: done in 3.15931 secs using 999.7% CPU
Optimizing NNI: done in 3.55077 secs using 998.4% CPU
Optimizing NNI: done in 3.90642 secs using 998.7% CPU
Iteration 800 / LogL: -40358.334 / Time: 0h:43m:13s (0h:5m:14s left)
Log-likelihood cutoff on original alignment: -40433.037
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.974
NOTE: UFBoot does not converge, continue at least 100 more iterations
UFBoot trees printed to /researchdrive/zhongj2/tree-reconciliation/iqtree_gene_trees/COG1342.ufboot
Optimizing NNI: done in 3.43458 secs using 999.3% CPU
Optimizing NNI: done in 3.70651 secs using 998.3% CPU
Optimizing NNI: done in 3.01322 secs using 999.1% CPU
Optimizing NNI: done in 3.46192 secs using 999.5% CPU
Optimizing NNI: done in 3.59817 secs using 998.6% CPU
Optimizing NNI: done in 3.17097 secs using 1000% CPU
Optimizing NNI: done in 2.48769 secs using 999.9% CPU
Optimizing NNI: done in 3.78456 secs using 998.8% CPU
Optimizing NNI: done in 4.06261 secs using 999.1% CPU
Optimizing NNI: done in 3.13494 secs using 999.9% CPU
Iteration 810 / LogL: -40344.229 / Time: 0h:43m:50s (0h:4m:52s left)
Optimizing NNI: done in 3.78474 secs using 999.6% CPU
Optimizing NNI: done in 2.77485 secs using 999.1% CPU
Optimizing NNI: done in 3.53834 secs using 999.2% CPU
Optimizing NNI: done in 2.62797 secs using 999.4% CPU
Optimizing NNI: done in 3.20784 secs using 999.3% CPU
Optimizing NNI: done in 3.31503 secs using 999.4% CPU
Optimizing NNI: done in 3.71108 secs using 999.5% CPU
Optimizing NNI: done in 3.85335 secs using 999% CPU
Optimizing NNI: done in 3.332 secs using 998.8% CPU
Optimizing NNI: done in 3.27377 secs using 998.6% CPU
Iteration 820 / LogL: -40342.101 / Time: 0h:44m:25s (0h:4m:20s left)
Optimizing NNI: done in 3.86159 secs using 998.7% CPU
Optimizing NNI: done in 2.45503 secs using 999.2% CPU
Optimizing NNI: done in 3.62489 secs using 998.6% CPU
Optimizing NNI: done in 3.32387 secs using 999.2% CPU
Optimizing NNI: done in 4.14253 secs using 999.2% CPU
Optimizing NNI: done in 3.00654 secs using 999.2% CPU
Optimizing NNI: done in 3.69974 secs using 997.5% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 827: -40336.806
Optimizing NNI: done in 3.38203 secs using 1000% CPU
Optimizing NNI: done in 3.87396 secs using 998.8% CPU
Optimizing NNI: done in 3.59693 secs using 998.9% CPU
Iteration 830 / LogL: -40358.412 / Time: 0h:45m:3s (0h:5m:16s left)
Optimizing NNI: done in 3.90841 secs using 999.3% CPU
Optimizing NNI: done in 3.45558 secs using 998.9% CPU
Optimizing NNI: done in 3.35922 secs using 999.6% CPU
Optimizing NNI: done in 3.11269 secs using 999.3% CPU
Optimizing NNI: done in 3.94256 secs using 998.3% CPU
Optimizing NNI: done in 2.92285 secs using 999.2% CPU
Optimizing NNI: done in 2.99201 secs using 999.6% CPU
Optimizing NNI: done in 3.55119 secs using 998.8% CPU
Optimizing NNI: done in 3.6551 secs using 998.5% CPU
Optimizing NNI: done in 3.81011 secs using 999.4% CPU
Iteration 840 / LogL: -40347.603 / Time: 0h:45m:39s (0h:4m:44s left)
Optimizing NNI: done in 3.3589 secs using 999.5% CPU
Optimizing NNI: done in 3.21559 secs using 998.1% CPU
Optimizing NNI: done in 2.83319 secs using 998.9% CPU
Optimizing NNI: done in 3.30405 secs using 998.3% CPU
Optimizing NNI: done in 3.9228 secs using 999.2% CPU
Optimizing NNI: done in 3.63258 secs using 998.7% CPU
Optimizing NNI: done in 3.18283 secs using 999.2% CPU
Optimizing NNI: done in 2.73607 secs using 999.2% CPU
Optimizing NNI: done in 3.12353 secs using 999.5% CPU
Optimizing NNI: done in 3.56391 secs using 999% CPU
Iteration 850 / LogL: -40346.017 / Time: 0h:46m:14s (0h:4m:11s left)
Log-likelihood cutoff on original alignment: -40433.037
UFBoot trees printed to /researchdrive/zhongj2/tree-reconciliation/iqtree_gene_trees/COG1342.ufboot
Optimizing NNI: done in 5.02129 secs using 999% CPU
Optimizing NNI: done in 3.58862 secs using 999.2% CPU
Optimizing NNI: done in 3.2323 secs using 998.8% CPU
Optimizing NNI: done in 3.64866 secs using 998.7% CPU
Optimizing NNI: done in 3.61552 secs using 999.1% CPU
Optimizing NNI: done in 3.69049 secs using 998% CPU
Optimizing NNI: done in 3.69786 secs using 999.2% CPU
Optimizing NNI: done in 3.40315 secs using 999.4% CPU
Optimizing NNI: done in 3.46296 secs using 998.3% CPU
Optimizing NNI: done in 2.50208 secs using 997.5% CPU
Iteration 860 / LogL: -40387.761 / Time: 0h:46m:53s (0h:3m:39s left)
Optimizing NNI: done in 3.06127 secs using 999.9% CPU
Optimizing NNI: done in 3.24419 secs using 999.6% CPU
Optimizing NNI: done in 3.71587 secs using 999.8% CPU
Optimizing NNI: done in 3.66391 secs using 998.6% CPU
Optimizing NNI: done in 3.97935 secs using 998.3% CPU
Optimizing NNI: done in 3.01763 secs using 998.3% CPU
Optimizing NNI: done in 2.60705 secs using 998.9% CPU
Optimizing NNI: done in 3.43135 secs using 999.8% CPU
Optimizing NNI: done in 3.41523 secs using 999.6% CPU
Optimizing NNI: done in 4.00505 secs using 999.2% CPU
Iteration 870 / LogL: -40343.961 / Time: 0h:47m:29s (0h:3m:6s left)
Optimizing NNI: done in 3.22591 secs using 999.8% CPU
Optimizing NNI: done in 2.81546 secs using 999.4% CPU
Optimizing NNI: done in 3.73664 secs using 998.5% CPU
Optimizing NNI: done in 3.53236 secs using 999.2% CPU
Optimizing NNI: done in 3.02955 secs using 998.2% CPU
Optimizing NNI: done in 2.91372 secs using 1001% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 876: -40336.305
Optimizing NNI: done in 3.02456 secs using 999.4% CPU
Optimizing NNI: done in 3.25105 secs using 999.5% CPU
Optimizing NNI: done in 3.66676 secs using 999.4% CPU
Optimizing NNI: done in 3.07403 secs using 998.4% CPU
Iteration 880 / LogL: -40371.865 / Time: 0h:48m:4s (0h:5m:15s left)
Optimizing NNI: done in 3.34933 secs using 999.1% CPU
Optimizing NNI: done in 3.644 secs using 998.9% CPU
Optimizing NNI: done in 2.79746 secs using 999% CPU
Optimizing NNI: done in 3.42073 secs using 998.7% CPU
Optimizing NNI: done in 2.88159 secs using 1000% CPU
Optimizing NNI: done in 3.05278 secs using 999.1% CPU
Optimizing NNI: done in 3.58303 secs using 999.7% CPU
Optimizing NNI: done in 2.67406 secs using 998.8% CPU
Optimizing NNI: done in 3.14185 secs using 999.6% CPU
Optimizing NNI: done in 2.97274 secs using 997.9% CPU
Iteration 890 / LogL: -40354.732 / Time: 0h:48m:38s (0h:4m:42s left)
Optimizing NNI: done in 2.89356 secs using 999.1% CPU
Optimizing NNI: done in 2.95196 secs using 999.5% CPU
Optimizing NNI: done in 2.85016 secs using 998.6% CPU
Optimizing NNI: done in 3.22151 secs using 998.8% CPU
Optimizing NNI: done in 3.92964 secs using 999.9% CPU
Optimizing NNI: done in 2.89984 secs using 999.4% CPU
Optimizing NNI: done in 3.14193 secs using 1000% CPU
Optimizing NNI: done in 2.90681 secs using 999.8% CPU
Optimizing NNI: done in 3.6801 secs using 998.9% CPU
Optimizing NNI: done in 3.0635 secs using 998.8% CPU
Iteration 900 / LogL: -40342.928 / Time: 0h:49m:11s (0h:4m:9s left)
Log-likelihood cutoff on original alignment: -40433.037
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.979
NOTE: UFBoot does not converge, continue at least 100 more iterations
UFBoot trees printed to /researchdrive/zhongj2/tree-reconciliation/iqtree_gene_trees/COG1342.ufboot
Optimizing NNI: done in 2.62461 secs using 998.2% CPU
Optimizing NNI: done in 2.76005 secs using 998.7% CPU
Optimizing NNI: done in 3.14548 secs using 998.4% CPU
Optimizing NNI: done in 2.5495 secs using 997.7% CPU
Optimizing NNI: done in 2.21885 secs using 1000% CPU
Optimizing NNI: done in 3.14445 secs using 999.9% CPU
Optimizing NNI: done in 3.19227 secs using 999% CPU
Optimizing NNI: done in 2.42767 secs using 999% CPU
Optimizing NNI: done in 2.67076 secs using 999.5% CPU
Optimizing NNI: done in 2.7434 secs using 999.3% CPU
Iteration 910 / LogL: -40344.693 / Time: 0h:49m:42s (0h:4m:55s left)
Optimizing NNI: done in 2.62077 secs using 999.6% CPU
Optimizing NNI: done in 2.80091 secs using 999.3% CPU
Optimizing NNI: done in 2.70519 secs using 1000% CPU
Optimizing NNI: done in 2.42903 secs using 1000% CPU
Optimizing NNI: done in 3.02576 secs using 1000% CPU
Optimizing NNI: done in 2.61872 secs using 998.4% CPU
Optimizing NNI: done in 2.59155 secs using 998.8% CPU
Optimizing NNI: done in 3.10939 secs using 998.5% CPU
Optimizing NNI: done in 2.44147 secs using 998.6% CPU
Optimizing NNI: done in 2.71594 secs using 998.2% CPU
Iteration 920 / LogL: -40343.401 / Time: 0h:50m:11s (0h:4m:22s left)
Optimizing NNI: done in 2.40653 secs using 997.9% CPU
Optimizing NNI: done in 2.72408 secs using 999.2% CPU
Optimizing NNI: done in 2.30219 secs using 997.7% CPU
Optimizing NNI: done in 1.97768 secs using 1001% CPU
Optimizing NNI: done in 2.4004 secs using 999.3% CPU
Optimizing NNI: done in 2.47974 secs using 999% CPU
Optimizing NNI: done in 2.54884 secs using 998.1% CPU
Optimizing NNI: done in 3.09564 secs using 998% CPU
Optimizing NNI: done in 2.97887 secs using 998.2% CPU
Optimizing NNI: done in 3.29623 secs using 999.2% CPU
Iteration 930 / LogL: -40338.155 / Time: 0h:50m:39s (0h:3m:49s left)
Optimizing NNI: done in 3.01231 secs using 998.8% CPU
Optimizing NNI: done in 2.53808 secs using 1000% CPU
Optimizing NNI: done in 3.5684 secs using 999.8% CPU
Optimizing NNI: done in 2.19131 secs using 999.7% CPU
Optimizing NNI: done in 2.37419 secs using 998.2% CPU
Optimizing NNI: done in 2.62666 secs using 997.9% CPU
Optimizing NNI: done in 2.44085 secs using 998.7% CPU
Optimizing NNI: done in 2.67914 secs using 999.3% CPU
Optimizing NNI: done in 2.82711 secs using 998.7% CPU
Optimizing NNI: done in 2.70973 secs using 998.8% CPU
Iteration 940 / LogL: -40338.381 / Time: 0h:51m:8s (0h:3m:16s left)
Optimizing NNI: done in 2.5516 secs using 999% CPU
Optimizing NNI: done in 2.54727 secs using 999.3% CPU
Optimizing NNI: done in 2.42279 secs using 999.3% CPU
Optimizing NNI: done in 2.76011 secs using 998.4% CPU
Optimizing NNI: done in 2.75465 secs using 999.3% CPU
Optimizing NNI: done in 2.51478 secs using 999.5% CPU
Optimizing NNI: done in 2.31272 secs using 998.7% CPU
Optimizing NNI: done in 2.07703 secs using 1001% CPU
Optimizing NNI: done in 2.44406 secs using 999% CPU
Optimizing NNI: done in 2.69735 secs using 999.1% CPU
Iteration 950 / LogL: -40348.369 / Time: 0h:51m:35s (0h:2m:43s left)
Log-likelihood cutoff on original alignment: -40433.037
UFBoot trees printed to /researchdrive/zhongj2/tree-reconciliation/iqtree_gene_trees/COG1342.ufboot
Optimizing NNI: done in 2.61608 secs using 998.6% CPU
Optimizing NNI: done in 2.37114 secs using 999.8% CPU
Optimizing NNI: done in 2.95826 secs using 997.2% CPU
Optimizing NNI: done in 2.56747 secs using 999.4% CPU
Optimizing NNI: done in 2.49743 secs using 998.2% CPU
Optimizing NNI: done in 2.81544 secs using 998.7% CPU
Optimizing NNI: done in 3.11318 secs using 997.8% CPU
Optimizing NNI: done in 2.70753 secs using 998.8% CPU
Optimizing NNI: done in 2.87274 secs using 998.1% CPU
Optimizing NNI: done in 3.12763 secs using 998.6% CPU
Iteration 960 / LogL: -40343.593 / Time: 0h:52m:6s (0h:2m:10s left)
Optimizing NNI: done in 3.55313 secs using 999.5% CPU
Optimizing NNI: done in 3.42284 secs using 999.2% CPU
Optimizing NNI: done in 2.46545 secs using 999.1% CPU
Optimizing NNI: done in 3.03997 secs using 998.8% CPU
Optimizing NNI: done in 2.35757 secs using 998.4% CPU
Optimizing NNI: done in 2.75277 secs using 1000% CPU
Optimizing NNI: done in 2.20853 secs using 998.7% CPU
Optimizing NNI: done in 2.4511 secs using 999.3% CPU
Optimizing NNI: done in 2.34312 secs using 999.6% CPU
Optimizing NNI: done in 2.11025 secs using 1000% CPU
Iteration 970 / LogL: -40350.636 / Time: 0h:52m:35s (0h:1m:37s left)
Optimizing NNI: done in 2.08841 secs using 998.7% CPU
Optimizing NNI: done in 2.46153 secs using 1000% CPU
Optimizing NNI: done in 2.25417 secs using 999.1% CPU
Optimizing NNI: done in 1.85746 secs using 998.4% CPU
Optimizing NNI: done in 2.54581 secs using 999.8% CPU
Optimizing NNI: done in 2.56326 secs using 998.4% CPU
Optimizing NNI: done in 3.33599 secs using 999.5% CPU
Optimizing NNI: done in 3.03945 secs using 999.1% CPU
Optimizing NNI: done in 2.80232 secs using 999.2% CPU
Optimizing NNI: done in 2.73953 secs using 999% CPU
Iteration 980 / LogL: -40347.809 / Time: 0h:53m:2s (0h:1m:5s left)
Optimizing NNI: done in 3.272 secs using 998.6% CPU
Optimizing NNI: done in 3.01811 secs using 998.8% CPU
Optimizing NNI: done in 3.13539 secs using 999.5% CPU
Optimizing NNI: done in 3.04647 secs using 999.7% CPU
Optimizing NNI: done in 2.88354 secs using 999% CPU
Optimizing NNI: done in 2.73714 secs using 999.6% CPU
Optimizing NNI: done in 2.67084 secs using 999.6% CPU
Optimizing NNI: done in 2.27949 secs using 999.3% CPU
Optimizing NNI: done in 2.92438 secs using 999.1% CPU
Optimizing NNI: done in 2.80547 secs using 998.2% CPU
Iteration 990 / LogL: -40359.139 / Time: 0h:53m:33s (0h:0m:32s left)
Optimizing NNI: done in 2.77878 secs using 997.9% CPU
Optimizing NNI: done in 2.72103 secs using 998.6% CPU
Optimizing NNI: done in 2.43444 secs using 999.6% CPU
Optimizing NNI: done in 2.65483 secs using 999.2% CPU
Optimizing NNI: done in 2.81957 secs using 998.8% CPU
Optimizing NNI: done in 2.61539 secs using 998.8% CPU
Optimizing NNI: done in 2.74463 secs using 998.9% CPU
Optimizing NNI: done in 3.56459 secs using 999.2% CPU
Optimizing NNI: done in 1.7799 secs using 999.4% CPU
Optimizing NNI: done in 2.07224 secs using 998.9% CPU
Iteration 1000 / LogL: -40353.030 / Time: 0h:54m:1s (0h:0m:0s left)
Log-likelihood cutoff on original alignment: -40433.037
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.983
NOTE: UFBoot does not converge, continue at least 100 more iterations
UFBoot trees printed to /researchdrive/zhongj2/tree-reconciliation/iqtree_gene_trees/COG1342.ufboot
Optimizing NNI: done in 2.29155 secs using 999.8% CPU
WARNING: bootstrap analysis did not converge. You should rerun with higher number of iterations (-nm option)
TREE SEARCH COMPLETED AFTER 1001 ITERATIONS / Time: 0h:54m:5s

--------------------------------------------------------------------
|                    FINALIZING TREE SEARCH                        |
--------------------------------------------------------------------
Performs final model parameters optimization
Estimate model parameters (epsilon = 0.010)
1. Initial log-likelihood: -40336.305
Optimal log-likelihood: -40336.303
Site proportion and rates:  (0.079,0.056) (0.073,0.157) (0.184,0.344) (0.109,0.644) (0.211,0.976) (0.206,1.529) (0.138,2.382)
Parameters optimization took 1 rounds (0.459 sec)
BEST SCORE FOUND : -40336.303
Creating bootstrap support values...
Split supports printed to NEXUS file /researchdrive/zhongj2/tree-reconciliation/iqtree_gene_trees/COG1342.splits.nex
Total tree length: 161.129

Total number of iterations: 1001
CPU time used for tree search: 30946.948 sec (8h:35m:46s)
Wall-clock time used for tree search: 3242.511 sec (0h:54m:2s)
Total CPU time used: 30984.020 sec (8h:36m:24s)
Total wall-clock time used: 3247.393 sec (0h:54m:7s)
UFBoot trees printed to /researchdrive/zhongj2/tree-reconciliation/iqtree_gene_trees/COG1342.ufboot

Computing bootstrap consensus tree...
Reading input file /researchdrive/zhongj2/tree-reconciliation/iqtree_gene_trees/COG1342.splits.nex...
217 taxa and 2483 splits.
Consensus tree written to /researchdrive/zhongj2/tree-reconciliation/iqtree_gene_trees/COG1342.contree
Reading input trees file /researchdrive/zhongj2/tree-reconciliation/iqtree_gene_trees/COG1342.contree
Log-likelihood of consensus tree: -40340.562

Analysis results written to: 
  IQ-TREE report:                /researchdrive/zhongj2/tree-reconciliation/iqtree_gene_trees/COG1342.iqtree
  Maximum-likelihood tree:       /researchdrive/zhongj2/tree-reconciliation/iqtree_gene_trees/COG1342.treefile
  Likelihood distances:          /researchdrive/zhongj2/tree-reconciliation/iqtree_gene_trees/COG1342.mldist

Ultrafast bootstrap approximation results written to:
  Split support values:          /researchdrive/zhongj2/tree-reconciliation/iqtree_gene_trees/COG1342.splits.nex
  Consensus tree:                /researchdrive/zhongj2/tree-reconciliation/iqtree_gene_trees/COG1342.contree
  UFBoot trees:                  /researchdrive/zhongj2/tree-reconciliation/iqtree_gene_trees/COG1342.ufboot
  Screen log file:               /researchdrive/zhongj2/tree-reconciliation/iqtree_gene_trees/COG1342.log

ALISIM COMMAND
--------------
--alisim simulated_MSA -t /researchdrive/zhongj2/tree-reconciliation/iqtree_gene_trees/COG1342.treefile -m "VT+F+R7{0.0789462,0.0563627,0.0726137,0.157406,0.183942,0.343557,0.108975,0.64387,0.211114,0.976098,0.206004,1.52886,0.138405,2.38244}" --length 154

Date and Time: Sun Apr  2 03:33:41 2023
