IQ-TREE multicore version 2.2.0.3 COVID-edition for Linux 64-bit built Aug  2 2022
Developed by Bui Quang Minh, James Barbetti, Nguyen Lam Tung,
Olga Chernomor, Heiko Schmidt, Dominik Schrempf, Michael Woodhams, Ly Trong Nhan.

Host:    baross.its.carleton.edu (AVX2, FMA3, 755 GB RAM)
Command: iqtree -s gene_alignments/trimv2_COG1513.afa --nmax 3000 -m MFP -bb 1000 -wbtl -ntmax 10 -nt AUTO -T 10 --prefix iqtree_gene_trees/COG1513 -madd C10,C20,C30,C40,C50,C60,EX2,EX3,EHO,UL2,UL3,EX_EHO,LG4M,LG4X,CF4,LG+C10,LG+C20,LG+C30,LG+C40,LG+C50,LG+C60 -mrate E,I,G,I+G,R
Seed:    278106 (Using SPRNG - Scalable Parallel Random Number Generator)
Time:    Sun Apr  9 02:00:03 2023
Kernel:  AVX+FMA - 10 threads (96 CPU cores detected)

Reading alignment file gene_alignments/trimv2_COG1513.afa ... Fasta format detected
Reading fasta file: done in 0.000493259 secs
Alignment most likely contains protein sequences
Constructing alignment: done in 0.000986715 secs using 863.3% CPU
Alignment has 41 sequences with 149 columns, 147 distinct patterns
127 parsimony-informative, 15 singleton sites, 7 constant sites
                                                                 Gap/Ambiguity  Composition  p-value
Analyzing sequences: done in 5.0304e-05 secs using 858.8% CPU
   1  GCF.003258945.1.Bacteria.Proteobacteria_NZ_QLIX01000001.1_217      2.01%    passed     57.59%
   2  GCF.001399755.1.Bacteria.Proteobacteria_NZ_LJCP01000010.1_45       2.01%    passed     99.63%
   3  GCA.002897695.1.Bacteria.BMS3Abin14_BDTG01000040.1_4               2.01%    passed     83.66%
   4  GCA.003140175.1.Bacteria.Actinobacteriota_PLJD01000006.1_1         1.34%    passed     86.98%
   5  GCF.002251945.1.Bacteria.Cyanobacteria_NZ_NDHW01000184.1_100       2.01%    passed     98.00%
   6  GCF.000011205.1.Archaea.Thermoproteota_NC_003106.2_1160            0.67%    passed     50.35%
   7  Nostoc.sp.PCC7120_WP_010995463.1                                   2.01%    passed     98.56%
   8  GCA.002049455.2.Eukaryota.Rhodophyta_OSX72613.1                    1.34%    passed     29.11%
   9  GCA.001464215.1.Bacteria.Proteobacteria_LNEZ01000056.1_22          1.34%    passed     78.57%
  10  GCA.003220615.1.Bacteria.Methylomirabilota_QHTB01000190.1_25       5.37%    passed     21.49%
  11  GCA.002840095.1.Bacteria.Proteobacteria_PGZL01000007.1_329         2.01%    passed     90.16%
  12  GCF.000353285.1.Bacteria.Cyanobacteria_NZ_KB731324.1_4425          2.01%    passed     98.81%
  13  GCF.000284615.1.Bacteria.Proteobacteria_NC_017067.1_1108           1.34%    passed     87.52%
  14  GCF.000092905.1.Bacteria.Firmicutes_NC_014098.1_551                1.34%    passed     91.64%
  15  GCF.000264455.2.Bacteria.Proteobacteria_NC_017956.1_334            1.34%    passed     83.35%
  16  GCF.001653195.1.Bacteria.Firmicutes_NZ_JXBB01000001.1_183          1.34%    failed      0.02%
  17  GCF.900167455.1.Bacteria.Proteobacteria_NZ_FUWJ01000020.1_11       1.34%    passed     92.10%
  18  GCF.001720165.1.Bacteria.Proteobacteria_NZ_MCRI01000024.1_15       2.01%    passed     44.17%
  19  GCF.002215035.1.Bacteria.Cyanobacteria_NZ_NKFP01000001.1_893       2.01%    passed     99.91%
  20  GCA.003023725.1.Bacteria.Firmicutes.E_PXYT01000038.1_23            2.01%    passed     77.74%
  21  GCA.006969625.1.Bacteria.Proteobacteria_CP030885.1_3497            0.67%    passed     98.85%
  22  GCF.006980715.1.Bacteria.Proteobacteria_NZ_SBHN01000026.1_15       1.34%    passed     63.00%
  23  GCF.001029505.1.Bacteria.Actinobacteriota_NZ_LEKH01000002.1_150    2.01%    failed      3.51%
  24  GCF.001613805.1.Bacteria.Proteobacteria_NZ_LPVY01000002.1_347      2.01%    passed     94.25%
  25  GCF.001641825.1.Bacteria.Proteobacteria_NZ_LRFH01000016.1_224      1.34%    passed     99.56%
  26  GCF.002215035.1.Bacteria.Cyanobacteria_NZ_NKFP01000006.1_1899      2.01%    passed     99.62%
  27  GCA.001698445.1.Bacteria.Cyanobacteria_MBRF01000019.1_17           2.01%    passed    100.00%
  28  GCF.000317045.1.Bacteria.Cyanobacteria_NC_019703.1_2047            1.34%    passed     99.31%
  29  GCF.000018105.1.Bacteria.Cyanobacteria_NC_009925.1_4800            1.34%    passed     92.29%
  30  GCF.000170755.1.Bacteria.Verrucomicrobiota_NZ_ABCK01000018.1_47    2.01%    passed     98.38%
  31  GCA.002049455.2.Eukaryota.Rhodophyta_OSX76007.1                    1.34%    failed      2.87%
  32  GCA.002347965.1.Bacteria.UBA2233_DDYN01000002.1_22                 8.72%    passed     39.03%
  33  GCA.001447805.1.Bacteria.Proteobacteria_CP013099.1_1418            2.01%    passed     59.55%
  34  GCF.900105685.1.Bacteria.Verrucomicrobiota_NZ_LT629781.1_1226      1.34%    passed     89.78%
  35  GCA.002049455.2.Eukaryota.Rhodophyta_OSX73463.1                    0.00%    failed      2.04%
  36  GCF.000316115.1.Bacteria.Cyanobacteria_NZ_JH993797.1_7115          1.34%    passed     72.66%
  37  GCA.002327765.1.Bacteria.Desulfobacterota.E_DCUH01000125.1_3       2.01%    passed     99.90%
  38  Fischerella.muscicola.CCMEE5323_WP_016867266.1                     2.01%    passed     96.03%
  39  GCF.000353285.1.Bacteria.Cyanobacteria_NZ_KB731324.1_4276          1.34%    passed     99.36%
  40  GCF.000266945.1.Bacteria.Desulfobacterota_NC_018025.1_197          1.34%    passed     99.22%
  41  GCF.003052605.1.Bacteria.Proteobacteria_NZ_QASO01000062.1_59       0.67%    passed     97.06%
****  TOTAL                                                              1.83%  4 sequences failed composition chi2 test (p-value<5%; df=19)
Checking for duplicate sequences: done in 0.000485517 secs using 984.3% CPU


Create initial parsimony tree by phylogenetic likelihood library (PLL)... 0.009 seconds
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
Perform fast likelihood tree search using LG+I+G model...
Estimate model parameters (epsilon = 5.000)
Perform nearest neighbor interchange...
Optimizing NNI: done in 0.328196 secs using 994% CPU
Estimate model parameters (epsilon = 1.000)
1. Initial log-likelihood: -7871.960
Optimal log-likelihood: -7871.907
Proportion of invariable sites: 0.033
Gamma shape alpha: 1.220
Parameters optimization took 1 rounds (0.027 sec)
Time for fast ML tree search: 0.454 seconds

NOTE: ModelFinder requires 11 MB RAM!
ModelFinder will test up to 749 protein models (sample size: 149) ...
 No. Model         -LnL         df  AIC          AICc         BIC
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  1  LG            8195.510     79  16549.021    16732.209    16786.332
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  2  LG+I          8124.856     80  16409.712    16600.300    16650.027
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  3  LG+G4         7876.798     80  15913.596    16104.184    16153.912
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  4  LG+I+G4       7871.910     81  15905.821    16104.090    16149.141
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  5  LG+R2         7941.181     81  16044.362    16242.631    16287.682
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  6  LG+R3         7874.638     83  15915.276    16129.799    16164.604
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  7  LG+R4         7866.549     85  15903.098    16135.162    16158.434
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  8  LG+R5         7866.552     87  15907.105    16158.121    16168.448
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 14  LG+F          8182.693     98  16561.386    16949.466    16855.773
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 15  LG+F+I        8110.845     99  16419.690    16823.772    16717.081
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 16  LG+F+G4       7862.098     99  15922.196    16326.278    16219.587
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 17  LG+F+I+G4     7857.016     100 15914.032    16334.866    16214.427
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 18  LG+F+R2       7925.859     100 16051.718    16472.551    16352.113
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 19  LG+F+R3       7861.277     102 15926.554    16383.336    16232.956
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 20  LG+F+R4       7852.786     104 15913.572    16409.936    16225.983
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 21  LG+F+R5       7852.824     106 15917.649    16457.744    16236.067
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 27  WAG           8169.136     79  16496.273    16679.461    16733.584
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 28  WAG+I         8096.250     80  16352.500    16543.088    16592.815
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 29  WAG+G4        7894.168     80  15948.337    16138.925    16188.652
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 30  WAG+I+G4      7888.455     81  15938.909    16137.178    16182.229
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 31  WAG+R2        7945.406     81  16052.813    16251.082    16296.133
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 32  WAG+R3        7884.469     83  15934.939    16149.462    16184.266
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 33  WAG+R4        7883.981     85  15937.963    16170.026    16193.298
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 40  WAG+F         8174.230     98  16544.460    16932.540    16838.847
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 41  WAG+F+I       8102.504     99  16403.007    16807.089    16700.398
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 42  WAG+F+G4      7892.636     99  15983.272    16387.354    16280.663
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 43  WAG+F+I+G4    7886.761     100 15973.521    16394.354    16273.916
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 44  WAG+F+R2      7946.936     100 16093.872    16514.706    16394.267
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 45  WAG+F+R3      7883.719     102 15971.437    16428.220    16277.840
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 46  WAG+F+R4      7881.418     104 15970.836    16467.200    16283.246
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 53  JTT           8320.146     79  16798.293    16981.481    17035.604
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 54  JTT+I         8247.597     80  16655.195    16845.783    16895.510
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 55  JTT+G4        8007.788     80  16175.575    16366.163    16415.891
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 56  JTT+I+G4      8003.009     81  16168.018    16366.286    16411.337
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 57  JTT+R2        8066.583     81  16295.166    16493.435    16538.486
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 58  JTT+R3        8005.095     83  16176.190    16390.713    16425.518
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 59  JTT+R4        7997.810     85  16165.619    16397.683    16420.955
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 60  JTT+R5        7997.789     87  16169.578    16420.594    16430.921
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 66  JTT+F         8309.498     98  16814.997    17203.077    17109.383
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 67  JTT+F+I       8234.466     99  16666.932    17071.013    16964.322
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 68  JTT+F+G4      7988.010     99  16174.020    16578.101    16471.410
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 69  JTT+F+I+G4    7982.980     100 16165.961    16586.794    16466.356
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 70  JTT+F+R2      8049.636     100 16299.272    16720.105    16599.667
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 71  JTT+F+R3      7988.907     102 16181.815    16638.597    16488.217
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 72  JTT+F+R4      7977.867     104 16163.734    16660.098    16476.145
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 73  JTT+F+R5      7977.877     106 16167.755    16707.850    16486.173
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 79  Q.pfam        8177.478     79  16512.956    16696.145    16750.268
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 80  Q.pfam+I      8108.725     80  16377.449    16568.038    16617.765
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 81  Q.pfam+G4     7863.889     80  15887.779    16078.367    16128.095
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 82  Q.pfam+I+G4   7859.189     81  15880.377    16078.646    16123.697
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 83  Q.pfam+R2     7925.932     81  16013.865    16212.133    16257.184
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 84  Q.pfam+R3     7862.697     83  15891.395    16105.918    16140.722
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 85  Q.pfam+R4     7853.439     85  15876.878    16108.942    16132.214
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 86  Q.pfam+R5     7853.367     87  15880.735    16131.751    16142.078
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 92  Q.pfam+F      8175.194     98  16546.388    16934.468    16840.774
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 93  Q.pfam+F+I    8107.191     99  16412.383    16816.465    16709.774
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 94  Q.pfam+F+G4   7855.220     99  15908.440    16312.521    16205.830
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 95  Q.pfam+F+I+G4 7850.779     100 15901.558    16322.392    16201.953
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 96  Q.pfam+F+R2   7915.564     100 16031.128    16451.961    16331.522
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 97  Q.pfam+F+R3   7855.665     102 15915.330    16372.113    16221.733
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 98  Q.pfam+F+R4   7845.583     104 15899.166    16395.530    16211.577
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 99  Q.pfam+F+R5   7845.625     106 15903.250    16443.345    16221.669
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
105  Q.bird        8624.713     79  17407.425    17590.614    17644.737
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
106  Q.bird+I      8543.829     80  17247.657    17438.246    17487.973
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
107  Q.bird+G4     8205.467     80  16570.934    16761.522    16811.250
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
108  Q.bird+I+G4   8201.627     81  16565.254    16763.523    16808.574
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
109  Q.bird+R2     8289.592     81  16741.184    16939.452    16984.503
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
110  Q.bird+R3     8215.749     83  16597.499    16812.022    16846.826
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
111  Q.bird+R4     8195.709     85  16561.419    16793.482    16816.754
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
112  Q.bird+R5     8194.360     87  16562.720    16813.737    16824.064
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
118  Q.bird+F      8646.805     98  17489.610    17877.690    17783.997
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
119  Q.bird+F+I    8563.986     99  17325.972    17730.053    17623.362
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
120  Q.bird+F+G4   8200.172     99  16598.344    17002.425    16895.734
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
121  Q.bird+F+I+G4 8197.912     100 16595.824    17016.658    16896.219
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
122  Q.bird+F+R2   8285.556     100 16771.112    17191.945    17071.507
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
123  Q.bird+F+R3   8224.463     102 16652.925    17109.708    16959.328
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
124  Q.bird+F+R4   8192.184     104 16592.369    17088.732    16904.779
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
125  Q.bird+F+R5   8190.383     106 16592.766    17132.861    16911.184
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
131  Q.mammal      8523.269     79  17204.537    17387.726    17441.849
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
132  Q.mammal+I    8447.903     80  17055.807    17246.395    17296.122
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
133  Q.mammal+G4   8130.227     80  16420.453    16611.041    16660.769
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
134  Q.mammal+I+G4 8126.564     81  16415.127    16613.396    16658.447
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
135  Q.mammal+R2   8208.052     81  16578.103    16776.372    16821.423
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
136  Q.mammal+R3   8136.521     83  16439.043    16653.566    16688.371
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
137  Q.mammal+R4   8119.148     85  16408.297    16640.360    16663.632
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
138  Q.mammal+R5   8118.361     87  16410.723    16661.739    16672.066
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
144  Q.mammal+F    8532.164     98  17260.329    17648.409    17554.715
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
145  Q.mammal+F+I  8454.467     99  17106.933    17511.015    17404.324
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
146  Q.mammal+F+G4 8118.955     99  16435.909    16839.991    16733.300
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
147  Q.mammal+F+I+G4 8116.377     100 16432.754    16853.587    16733.148
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
148  Q.mammal+F+R2 8197.669     100 16595.338    17016.171    16895.732
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
149  Q.mammal+F+R3 8134.945     102 16473.889    16930.672    16780.292
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
150  Q.mammal+F+R4 8109.322     104 16426.645    16923.008    16739.055
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
151  Q.mammal+F+R5 8108.367     106 16428.733    16968.828    16747.151
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
157  Q.insect      8319.594     79  16797.187    16980.376    17034.499
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
158  Q.insect+I    8248.082     80  16656.164    16846.753    16896.480
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
159  Q.insect+G4   7964.106     80  16088.212    16278.800    16328.528
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
160  Q.insect+I+G4 7960.406     81  16082.812    16281.080    16326.131
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
161  Q.insect+R2   8028.323     81  16218.646    16416.915    16461.966
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
162  Q.insect+R3   7968.081     83  16102.162    16316.685    16351.490
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
163  Q.insect+R4   7952.757     85  16075.514    16307.578    16330.850
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
164  Q.insect+R5   7952.702     87  16079.404    16330.420    16340.747
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
170  Q.insect+F    8286.188     98  16768.376    17156.456    17062.763
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
171  Q.insect+F+I  8211.938     99  16621.876    17025.957    16919.266
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
172  Q.insect+F+G4 7928.394     99  16054.788    16458.870    16352.179
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
173  Q.insect+F+I+G4 7924.805     100 16049.610    16470.444    16350.005
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
174  Q.insect+F+R2 7995.306     100 16190.613    16611.446    16491.007
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
175  Q.insect+F+R3 7934.526     102 16073.052    16529.835    16379.454
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
176  Q.insect+F+R4 7916.199     104 16040.398    16536.762    16352.809
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
177  Q.insect+F+R5 7916.267     106 16044.535    16584.630    16362.953
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
183  Q.plant       8441.058     79  17040.117    17223.305    17277.428
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
184  Q.plant+I     8366.562     80  16893.124    17083.712    17133.440
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
185  Q.plant+G4    8052.221     80  16264.441    16455.030    16504.757
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
186  Q.plant+I+G4  8048.683     81  16259.366    16457.635    16502.686
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
187  Q.plant+R2    8128.801     81  16419.601    16617.870    16662.921
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
188  Q.plant+R3    8062.754     83  16291.508    16506.032    16540.836
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
189  Q.plant+R4    8045.170     85  16260.340    16492.403    16515.675
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
190  Q.plant+R5    8044.150     87  16262.300    16513.317    16523.644
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
196  Q.plant+F     8421.853     98  17039.706    17427.786    17334.093
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
197  Q.plant+F+I   8342.770     99  16883.540    17287.621    17180.930
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
198  Q.plant+F+G4  8024.677     99  16247.353    16651.435    16544.744
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
199  Q.plant+F+I+G4 8021.091     100 16242.182    16663.015    16542.576
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
200  Q.plant+F+R2  8104.716     100 16409.431    16830.265    16709.826
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
201  Q.plant+F+R3  8038.851     102 16281.703    16738.485    16588.105
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
202  Q.plant+F+R4  8017.063     104 16242.125    16738.489    16554.536
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
203  Q.plant+F+R5  8016.877     106 16245.754    16785.849    16564.172
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
209  Q.yeast       8281.699     79  16721.398    16904.586    16958.709
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
210  Q.yeast+I     8209.939     80  16579.878    16770.466    16820.193
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
211  Q.yeast+G4    7951.213     80  16062.426    16253.014    16302.742
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
212  Q.yeast+I+G4  7947.145     81  16056.290    16254.559    16299.610
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
213  Q.yeast+R2    8010.045     81  16182.089    16380.358    16425.409
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
214  Q.yeast+R3    7954.492     83  16074.983    16289.506    16324.311
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
215  Q.yeast+R4    7942.221     85  16054.442    16286.506    16309.778
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
216  Q.yeast+R5    7942.192     87  16058.385    16309.401    16319.728
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
222  Q.yeast+F     8212.860     98  16621.720    17009.800    16916.107
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
223  Q.yeast+F+I   8139.686     99  16477.373    16881.454    16774.763
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
224  Q.yeast+F+G4  7878.779     99  15955.557    16359.639    16252.948
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
225  Q.yeast+F+I+G4 7874.541     100 15949.083    16369.916    16249.477
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
226  Q.yeast+F+R2  7940.966     100 16081.931    16502.764    16382.326
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
227  Q.yeast+F+R3  7882.949     102 15969.898    16426.681    16276.301
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
228  Q.yeast+F+R4  7869.077     104 15946.155    16442.518    16258.565
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
229  Q.yeast+F+R5  7869.067     106 15950.133    16490.229    16268.552
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
235  JTTDCMut      8317.258     79  16792.516    16975.704    17029.827
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
236  JTTDCMut+I    8245.221     80  16650.442    16841.031    16890.758
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
237  JTTDCMut+G4   8006.195     80  16172.389    16362.978    16412.705
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
238  JTTDCMut+I+G4 8001.459     81  16164.919    16363.187    16408.238
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
239  JTTDCMut+R2   8064.878     81  16291.756    16490.024    16535.075
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
240  JTTDCMut+R3   8003.747     83  16173.494    16388.017    16422.822
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
241  JTTDCMut+R4   7996.690     85  16163.379    16395.443    16418.715
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
242  JTTDCMut+R5   7996.635     87  16167.270    16418.286    16428.613
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
248  JTTDCMut+F    8305.623     98  16807.246    17195.326    17101.633
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
249  JTTDCMut+F+I  8231.250     99  16660.501    17064.582    16957.891
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
250  JTTDCMut+F+G4 7985.162     99  16168.324    16572.405    16465.715
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
251  JTTDCMut+F+I+G4 7980.211     100 16160.423    16581.256    16460.817
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
252  JTTDCMut+F+R2 8047.063     100 16294.127    16714.960    16594.521
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
253  JTTDCMut+F+R3 7986.421     102 16176.841    16633.624    16483.244
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
254  JTTDCMut+F+R4 7975.454     104 16158.908    16655.271    16471.318
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
255  JTTDCMut+F+R5 7975.455     106 16162.909    16703.005    16481.328
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
261  DCMut         8365.734     79  16889.469    17072.657    17126.781
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
262  DCMut+I       8281.689     80  16723.379    16913.967    16963.694
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
263  DCMut+G4      8046.431     80  16252.863    16443.451    16493.179
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
264  DCMut+I+G4    8040.119     81  16242.238    16440.507    16485.558
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
265  DCMut+R2      8110.384     81  16382.767    16581.036    16626.087
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
266  DCMut+R3      8043.723     83  16253.446    16467.969    16502.774
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
267  DCMut+R4      8035.242     85  16240.484    16472.548    16495.820
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
268  DCMut+R5      8031.572     87  16237.143    16488.160    16498.487
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
274  DCMut+F       8343.304     98  16882.609    17270.689    17176.995
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
275  DCMut+F+I     8262.519     99  16723.039    17127.120    17020.430
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
276  DCMut+F+G4    8007.965     99  16213.931    16618.012    16511.321
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
277  DCMut+F+I+G4  8002.478     100 16204.956    16625.790    16505.351
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
278  DCMut+F+R2    8080.920     100 16361.840    16782.674    16662.235
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
279  DCMut+F+R3    8011.611     102 16227.222    16684.005    16533.625
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
280  DCMut+F+R4    7997.157     104 16202.314    16698.677    16514.724
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
281  DCMut+F+R5    7996.758     106 16205.516    16745.611    16523.934
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
287  VT            8190.059     79  16538.119    16721.307    16775.430
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
288  VT+I          8124.174     80  16408.347    16598.935    16648.663
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
289  VT+G4         7920.091     80  16000.182    16190.771    16240.498
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
290  VT+I+G4       7915.337     81  15992.674    16190.943    16235.994
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
291  VT+R2         7971.927     81  16105.854    16304.123    16349.174
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
292  VT+R3         7912.008     83  15990.016    16204.539    16239.343
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
293  VT+R4         7910.109     85  15990.219    16222.282    16245.554
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
300  VT+F          8178.824     98  16553.648    16941.728    16848.034
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
301  VT+F+I        8112.171     99  16422.342    16826.423    16719.732
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
302  VT+F+G4       7905.456     99  16008.912    16412.993    16306.302
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
303  VT+F+I+G4     7900.388     100 16000.776    16421.610    16301.171
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
304  VT+F+R2       7958.117     100 16116.234    16537.067    16416.628
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
305  VT+F+R3       7898.150     102 16000.301    16457.083    16306.703
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
306  VT+F+R4       7895.172     104 15998.344    16494.707    16310.754
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
313  PMB           8238.673     79  16635.347    16818.535    16872.658
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
314  PMB+I         8176.900     80  16513.800    16704.388    16754.115
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
315  PMB+G4        7962.379     80  16084.758    16275.347    16325.074
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
316  PMB+I+G4      7958.342     81  16078.683    16276.952    16322.003
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
317  PMB+R2        8018.030     81  16198.060    16396.329    16441.380
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
318  PMB+R3        7954.587     83  16075.175    16289.698    16324.502
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
319  PMB+R4        7953.743     85  16077.487    16309.550    16332.822
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
326  PMB+F         8238.978     98  16673.957    17062.037    16968.343
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
327  PMB+F+I       8174.853     99  16547.705    16951.787    16845.096
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
328  PMB+F+G4      7953.623     99  16105.246    16509.328    16402.637
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
329  PMB+F+I+G4    7949.238     100 16098.476    16519.310    16398.871
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
330  PMB+F+R2      8011.783     100 16223.566    16644.399    16523.961
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
331  PMB+F+R3      7945.636     102 16095.273    16552.056    16401.675
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
332  PMB+F+R4      7945.280     104 16098.560    16594.924    16410.971
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
339  Blosum62      8220.704     79  16599.409    16782.597    16836.721
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
340  Blosum62+I    8153.648     80  16467.296    16657.884    16707.612
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
341  Blosum62+G4   7949.912     80  16059.825    16250.413    16300.141
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
342  Blosum62+I+G4 7944.762     81  16051.525    16249.793    16294.844
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
343  Blosum62+R2   8001.901     81  16165.803    16364.071    16409.122
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
344  Blosum62+R3   7941.112     83  16048.223    16262.746    16297.551
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
345  Blosum62+R4   7940.515     85  16051.030    16283.093    16306.365
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
352  Blosum62+F    8221.968     98  16639.936    17028.016    16934.322
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
353  Blosum62+F+I  8153.977     99  16505.954    16910.035    16803.345
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
354  Blosum62+F+G4 7941.725     99  16081.449    16485.531    16378.840
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
355  Blosum62+F+I+G4 7936.438     100 16072.876    16493.709    16373.270
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
356  Blosum62+F+R2 8000.604     100 16201.208    16622.042    16501.603
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
357  Blosum62+F+R3 7932.959     102 16069.917    16526.700    16376.320
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
358  Blosum62+F+R4 7932.763     104 16073.526    16569.890    16385.937
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
365  Dayhoff       8365.894     79  16889.787    17072.976    17127.099
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
366  Dayhoff+I     8281.696     80  16723.392    16913.981    16963.708
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
367  Dayhoff+G4    8046.218     80  16252.437    16443.025    16492.752
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
368  Dayhoff+I+G4  8039.899     81  16241.799    16440.067    16485.118
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
369  Dayhoff+R2    8110.386     81  16382.771    16581.040    16626.091
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
370  Dayhoff+R3    8043.568     83  16253.136    16467.659    16502.463
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
371  Dayhoff+R4    8035.045     85  16240.090    16472.154    16495.425
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
372  Dayhoff+R5    8031.377     87  16236.753    16487.770    16498.097
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
378  Dayhoff+F     8343.632     98  16883.265    17271.345    17177.651
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
379  Dayhoff+F+I   8262.697     99  16723.394    17127.475    17020.784
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
380  Dayhoff+F+G4  8007.809     99  16213.618    16617.700    16511.009
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
381  Dayhoff+F+I+G4 8002.318     100 16204.637    16625.470    16505.031
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
382  Dayhoff+F+R2  8081.032     100 16362.063    16782.896    16662.458
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
383  Dayhoff+F+R3  8011.527     102 16227.054    16683.837    16533.457
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
384  Dayhoff+F+R4  7997.029     104 16202.058    16698.422    16514.468
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
385  Dayhoff+F+R5  7996.604     106 16205.208    16745.304    16523.627
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
391  mtREV         8957.834     79  18073.669    18256.857    18310.980
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
392  mtREV+I       8899.393     80  17958.786    18149.375    18199.102
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
393  mtREV+G4      8452.550     80  17065.100    17255.688    17305.416
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
394  mtREV+I+G4    8448.703     81  17059.406    17257.675    17302.726
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
395  mtREV+R2      8537.638     81  17237.276    17435.545    17480.596
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
396  mtREV+R3      8476.535     83  17119.070    17333.593    17368.397
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
397  mtREV+R4      8447.837     85  17065.674    17297.737    17321.009
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
398  mtREV+R5      8444.613     87  17063.226    17314.242    17324.569
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
404  mtREV+F       8562.307     98  17320.614    17708.694    17615.000
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
405  mtREV+F+I     8495.515     99  17189.031    17593.112    17486.421
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
406  mtREV+F+G4    8145.378     99  16488.756    16892.838    16786.147
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
407  mtREV+F+I+G4  8141.242     100 16482.484    16903.317    16782.879
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
408  mtREV+F+R2    8220.999     100 16641.998    17062.831    16942.393
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
409  mtREV+F+R3    8157.823     102 16519.645    16976.428    16826.048
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
410  mtREV+F+R4    8142.293     104 16492.585    16988.949    16804.996
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
411  mtREV+F+R5    8137.154     106 16486.307    17026.402    16804.725
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
412  mtREV+F+R6    8132.771     108 16481.542    17070.142    16805.969
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
417  mtART         9286.825     79  18731.650    18914.839    18968.962
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
418  mtART+I       9216.414     80  18592.828    18783.416    18833.144
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
419  mtART+G4      8595.344     80  17350.688    17541.276    17591.003
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
420  mtART+I+G4    8594.925     81  17351.850    17550.119    17595.170
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
421  mtART+R2      8728.052     81  17618.103    17816.372    17861.423
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
422  mtART+R3      8626.428     83  17418.855    17633.378    17668.183
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
423  mtART+R4      8588.863     85  17347.726    17579.789    17603.061
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
424  mtART+R5      8583.141     87  17340.281    17591.298    17601.625
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
425  mtART+R6      8581.493     89  17340.987    17612.512    17608.338
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
430  mtART+F       8818.567     98  17833.135    18221.215    18127.522
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
431  mtART+F+I     8733.610     99  17665.221    18069.303    17962.612
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
432  mtART+F+G4    8231.232     99  16660.463    17064.545    16957.854
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
433  mtART+F+I+G4  8230.788     100 16661.576    17082.409    16961.971
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
434  mtART+F+R2    8361.559     100 16923.117    17343.950    17223.512
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
435  mtART+F+R3    8263.538     102 16731.075    17187.858    17037.478
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
436  mtART+F+R4    8221.359     104 16650.719    17147.082    16963.129
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
437  mtART+F+R5    8217.953     106 16647.906    17188.001    16966.325
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
443  mtZOA         8904.249     79  17966.497    18149.685    18203.809
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
444  mtZOA+I       8835.766     80  17831.532    18022.120    18071.848
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
445  mtZOA+G4      8344.345     80  16848.690    17039.278    17089.006
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
446  mtZOA+I+G4    8343.703     81  16849.406    17047.675    17092.726
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
447  mtZOA+R2      8444.660     81  17051.321    17249.589    17294.640
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
448  mtZOA+R3      8373.868     83  16913.736    17128.259    17163.064
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
449  mtZOA+R4      8336.702     85  16843.403    17075.467    17098.739
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
450  mtZOA+R5      8335.066     87  16844.133    17095.149    17105.476
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
456  mtZOA+F       8574.997     98  17345.993    17734.073    17640.380
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
457  mtZOA+F+I     8493.542     99  17185.083    17589.165    17482.474
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
458  mtZOA+F+G4    8114.940     99  16427.880    16831.961    16725.271
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
459  mtZOA+F+I+G4  8113.565     100 16427.131    16847.964    16727.526
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
460  mtZOA+F+R2    8208.723     100 16617.446    17038.279    16917.841
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
461  mtZOA+F+R3    8145.591     102 16495.183    16951.965    16801.585
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
462  mtZOA+F+R4    8106.621     104 16421.241    16917.605    16733.652
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
463  mtZOA+F+R5    8105.844     106 16423.689    16963.784    16742.107
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
469  mtMet         8993.379     79  18144.758    18327.947    18382.070
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
470  mtMet+I       8936.175     80  18032.349    18222.937    18272.665
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
471  mtMet+G4      8519.705     80  17199.411    17389.999    17439.727
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
472  mtMet+I+G4    8518.509     81  17199.019    17397.287    17442.338
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
473  mtMet+R2      8601.499     81  17364.998    17563.267    17608.318
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
474  mtMet+R3      8541.604     83  17249.209    17463.732    17498.536
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
475  mtMet+R4      8511.238     85  17192.477    17424.540    17447.812
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
476  mtMet+R5      8509.605     87  17193.211    17444.227    17454.554
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
482  mtMet+F       8572.163     98  17340.325    17728.405    17634.712
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
483  mtMet+F+I     8496.716     99  17191.431    17595.513    17488.822
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
484  mtMet+F+G4    8142.565     99  16483.129    16887.211    16780.520
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
485  mtMet+F+I+G4  8140.245     100 16480.491    16901.324    16780.886
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
486  mtMet+F+R2    8226.101     100 16652.203    17073.036    16952.597
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
487  mtMet+F+R3    8166.964     102 16537.928    16994.711    16844.331
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
488  mtMet+F+R4    8134.547     104 16477.094    16973.457    16789.504
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
489  mtMet+F+R5    8132.745     106 16477.490    17017.585    16795.908
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
495  mtVer         9120.407     79  18398.815    18582.003    18636.126
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
496  mtVer+I       9056.408     80  18272.817    18463.405    18513.132
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
497  mtVer+G4      8552.753     80  17265.506    17456.094    17505.822
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
498  mtVer+I+G4    8551.878     81  17265.756    17464.024    17509.075
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
499  mtVer+R2      8649.743     81  17461.486    17659.754    17704.805
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
500  mtVer+R3      8584.176     83  17334.353    17548.876    17583.680
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
501  mtVer+R4      8544.129     85  17258.258    17490.321    17513.593
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
502  mtVer+R5      8539.830     87  17253.659    17504.676    17515.003
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
508  mtVer+F       8753.015     98  17702.030    18090.110    17996.417
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
509  mtVer+F+I     8673.218     99  17544.437    17948.518    17841.827
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
510  mtVer+F+G4    8273.197     99  16744.395    17148.477    17041.786
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
511  mtVer+F+I+G4  8272.406     100 16744.812    17165.646    17045.207
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
512  mtVer+F+R2    8375.268     100 16950.535    17371.369    17250.930
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
513  mtVer+F+R3    8304.574     102 16813.148    17269.930    17119.550
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
514  mtVer+F+R4    8265.693     104 16739.386    17235.750    17051.797
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
515  mtVer+F+R5    8260.202     106 16732.404    17272.499    17050.822
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
516  mtVer+F+R6    8259.782     108 16735.563    17324.163    17059.989
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
521  mtInv         8994.261     79  18146.521    18329.710    18383.833
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
522  mtInv+I       8936.742     80  18033.484    18224.072    18273.800
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
523  mtInv+G4      8571.340     80  17302.681    17493.269    17542.997
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
524  mtInv+I+G4    8569.513     81  17301.026    17499.294    17544.345
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
525  mtInv+R2      8646.090     81  17454.180    17652.449    17697.500
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
526  mtInv+R3      8590.953     83  17347.905    17562.428    17597.233
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
527  mtInv+R4      8565.122     85  17300.243    17532.307    17555.579
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
528  mtInv+R5      8563.465     87  17300.931    17551.947    17562.274
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
534  mtInv+F       8455.636     98  17107.272    17495.352    17401.658
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
535  mtInv+F+I     8376.216     99  16950.432    17354.514    17247.823
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
536  mtInv+F+G4    8068.236     99  16334.472    16738.554    16631.863
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
537  mtInv+F+I+G4  8065.009     100 16330.018    16750.851    16630.412
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
538  mtInv+F+R2    8147.919     100 16495.838    16916.671    16796.232
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
539  mtInv+F+R3    8085.533     102 16375.067    16831.849    16681.469
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
540  mtInv+F+R4    8059.056     104 16326.112    16822.475    16638.522
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
541  mtInv+F+R5    8058.247     106 16328.494    16868.590    16646.913
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
547  mtMAM         9478.623     79  19115.246    19298.434    19352.558
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
548  mtMAM+I       9411.605     80  18983.211    19173.799    19223.526
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
549  mtMAM+G4      8706.481     80  17572.962    17763.550    17813.278
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
550  mtMAM+I+G4    8704.144     81  17570.287    17768.556    17813.607
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
551  mtMAM+R2      8836.573     81  17835.147    18033.415    18078.466
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
552  mtMAM+R3      8741.800     83  17649.599    17864.122    17898.927
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
553  mtMAM+R4      8696.052     85  17562.104    17794.168    17817.439
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
554  mtMAM+R5      8684.504     87  17543.007    17794.024    17804.351
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
555  mtMAM+R6      8682.501     89  17543.002    17814.527    17810.353
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
560  mtMAM+F       9028.420     98  18252.841    18640.921    18547.227
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
561  mtMAM+F+I     8951.801     99  18101.602    18505.683    18398.992
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
562  mtMAM+F+G4    8391.673     99  16981.346    17385.428    17278.737
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
563  mtMAM+F+I+G4  8391.541     100 16983.082    17403.915    17283.476
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
564  mtMAM+F+R2    8509.456     100 17218.912    17639.745    17519.306
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
565  mtMAM+F+R3    8429.694     102 17063.388    17520.171    17369.791
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
566  mtMAM+F+R4    8386.244     104 16980.488    17476.852    17292.899
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
567  mtMAM+F+R5    8377.715     106 16967.429    17507.524    17285.847
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
568  mtMAM+F+R6    8375.804     108 16967.608    17556.208    17292.034
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
573  FLAVI         8964.063     79  18086.126    18269.315    18323.438
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
574  FLAVI+I       8886.255     80  17932.510    18123.098    18172.826
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
575  FLAVI+G4      8426.116     80  17012.231    17202.820    17252.547
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
576  FLAVI+I+G4    8424.459     81  17010.917    17209.186    17254.237
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
577  FLAVI+R2      8536.814     81  17235.627    17433.896    17478.947
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
578  FLAVI+R3      8453.287     83  17072.575    17287.098    17321.902
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
579  FLAVI+R4      8420.924     85  17011.848    17243.911    17267.183
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
580  FLAVI+R5      8420.857     87  17015.714    17266.730    17277.057
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
586  FLAVI+F       8944.342     98  18084.685    18472.765    18379.072
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
587  FLAVI+F+I     8854.581     99  17907.162    18311.244    18204.553
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
588  FLAVI+F+G4    8395.198     99  16988.396    17392.478    17285.787
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
589  FLAVI+F+I+G4  8393.299     100 16986.598    17407.431    17286.992
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
590  FLAVI+F+R2    8522.539     100 17245.078    17665.911    17545.473
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
591  FLAVI+F+R3    8427.941     102 17059.881    17516.664    17366.284
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
592  FLAVI+F+R4    8390.924     104 16989.847    17486.211    17302.258
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
593  FLAVI+F+R5    8386.004     106 16984.008    17524.103    17302.426
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
599  HIVb          8684.295     79  17526.589    17709.778    17763.901
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
600  HIVb+I        8606.154     80  17372.308    17562.896    17612.623
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
601  HIVb+G4       8235.939     80  16631.877    16822.465    16872.193
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
602  HIVb+I+G4     8233.010     81  16628.021    16826.289    16871.340
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
603  HIVb+R2       8323.485     81  16808.970    17007.239    17052.290
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
604  HIVb+R3       8245.993     83  16657.985    16872.508    16907.313
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
605  HIVb+R4       8227.397     85  16624.794    16856.858    16880.130
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
606  HIVb+R5       8226.697     87  16627.393    16878.409    16888.736
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
612  HIVb+F        8642.286     98  17480.571    17868.651    17774.958
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
613  HIVb+F+I      8558.485     99  17314.970    17719.051    17612.360
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
614  HIVb+F+G4     8190.137     99  16578.274    16982.356    16875.665
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
615  HIVb+F+I+G4   8186.174     100 16572.348    16993.181    16872.742
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
616  HIVb+F+R2     8288.349     100 16776.698    17197.532    17077.093
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
617  HIVb+F+R3     8206.824     102 16617.648    17074.430    16924.050
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
618  HIVb+F+R4     8185.504     104 16579.009    17075.372    16891.419
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
619  HIVb+F+R5     8182.436     106 16576.873    17116.968    16895.291
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
625  HIVw          9120.569     79  18399.137    18582.326    18636.449
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
626  HIVw+I        9023.891     80  18207.783    18398.371    18448.098
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
627  HIVw+G4       8689.935     80  17539.870    17730.458    17780.186
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
628  HIVw+I+G4     8684.379     81  17530.757    17729.026    17774.077
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
629  HIVw+R2       8772.864     81  17707.728    17905.997    17951.048
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
630  HIVw+R3       8689.645     83  17545.290    17759.813    17794.617
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
631  HIVw+R4       8672.413     85  17514.825    17746.889    17770.161
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
632  HIVw+R5       8671.404     87  17516.808    17767.825    17778.152
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
638  HIVw+F        8923.310     98  18042.619    18430.699    18337.006
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
639  HIVw+F+I      8814.850     99  17827.699    18231.781    18125.090
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
640  HIVw+F+G4     8454.888     99  17107.776    17511.858    17405.167
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
641  HIVw+F+I+G4   8450.243     100 17100.485    17521.318    17400.880
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
642  HIVw+F+R2     8576.457     100 17352.914    17773.747    17653.309
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
643  HIVw+F+R3     8473.486     102 17150.971    17607.754    17457.374
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
644  HIVw+F+R4     8438.744     104 17085.487    17581.851    17397.898
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
645  HIVw+F+R5     8438.684     106 17089.369    17629.464    17407.787
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
651  FLU           8602.002     79  17362.004    17545.193    17599.316
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
652  FLU+I         8524.266     80  17208.532    17399.120    17448.848
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
653  FLU+G4        8219.958     80  16599.916    16790.504    16840.232
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
654  FLU+I+G4      8216.140     81  16594.281    16792.550    16837.601
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
655  FLU+R2        8293.346     81  16748.692    16946.961    16992.012
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
656  FLU+R3        8219.072     83  16604.143    16818.666    16853.471
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
657  FLU+R4        8210.945     85  16591.891    16823.954    16847.226
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
658  FLU+R5        8210.430     87  16594.860    16845.877    16856.204
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
664  FLU+F         8539.276     98  17274.552    17662.632    17568.938
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
665  FLU+F+I       8450.060     99  17098.119    17502.201    17395.510
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
666  FLU+F+G4      8126.609     99  16451.219    16855.301    16748.610
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
667  FLU+F+I+G4    8120.636     100 16441.273    16862.106    16741.667
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
668  FLU+F+R2      8208.535     100 16617.070    17037.903    16917.465
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
669  FLU+F+R3      8127.718     102 16459.436    16916.219    16765.839
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
670  FLU+F+R4      8112.916     104 16433.833    16930.197    16746.243
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
671  FLU+F+R5      8111.204     106 16434.407    16974.503    16752.826
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
677  rtREV         8254.244     79  16666.488    16849.676    16903.799
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
678  rtREV+I       8177.341     80  16514.681    16705.270    16754.997
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
679  rtREV+G4      7941.798     80  16043.595    16234.184    16283.911
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
680  rtREV+I+G4    7935.252     81  16032.505    16230.773    16275.824
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
681  rtREV+R2      8001.859     81  16165.717    16363.986    16409.037
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
682  rtREV+R3      7938.320     83  16042.641    16257.164    16291.968
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
683  rtREV+R4      7930.444     85  16030.887    16262.951    16286.223
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
684  rtREV+R5      7930.426     87  16034.851    16285.867    16296.194
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
690  rtREV+F       8210.902     98  16617.804    17005.884    16912.190
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
691  rtREV+F+I     8136.662     99  16471.324    16875.405    16768.714
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
692  rtREV+F+G4    7883.282     99  15964.564    16368.646    16261.955
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
693  rtREV+F+I+G4  7877.595     100 15955.191    16376.024    16255.585
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
694  rtREV+F+R2    7947.669     100 16095.339    16516.172    16395.733
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
695  rtREV+F+R3    7883.764     102 15971.529    16428.311    16277.931
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
696  rtREV+F+R4    7874.314     104 15956.628    16452.991    16269.038
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
697  rtREV+F+R5    7874.214     106 15960.428    16500.524    16278.847
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
703  cpREV         8337.444     79  16832.889    17016.077    17070.200
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
704  cpREV+I       8271.515     80  16703.030    16893.619    16943.346
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
705  cpREV+G4      8026.292     80  16212.584    16403.172    16452.900
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
706  cpREV+I+G4    8023.183     81  16208.366    16406.634    16451.685
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
707  cpREV+R2      8084.483     81  16330.966    16529.234    16574.285
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
708  cpREV+R3      8020.386     83  16206.773    16421.296    16456.100
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
709  cpREV+R4      8019.354     85  16208.707    16440.771    16464.043
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
716  cpREV+F       8285.457     98  16766.914    17154.994    17061.300
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
717  cpREV+F+I     8211.090     99  16620.180    17024.262    16917.571
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
718  cpREV+F+G4    7974.063     99  16146.127    16550.208    16443.517
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
719  cpREV+F+I+G4  7969.158     100 16138.315    16559.148    16438.710
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
720  cpREV+F+R2    8038.374     100 16276.748    16697.581    16577.142
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
721  cpREV+F+R3    7969.832     102 16143.665    16600.447    16450.067
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
722  cpREV+F+R4    7967.206     104 16142.412    16638.776    16454.822
Model C10 is alias for POISSON+G+FMIX{C10pi1:1:0.1191344178,C10pi2:1:0.0874372456,C10pi3:1:0.1037105070,C10pi4:1:0.0922584809,C10pi5:1:0.1070492801,C10pi6:1:0.1329945166,C10pi7:1:0.0538028458,C10pi8:1:0.0691986212,C10pi9:1:0.1319937434,C10pi10:1:0.1024203429}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
729  C10           7863.259     80  15886.518    16077.107    16126.834
Model C20 is alias for POISSON+G+FMIX{C20pi1:1:0.0559910600,C20pi2:1:0.0514824870,C20pi3:1:0.0812922124,C20pi4:1:0.0721976867,C20pi5:1:0.0556718858,C20pi6:1:0.0331003080,C20pi7:1:0.0589501763,C20pi8:1:0.0263756889,C20pi9:1:0.0307584220,C20pi10:1:0.0376701125,C20pi11:1:0.0303058290,C20pi12:1:0.0808775576,C20pi13:1:0.0263349134,C20pi14:1:0.0579101455,C20pi15:1:0.0371248064,C20pi16:1:0.0586867766,C20pi17:1:0.0561479138,C20pi18:1:0.0349810886,C20pi19:1:0.0544937394,C20pi20:1:0.0596471901}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
730  C20           7793.453     80  15746.907    15937.495    15987.222
Model C30 is alias for POISSON+G+FMIX{C30pi1:1:0.0095783264,C30pi2:1:0.0248476365,C30pi3:1:0.0636309366,C30pi4:1:0.0537939225,C30pi5:1:0.0295885587,C30pi6:1:0.0117587936,C30pi7:1:0.0132013428,C30pi8:1:0.0236868805,C30pi9:1:0.0261687659,C30pi10:1:0.0239821974,C30pi11:1:0.0257100906,C30pi12:1:0.0465072425,C30pi13:1:0.0546794546,C30pi14:1:0.0536085131,C30pi15:1:0.0270622670,C30pi16:1:0.0403913593,C30pi17:1:0.0474212700,C30pi18:1:0.0458816478,C30pi19:1:0.0214036510,C30pi20:1:0.0290385981,C30pi21:1:0.0123391793,C30pi22:1:0.0569350229,C30pi23:1:0.0419687568,C30pi24:1:0.0339027062,C30pi25:1:0.0388777376,C30pi26:1:0.0196343766,C30pi27:1:0.0233086174,C30pi28:1:0.0622722654,C30pi29:1:0.0184803385,C30pi30:1:0.0203395454}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
731  C30           7772.690     80  15705.380    15895.969    15945.696
Model C40 is alias for POISSON+G+FMIX{C40pi1:1:0.0223853788,C40pi2:1:0.0338891820,C40pi3:1:0.0577169375,C40pi4:1:0.0252416233,C40pi5:1:0.0108607921,C40pi6:1:0.0462373793,C40pi7:1:0.0102293175,C40pi8:1:0.0147523625,C40pi9:1:0.0143161352,C40pi10:1:0.0182302541,C40pi11:1:0.0204025079,C40pi12:1:0.0425505156,C40pi13:1:0.0248627269,C40pi14:1:0.0105892988,C40pi15:1:0.0188238725,C40pi16:1:0.0086663445,C40pi17:1:0.0148496147,C40pi18:1:0.0343037402,C40pi19:1:0.0225335203,C40pi20:1:0.0174068578,C40pi21:1:0.0112207827,C40pi22:1:0.0443532245,C40pi23:1:0.0392573370,C40pi24:1:0.0196756555,C40pi25:1:0.0287690328,C40pi26:1:0.0114441177,C40pi27:1:0.0112338740,C40pi28:1:0.0582694099,C40pi29:1:0.0444272279,C40pi30:1:0.0112010942,C40pi31:1:0.0145176111,C40pi32:1:0.0114629026,C40pi33:1:0.0239628061,C40pi34:1:0.0266266492,C40pi35:1:0.0481201159,C40pi36:1:0.0371147423,C40pi37:1:0.0160476688,C40pi38:1:0.0237249267,C40pi39:1:0.0235226203,C40pi40:1:0.0261998398}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
732  C40           7765.199     80  15690.397    15880.986    15930.713
Model C50 is alias for POISSON+G+FMIX{C50pi1:1:0.0164297003,C50pi2:1:0.0273175755,C50pi3:1:0.0460247610,C50pi4:1:0.0084864734,C50pi5:1:0.0125389252,C50pi6:1:0.0343549036,C50pi7:1:0.0130241102,C50pi8:1:0.0094755681,C50pi9:1:0.0190040551,C50pi10:1:0.0151902354,C50pi11:1:0.0320534760,C50pi12:1:0.0210059850,C50pi13:1:0.0237408547,C50pi14:1:0.0239841203,C50pi15:1:0.0213748021,C50pi16:1:0.0210717705,C50pi17:1:0.0050241805,C50pi18:1:0.0166262276,C50pi19:1:0.0143945956,C50pi20:1:0.0104391130,C50pi21:1:0.0107628277,C50pi22:1:0.0148818171,C50pi23:1:0.0321480239,C50pi24:1:0.0145477978,C50pi25:1:0.0332355807,C50pi26:1:0.0143190281,C50pi27:1:0.0234478734,C50pi28:1:0.0183044983,C50pi29:1:0.0403269452,C50pi30:1:0.0135629530,C50pi31:1:0.0091880799,C50pi32:1:0.0158270022,C50pi33:1:0.0121019379,C50pi34:1:0.0353560982,C50pi35:1:0.0404495617,C50pi36:1:0.0104569232,C50pi37:1:0.0146187792,C50pi38:1:0.0093984095,C50pi39:1:0.0146773809,C50pi40:1:0.0201635562,C50pi41:1:0.0255640273,C50pi42:1:0.0039486842,C50pi43:1:0.0393652608,C50pi44:1:0.0056415419,C50pi45:1:0.0382833580,C50pi46:1:0.0039735086,C50pi47:1:0.0140269355,C50pi48:1:0.0476703673,C50pi49:1:0.0204062788,C50pi50:1:0.0117835304}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
733  C50           7760.314     80  15680.628    15871.216    15920.944
Model C60 is alias for POISSON+G+FMIX{C60pi1:1:0.0169698865,C60pi2:1:0.0211683374,C60pi3:1:0.0276589079,C60pi4:1:0.0065675964,C60pi5:1:0.0141221416,C60pi6:1:0.0068774834,C60pi7:1:0.0146909701,C60pi8:1:0.0067225777,C60pi9:1:0.0018396660,C60pi10:1:0.0102547197,C60pi11:1:0.0230896163,C60pi12:1:0.0057941033,C60pi13:1:0.0125394534,C60pi14:1:0.0204526478,C60pi15:1:0.0070629602,C60pi16:1:0.0117982741,C60pi17:1:0.0068334668,C60pi18:1:0.0433775839,C60pi19:1:0.0318278731,C60pi20:1:0.0222546108,C60pi21:1:0.0102264969,C60pi22:1:0.0150545891,C60pi23:1:0.0134159878,C60pi24:1:0.0148552065,C60pi25:1:0.0239111516,C60pi26:1:0.0128776278,C60pi27:1:0.0222318842,C60pi28:1:0.0247444742,C60pi29:1:0.0214274810,C60pi30:1:0.0115001882,C60pi31:1:0.0076017389,C60pi32:1:0.0130258568,C60pi33:1:0.0093701965,C60pi34:1:0.0467194264,C60pi35:1:0.0441940314,C60pi36:1:0.0322263154,C60pi37:1:0.0402999891,C60pi38:1:0.0150234227,C60pi39:1:0.0104589903,C60pi40:1:0.0214742395,C60pi41:1:0.0154957836,C60pi42:1:0.0101789953,C60pi43:1:0.0227980379,C60pi44:1:0.0123204539,C60pi45:1:0.0066777583,C60pi46:1:0.0004150083,C60pi47:1:0.0344385130,C60pi48:1:0.0113663379,C60pi49:1:0.0127143049,C60pi50:1:0.0124323741,C60pi51:1:0.0262124415,C60pi52:1:0.0064994957,C60pi53:1:0.0103203293,C60pi54:1:0.0142463512,C60pi55:1:0.0215600067,C60pi56:1:0.0199150700,C60pi57:1:0.0038964200,C60pi58:1:0.0113448855,C60pi59:1:0.0128595846,C60pi60:1:0.0117656776}
WARNING: Your input class weight 0.000415008 is very small and may cause numerical issues
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
734  C60           7760.787     80  15681.574    15872.162    15921.889
Model EX2 is alias for MIX{BurEX2:0.672020808818762,ExpEX2:1.6413466609931}
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
735  EX2           7938.389     80  16036.778    16227.366    16277.094
Model EX3 is alias for MIX{BurEX3:0.427672756793791,IntEX3:0.837595938019774,HExEX3:1.51863631431518}
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
736  EX3           7886.172     81  15934.344    16132.613    16177.664
Model EHO is alias for MIX{ExtEHO:0.720274356,HelEHO:0.976798797,OthEHO:0.783109376}
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
737  EHO           8082.912     81  16327.825    16526.093    16571.144
Model UL2 is alias for MIX{M1_UL2:0.581348617,M2_UL2:1.465482789}
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
738  UL2           7944.414     80  16048.829    16239.417    16289.144
Model UL3 is alias for MIX{Q1_UL3:0.484340397,Q2_UL3:0.492780514,Q3_UL3:1.15597274}
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
739  UL3           8090.483     81  16342.966    16541.235    16586.286
Model EX_EHO is alias for MIX{BUR_EXT:0.761816796788931,BUR_HEL:0.744425646802117,BUR_OTH:0.532457759429489,EXP_EXT:1.5639387472863,EXP_HEL:2.06403411829438,EXP_OTH:1.43336795177594}
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
740  EX_EHO        7853.998     84  15875.997    16099.122    16128.328
Model LG4M is alias for MIX{LG4M1,LG4M2,LG4M3,LG4M4}*G4
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
741  LG4M          7780.467     80  15720.933    15911.521    15961.249
Model LG4X is alias for MIX{LG4X1,LG4X2,LG4X3,LG4X4}*R4
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
742  LG4X          7757.907     85  15685.814    15917.877    15941.149
Model CF4 is alias for POISSON+FMIX{Fclass1,Fclass2,Fclass3,Fclass4}+F+G
WARNING: Normalizing State frequencies so that sum of them equals to 1
WARNING: Normalizing State frequencies so that sum of them equals to 1
WARNING: Normalizing State frequencies so that sum of them equals to 1
WARNING: Normalizing State frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
743  CF4           8153.417     103 16512.834    16988.923    16822.241
Model LG+C10 is alias for LG+POISSON+G+FMIX{C10pi1:1:0.1191344178,C10pi2:1:0.0874372456,C10pi3:1:0.1037105070,C10pi4:1:0.0922584809,C10pi5:1:0.1070492801,C10pi6:1:0.1329945166,C10pi7:1:0.0538028458,C10pi8:1:0.0691986212,C10pi9:1:0.1319937434,C10pi10:1:0.1024203429}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
744  LG+C10        7847.164     80  15854.328    16044.916    16094.644
Model LG+C20 is alias for LG+POISSON+G+FMIX{C20pi1:1:0.0559910600,C20pi2:1:0.0514824870,C20pi3:1:0.0812922124,C20pi4:1:0.0721976867,C20pi5:1:0.0556718858,C20pi6:1:0.0331003080,C20pi7:1:0.0589501763,C20pi8:1:0.0263756889,C20pi9:1:0.0307584220,C20pi10:1:0.0376701125,C20pi11:1:0.0303058290,C20pi12:1:0.0808775576,C20pi13:1:0.0263349134,C20pi14:1:0.0579101455,C20pi15:1:0.0371248064,C20pi16:1:0.0586867766,C20pi17:1:0.0561479138,C20pi18:1:0.0349810886,C20pi19:1:0.0544937394,C20pi20:1:0.0596471901}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
745  LG+C20        7809.088     80  15778.175    15968.763    16018.491
Model LG+C30 is alias for LG+POISSON+G+FMIX{C30pi1:1:0.0095783264,C30pi2:1:0.0248476365,C30pi3:1:0.0636309366,C30pi4:1:0.0537939225,C30pi5:1:0.0295885587,C30pi6:1:0.0117587936,C30pi7:1:0.0132013428,C30pi8:1:0.0236868805,C30pi9:1:0.0261687659,C30pi10:1:0.0239821974,C30pi11:1:0.0257100906,C30pi12:1:0.0465072425,C30pi13:1:0.0546794546,C30pi14:1:0.0536085131,C30pi15:1:0.0270622670,C30pi16:1:0.0403913593,C30pi17:1:0.0474212700,C30pi18:1:0.0458816478,C30pi19:1:0.0214036510,C30pi20:1:0.0290385981,C30pi21:1:0.0123391793,C30pi22:1:0.0569350229,C30pi23:1:0.0419687568,C30pi24:1:0.0339027062,C30pi25:1:0.0388777376,C30pi26:1:0.0196343766,C30pi27:1:0.0233086174,C30pi28:1:0.0622722654,C30pi29:1:0.0184803385,C30pi30:1:0.0203395454}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
746  LG+C30        7790.860     80  15741.721    15932.309    15982.037
Model LG+C40 is alias for LG+POISSON+G+FMIX{C40pi1:1:0.0223853788,C40pi2:1:0.0338891820,C40pi3:1:0.0577169375,C40pi4:1:0.0252416233,C40pi5:1:0.0108607921,C40pi6:1:0.0462373793,C40pi7:1:0.0102293175,C40pi8:1:0.0147523625,C40pi9:1:0.0143161352,C40pi10:1:0.0182302541,C40pi11:1:0.0204025079,C40pi12:1:0.0425505156,C40pi13:1:0.0248627269,C40pi14:1:0.0105892988,C40pi15:1:0.0188238725,C40pi16:1:0.0086663445,C40pi17:1:0.0148496147,C40pi18:1:0.0343037402,C40pi19:1:0.0225335203,C40pi20:1:0.0174068578,C40pi21:1:0.0112207827,C40pi22:1:0.0443532245,C40pi23:1:0.0392573370,C40pi24:1:0.0196756555,C40pi25:1:0.0287690328,C40pi26:1:0.0114441177,C40pi27:1:0.0112338740,C40pi28:1:0.0582694099,C40pi29:1:0.0444272279,C40pi30:1:0.0112010942,C40pi31:1:0.0145176111,C40pi32:1:0.0114629026,C40pi33:1:0.0239628061,C40pi34:1:0.0266266492,C40pi35:1:0.0481201159,C40pi36:1:0.0371147423,C40pi37:1:0.0160476688,C40pi38:1:0.0237249267,C40pi39:1:0.0235226203,C40pi40:1:0.0261998398}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
747  LG+C40        7776.072     80  15712.143    15902.731    15952.459
Model LG+C50 is alias for LG+POISSON+G+FMIX{C50pi1:1:0.0164297003,C50pi2:1:0.0273175755,C50pi3:1:0.0460247610,C50pi4:1:0.0084864734,C50pi5:1:0.0125389252,C50pi6:1:0.0343549036,C50pi7:1:0.0130241102,C50pi8:1:0.0094755681,C50pi9:1:0.0190040551,C50pi10:1:0.0151902354,C50pi11:1:0.0320534760,C50pi12:1:0.0210059850,C50pi13:1:0.0237408547,C50pi14:1:0.0239841203,C50pi15:1:0.0213748021,C50pi16:1:0.0210717705,C50pi17:1:0.0050241805,C50pi18:1:0.0166262276,C50pi19:1:0.0143945956,C50pi20:1:0.0104391130,C50pi21:1:0.0107628277,C50pi22:1:0.0148818171,C50pi23:1:0.0321480239,C50pi24:1:0.0145477978,C50pi25:1:0.0332355807,C50pi26:1:0.0143190281,C50pi27:1:0.0234478734,C50pi28:1:0.0183044983,C50pi29:1:0.0403269452,C50pi30:1:0.0135629530,C50pi31:1:0.0091880799,C50pi32:1:0.0158270022,C50pi33:1:0.0121019379,C50pi34:1:0.0353560982,C50pi35:1:0.0404495617,C50pi36:1:0.0104569232,C50pi37:1:0.0146187792,C50pi38:1:0.0093984095,C50pi39:1:0.0146773809,C50pi40:1:0.0201635562,C50pi41:1:0.0255640273,C50pi42:1:0.0039486842,C50pi43:1:0.0393652608,C50pi44:1:0.0056415419,C50pi45:1:0.0382833580,C50pi46:1:0.0039735086,C50pi47:1:0.0140269355,C50pi48:1:0.0476703673,C50pi49:1:0.0204062788,C50pi50:1:0.0117835304}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
748  LG+C50        7774.494     80  15708.987    15899.575    15949.303
Model LG+C60 is alias for LG+POISSON+G+FMIX{C60pi1:1:0.0169698865,C60pi2:1:0.0211683374,C60pi3:1:0.0276589079,C60pi4:1:0.0065675964,C60pi5:1:0.0141221416,C60pi6:1:0.0068774834,C60pi7:1:0.0146909701,C60pi8:1:0.0067225777,C60pi9:1:0.0018396660,C60pi10:1:0.0102547197,C60pi11:1:0.0230896163,C60pi12:1:0.0057941033,C60pi13:1:0.0125394534,C60pi14:1:0.0204526478,C60pi15:1:0.0070629602,C60pi16:1:0.0117982741,C60pi17:1:0.0068334668,C60pi18:1:0.0433775839,C60pi19:1:0.0318278731,C60pi20:1:0.0222546108,C60pi21:1:0.0102264969,C60pi22:1:0.0150545891,C60pi23:1:0.0134159878,C60pi24:1:0.0148552065,C60pi25:1:0.0239111516,C60pi26:1:0.0128776278,C60pi27:1:0.0222318842,C60pi28:1:0.0247444742,C60pi29:1:0.0214274810,C60pi30:1:0.0115001882,C60pi31:1:0.0076017389,C60pi32:1:0.0130258568,C60pi33:1:0.0093701965,C60pi34:1:0.0467194264,C60pi35:1:0.0441940314,C60pi36:1:0.0322263154,C60pi37:1:0.0402999891,C60pi38:1:0.0150234227,C60pi39:1:0.0104589903,C60pi40:1:0.0214742395,C60pi41:1:0.0154957836,C60pi42:1:0.0101789953,C60pi43:1:0.0227980379,C60pi44:1:0.0123204539,C60pi45:1:0.0066777583,C60pi46:1:0.0004150083,C60pi47:1:0.0344385130,C60pi48:1:0.0113663379,C60pi49:1:0.0127143049,C60pi50:1:0.0124323741,C60pi51:1:0.0262124415,C60pi52:1:0.0064994957,C60pi53:1:0.0103203293,C60pi54:1:0.0142463512,C60pi55:1:0.0215600067,C60pi56:1:0.0199150700,C60pi57:1:0.0038964200,C60pi58:1:0.0113448855,C60pi59:1:0.0128595846,C60pi60:1:0.0117656776}
WARNING: Your input class weight 0.000415008 is very small and may cause numerical issues
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
749  LG+C60        7762.171     80  15684.342    15874.930    15924.658
Akaike Information Criterion:           C50
Corrected Akaike Information Criterion: C50
Bayesian Information Criterion:         C50
Best-fit model: C50 chosen according to BIC

All model information printed to iqtree_gene_trees/COG1513.model.gz
CPU time for ModelFinder: 1153.026 seconds (0h:19m:13s)
Wall-clock time for ModelFinder: 117.367 seconds (0h:1m:57s)
Generating 1000 samples for ultrafast bootstrap (seed: 278106)...
Model C50 is alias for POISSON+G+FMIX{C50pi1:1:0.0164297003,C50pi2:1:0.0273175755,C50pi3:1:0.0460247610,C50pi4:1:0.0084864734,C50pi5:1:0.0125389252,C50pi6:1:0.0343549036,C50pi7:1:0.0130241102,C50pi8:1:0.0094755681,C50pi9:1:0.0190040551,C50pi10:1:0.0151902354,C50pi11:1:0.0320534760,C50pi12:1:0.0210059850,C50pi13:1:0.0237408547,C50pi14:1:0.0239841203,C50pi15:1:0.0213748021,C50pi16:1:0.0210717705,C50pi17:1:0.0050241805,C50pi18:1:0.0166262276,C50pi19:1:0.0143945956,C50pi20:1:0.0104391130,C50pi21:1:0.0107628277,C50pi22:1:0.0148818171,C50pi23:1:0.0321480239,C50pi24:1:0.0145477978,C50pi25:1:0.0332355807,C50pi26:1:0.0143190281,C50pi27:1:0.0234478734,C50pi28:1:0.0183044983,C50pi29:1:0.0403269452,C50pi30:1:0.0135629530,C50pi31:1:0.0091880799,C50pi32:1:0.0158270022,C50pi33:1:0.0121019379,C50pi34:1:0.0353560982,C50pi35:1:0.0404495617,C50pi36:1:0.0104569232,C50pi37:1:0.0146187792,C50pi38:1:0.0093984095,C50pi39:1:0.0146773809,C50pi40:1:0.0201635562,C50pi41:1:0.0255640273,C50pi42:1:0.0039486842,C50pi43:1:0.0393652608,C50pi44:1:0.0056415419,C50pi45:1:0.0382833580,C50pi46:1:0.0039735086,C50pi47:1:0.0140269355,C50pi48:1:0.0476703673,C50pi49:1:0.0204062788,C50pi50:1:0.0117835304}

NOTE: 214 MB RAM (0 GB) is required!
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
Estimate model parameters (epsilon = 0.100)
1. Initial log-likelihood: -7760.314
Optimal log-likelihood: -7760.305
Mixture weights: 0.016 0.027 0.046 0.008 0.013 0.034 0.013 0.009 0.019 0.015 0.032 0.021 0.024 0.024 0.021 0.021 0.005 0.017 0.014 0.010 0.011 0.015 0.032 0.015 0.033 0.014 0.023 0.018 0.040 0.014 0.009 0.016 0.012 0.035 0.040 0.010 0.015 0.009 0.015 0.020 0.026 0.004 0.039 0.006 0.038 0.004 0.014 0.048 0.020 0.012
Gamma shape alpha: 0.996
Parameters optimization took 1 rounds (0.818 sec)
Wrote distance file to... 
Computing ML distances based on estimated model parameters...
Calculating distance matrix: done in 0.0552356 secs using 994.5% CPU
Computing ML distances took 0.055474 sec (of wall-clock time) 0.551232 sec (of CPU time)
Setting up auxiliary I and S matrices: done in 0.00183664 secs using 615.4% CPU
Constructing RapidNJ tree: done in 0.0742056 secs using 385.9% CPU
Computing RapidNJ tree took 0.076310 sec (of wall-clock time) 0.298939 sec (of CPU time)
Log-likelihood of RapidNJ tree: -7766.551
--------------------------------------------------------------------
|             INITIALIZING CANDIDATE TREE SET                      |
--------------------------------------------------------------------
Generating 98 parsimony trees... 0.855 second
Computing log-likelihood of 98 initial trees ... 27.085 seconds
Current best score: -7756.794

Do NNI search on 20 best initial trees
Optimizing NNI: done in 2.53242 secs using 995% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 1: -7744.683
Optimizing NNI: done in 3.50312 secs using 992.2% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 2: -7744.470
Optimizing NNI: done in 4.60101 secs using 995.2% CPU
Optimizing NNI: done in 5.10509 secs using 993.7% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 4: -7744.020
Optimizing NNI: done in 4.78279 secs using 992.9% CPU
Optimizing NNI: done in 3.47238 secs using 994.8% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 6: -7742.004
Optimizing NNI: done in 4.65676 secs using 994.2% CPU
Optimizing NNI: done in 4.36052 secs using 994.1% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 8: -7741.642
Optimizing NNI: done in 3.40075 secs using 994.3% CPU
Optimizing NNI: done in 3.17309 secs using 993.9% CPU
Iteration 10 / LogL: -7757.517 / Time: 0h:1m:18s
Optimizing NNI: done in 3.87584 secs using 994% CPU
Optimizing NNI: done in 3.84607 secs using 993.8% CPU
Optimizing NNI: done in 4.78674 secs using 994.3% CPU
Optimizing NNI: done in 4.60339 secs using 994% CPU
Optimizing NNI: done in 3.48302 secs using 993.5% CPU
Optimizing NNI: done in 6.28544 secs using 995.5% CPU
Optimizing NNI: done in 7.09749 secs using 995.5% CPU
BETTER TREE FOUND at iteration 17: -7741.641
Optimizing NNI: done in 5.96018 secs using 994.9% CPU
Optimizing NNI: done in 3.89892 secs using 994.8% CPU
Optimizing NNI: done in 2.39895 secs using 994.1% CPU
Iteration 20 / LogL: -7759.347 / Time: 0h:2m:4s
Finish initializing candidate tree set (18)
Current best tree score: -7741.641 / CPU time: 121.165
Number of iterations: 20
--------------------------------------------------------------------
|               OPTIMIZING CANDIDATE TREE SET                      |
--------------------------------------------------------------------
Optimizing NNI: done in 7.0138 secs using 995% CPU
Estimate model parameters (epsilon = 0.100)
UPDATE BEST LOG-LIKELIHOOD: -7741.613
Optimizing NNI: done in 5.2228 secs using 995.8% CPU
Optimizing NNI: done in 4.94081 secs using 996.2% CPU
Optimizing NNI: done in 6.75565 secs using 996.2% CPU
Optimizing NNI: done in 9.75244 secs using 995.7% CPU
Optimizing NNI: done in 6.06575 secs using 996.1% CPU
Optimizing NNI: done in 5.17804 secs using 994.5% CPU
Optimizing NNI: done in 4.60106 secs using 995% CPU
Optimizing NNI: done in 4.85652 secs using 995% CPU
Optimizing NNI: done in 4.21074 secs using 995.3% CPU
Iteration 30 / LogL: -7742.603 / Time: 0h:3m:4s (0h:9m:14s left)
Optimizing NNI: done in 7.16186 secs using 994.9% CPU
Optimizing NNI: done in 4.30128 secs using 994.8% CPU
Optimizing NNI: done in 7.07866 secs using 996.1% CPU
Optimizing NNI: done in 10.7336 secs using 996% CPU
Optimizing NNI: done in 6.11687 secs using 996.5% CPU
Optimizing NNI: done in 4.62079 secs using 995.8% CPU
Optimizing NNI: done in 4.75443 secs using 994.8% CPU
Optimizing NNI: done in 6.90377 secs using 995.5% CPU
Optimizing NNI: done in 6.00308 secs using 995.5% CPU
Optimizing NNI: done in 4.59016 secs using 995% CPU
Iteration 40 / LogL: -7752.980 / Time: 0h:4m:7s (0h:8m:9s left)
Optimizing NNI: done in 4.75535 secs using 994.5% CPU
Optimizing NNI: done in 6.78659 secs using 994.9% CPU
Optimizing NNI: done in 4.84564 secs using 995.8% CPU
Optimizing NNI: done in 5.89263 secs using 996% CPU
Optimizing NNI: done in 4.01005 secs using 994.5% CPU
Optimizing NNI: done in 5.4636 secs using 996.1% CPU
Optimizing NNI: done in 5.7443 secs using 996.2% CPU
Optimizing NNI: done in 4.80688 secs using 996.3% CPU
Optimizing NNI: done in 6.35696 secs using 996.3% CPU
Optimizing NNI: done in 4.6189 secs using 995.9% CPU
Iteration 50 / LogL: -7746.658 / Time: 0h:5m:1s (0h:6m:52s left)
Log-likelihood cutoff on original alignment: -7780.965
UFBoot trees printed to iqtree_gene_trees/COG1513.ufboot
Optimizing NNI: done in 5.19049 secs using 996.3% CPU
Optimizing NNI: done in 7.44649 secs using 996.1% CPU
Optimizing NNI: done in 4.30386 secs using 995.5% CPU
Optimizing NNI: done in 3.96152 secs using 995.4% CPU
Optimizing NNI: done in 4.79917 secs using 995.8% CPU
Optimizing NNI: done in 4.48607 secs using 995.9% CPU
Optimizing NNI: done in 3.56885 secs using 995.7% CPU
Optimizing NNI: done in 4.80647 secs using 995.6% CPU
Optimizing NNI: done in 5.5728 secs using 995.5% CPU
Optimizing NNI: done in 9.1613 secs using 995.4% CPU
Iteration 60 / LogL: -7741.629 / Time: 0h:5m:56s (0h:5m:44s left)
Optimizing NNI: done in 4.61803 secs using 992.2% CPU
Optimizing NNI: done in 4.35013 secs using 996.2% CPU
Optimizing NNI: done in 5.30109 secs using 995.4% CPU
Optimizing NNI: done in 6.44082 secs using 996.3% CPU
Optimizing NNI: done in 5.96414 secs using 994.4% CPU
Optimizing NNI: done in 6.02561 secs using 996.2% CPU
Optimizing NNI: done in 5.24716 secs using 996.4% CPU
Optimizing NNI: done in 3.70735 secs using 996.2% CPU
Optimizing NNI: done in 5.82447 secs using 995.7% CPU
Optimizing NNI: done in 4.94005 secs using 995.8% CPU
Iteration 70 / LogL: -7742.209 / Time: 0h:6m:49s (0h:4m:38s left)
Optimizing NNI: done in 2.6065 secs using 995% CPU
Optimizing NNI: done in 4.97948 secs using 995.9% CPU
Optimizing NNI: done in 6.1287 secs using 991.8% CPU
Optimizing NNI: done in 5.43203 secs using 974.4% CPU
Optimizing NNI: done in 9.85017 secs using 983.6% CPU
Optimizing NNI: done in 7.51779 secs using 977.4% CPU
Optimizing NNI: done in 7.57849 secs using 986.8% CPU
Optimizing NNI: done in 7.22012 secs using 991.8% CPU
Optimizing NNI: done in 7.51902 secs using 971.9% CPU
Optimizing NNI: done in 4.04766 secs using 995.8% CPU
Iteration 80 / LogL: -7741.735 / Time: 0h:7m:53s (0h:3m:41s left)
Optimizing NNI: done in 4.5848 secs using 996.4% CPU
Optimizing NNI: done in 5.14238 secs using 966.9% CPU
Optimizing NNI: done in 6.77302 secs using 990.3% CPU
Optimizing NNI: done in 3.81248 secs using 997.3% CPU
Optimizing NNI: done in 6.16222 secs using 997.7% CPU
Optimizing NNI: done in 3.54355 secs using 996.9% CPU
Optimizing NNI: done in 4.96784 secs using 998% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 87: -7740.912
Optimizing NNI: done in 5.83017 secs using 997.6% CPU
Optimizing NNI: done in 7.54513 secs using 996.1% CPU
Optimizing NNI: done in 4.61518 secs using 995.7% CPU
Iteration 90 / LogL: -7740.936 / Time: 0h:8m:47s (0h:9m:34s left)
Optimizing NNI: done in 6.10381 secs using 995.8% CPU
UPDATE BEST LOG-LIKELIHOOD: -7740.905
Optimizing NNI: done in 4.60391 secs using 994.8% CPU
Optimizing NNI: done in 3.90429 secs using 994.1% CPU
UPDATE BEST LOG-LIKELIHOOD: -7740.903
Optimizing NNI: done in 7.06629 secs using 996.1% CPU
Optimizing NNI: done in 7.51686 secs using 995% CPU
Optimizing NNI: done in 5.74155 secs using 995.7% CPU
Optimizing NNI: done in 6.54908 secs using 994.6% CPU
Optimizing NNI: done in 9.23366 secs using 995% CPU
Optimizing NNI: done in 7.10926 secs using 994% CPU
Optimizing NNI: done in 5.83414 secs using 994.7% CPU
Iteration 100 / LogL: -7741.615 / Time: 0h:9m:51s (0h:8m:40s left)
Log-likelihood cutoff on original alignment: -7781.355
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.991
UFBoot trees printed to iqtree_gene_trees/COG1513.ufboot
Optimizing NNI: done in 6.25785 secs using 994.9% CPU
Optimizing NNI: done in 6.66215 secs using 993.8% CPU
Optimizing NNI: done in 3.94028 secs using 993.3% CPU
Optimizing NNI: done in 6.65427 secs using 991.9% CPU
Optimizing NNI: done in 4.2019 secs using 992.6% CPU
Optimizing NNI: done in 6.45207 secs using 992.7% CPU
Optimizing NNI: done in 5.62042 secs using 994.7% CPU
Optimizing NNI: done in 5.20142 secs using 990.1% CPU
Optimizing NNI: done in 8.07247 secs using 990.9% CPU
Optimizing NNI: done in 5.83488 secs using 992.2% CPU
Iteration 110 / LogL: -7740.928 / Time: 0h:10m:51s (0h:8m:58s left)
Optimizing NNI: done in 4.81194 secs using 992.6% CPU
Optimizing NNI: done in 6.12959 secs using 994.5% CPU
Optimizing NNI: done in 4.09284 secs using 993% CPU
Optimizing NNI: done in 6.37185 secs using 993% CPU
Optimizing NNI: done in 6.2295 secs using 993.1% CPU
Optimizing NNI: done in 6.51534 secs using 993.2% CPU
Optimizing NNI: done in 4.41755 secs using 994.8% CPU
Optimizing NNI: done in 4.32368 secs using 991.5% CPU
Optimizing NNI: done in 6.92139 secs using 993.6% CPU
Optimizing NNI: done in 9.14187 secs using 993.7% CPU
Iteration 120 / LogL: -7741.421 / Time: 0h:11m:51s (0h:7m:58s left)
Optimizing NNI: done in 6.59682 secs using 993.3% CPU
Optimizing NNI: done in 3.94515 secs using 992.2% CPU
Optimizing NNI: done in 9.13148 secs using 992.4% CPU
Optimizing NNI: done in 3.87975 secs using 994.5% CPU
Optimizing NNI: done in 7.00079 secs using 994% CPU
UPDATE BEST LOG-LIKELIHOOD: -7740.902
Optimizing NNI: done in 7.58898 secs using 994.7% CPU
Optimizing NNI: done in 6.08691 secs using 995.4% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 127: -7740.775
Optimizing NNI: done in 6.26569 secs using 996.2% CPU
Optimizing NNI: done in 5.30879 secs using 995.8% CPU
Optimizing NNI: done in 5.11321 secs using 995.1% CPU
Iteration 130 / LogL: -7740.875 / Time: 0h:12m:54s (0h:9m:42s left)
Optimizing NNI: done in 5.20703 secs using 993.8% CPU
Optimizing NNI: done in 5.84309 secs using 995.3% CPU
Optimizing NNI: done in 10.7945 secs using 995.7% CPU
Optimizing NNI: done in 6.45632 secs using 994.2% CPU
Optimizing NNI: done in 5.55086 secs using 991.7% CPU
Optimizing NNI: done in 7.56169 secs using 993.5% CPU
Optimizing NNI: done in 7.31038 secs using 992.9% CPU
Optimizing NNI: done in 6.05725 secs using 993.3% CPU
Optimizing NNI: done in 5.70048 secs using 992.8% CPU
Optimizing NNI: done in 4.70623 secs using 993.3% CPU
Iteration 140 / LogL: -7741.014 / Time: 0h:14m:0s (0h:8m:45s left)
Optimizing NNI: done in 7.40115 secs using 991.7% CPU
Optimizing NNI: done in 7.42198 secs using 992.4% CPU
Optimizing NNI: done in 8.13689 secs using 993.9% CPU
Optimizing NNI: done in 6.40452 secs using 991.3% CPU
Optimizing NNI: done in 5.48378 secs using 994.5% CPU
Optimizing NNI: done in 5.39942 secs using 992.8% CPU
Optimizing NNI: done in 6.51337 secs using 994.8% CPU
Optimizing NNI: done in 6.06784 secs using 992.7% CPU
Optimizing NNI: done in 5.19246 secs using 994.6% CPU
Optimizing NNI: done in 6.14601 secs using 994.8% CPU
Iteration 150 / LogL: -7740.935 / Time: 0h:15m:5s (0h:7m:47s left)
Log-likelihood cutoff on original alignment: -7781.355
UFBoot trees printed to iqtree_gene_trees/COG1513.ufboot
Optimizing NNI: done in 5.22956 secs using 995.1% CPU
Optimizing NNI: done in 4.8992 secs using 995% CPU
Optimizing NNI: done in 7.75321 secs using 991.6% CPU
Optimizing NNI: done in 5.32523 secs using 993.3% CPU
Optimizing NNI: done in 6.77111 secs using 993% CPU
Optimizing NNI: done in 6.65555 secs using 991.4% CPU
Optimizing NNI: done in 12.843 secs using 989.9% CPU
Optimizing NNI: done in 4.85239 secs using 993.1% CPU
Optimizing NNI: done in 4.99719 secs using 994.4% CPU
Optimizing NNI: done in 9.52841 secs using 993.8% CPU
Iteration 160 / LogL: -7740.779 / Time: 0h:16m:15s (0h:6m:51s left)
Optimizing NNI: done in 7.85703 secs using 992% CPU
Optimizing NNI: done in 5.37629 secs using 991.2% CPU
Optimizing NNI: done in 9.25786 secs using 993.7% CPU
Optimizing NNI: done in 5.22928 secs using 993.2% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 164: -7740.710
Optimizing NNI: done in 4.97935 secs using 995.6% CPU
Optimizing NNI: done in 8.45082 secs using 993.1% CPU
Optimizing NNI: done in 9.60267 secs using 994.3% CPU
Optimizing NNI: done in 9.49846 secs using 995.6% CPU
Optimizing NNI: done in 9.08657 secs using 992.2% CPU
Optimizing NNI: done in 6.01297 secs using 990.7% CPU
Iteration 170 / LogL: -7741.399 / Time: 0h:17m:32s (0h:9m:45s left)
Optimizing NNI: done in 4.60032 secs using 995% CPU
Optimizing NNI: done in 6.39779 secs using 993.4% CPU
Optimizing NNI: done in 12.4088 secs using 990.8% CPU
Optimizing NNI: done in 6.45434 secs using 990.8% CPU
Optimizing NNI: done in 8.37561 secs using 991.3% CPU
Optimizing NNI: done in 6.61862 secs using 993.9% CPU
Optimizing NNI: done in 7.81256 secs using 995.3% CPU
Optimizing NNI: done in 5.66355 secs using 994.8% CPU
Optimizing NNI: done in 6.08096 secs using 990.7% CPU
Optimizing NNI: done in 4.97624 secs using 994% CPU
Iteration 180 / LogL: -7743.050 / Time: 0h:18m:42s (0h:8m:46s left)
Optimizing NNI: done in 8.29131 secs using 992.9% CPU
Optimizing NNI: done in 4.2756 secs using 993.2% CPU
Optimizing NNI: done in 8.79931 secs using 992.5% CPU
Optimizing NNI: done in 5.87981 secs using 991% CPU
Optimizing NNI: done in 5.71078 secs using 993.5% CPU
Optimizing NNI: done in 5.77694 secs using 995% CPU
Optimizing NNI: done in 5.60288 secs using 992.3% CPU
Optimizing NNI: done in 5.08004 secs using 993.2% CPU
Optimizing NNI: done in 4.48157 secs using 993.8% CPU
Optimizing NNI: done in 10.6993 secs using 992.3% CPU
Iteration 190 / LogL: -7759.619 / Time: 0h:19m:48s (0h:7m:45s left)
Optimizing NNI: done in 7.45425 secs using 994% CPU
Optimizing NNI: done in 8.05301 secs using 993.7% CPU
Optimizing NNI: done in 6.45751 secs using 993.4% CPU
Optimizing NNI: done in 5.36036 secs using 994.1% CPU
Optimizing NNI: done in 6.29759 secs using 992.1% CPU
Optimizing NNI: done in 6.81872 secs using 994.7% CPU
Optimizing NNI: done in 6.43607 secs using 995.2% CPU
Optimizing NNI: done in 7.92732 secs using 989.9% CPU
Optimizing NNI: done in 7.61595 secs using 992.2% CPU
Optimizing NNI: done in 4.567 secs using 990.5% CPU
Iteration 200 / LogL: -7741.361 / Time: 0h:20m:55s (0h:6m:43s left)
Log-likelihood cutoff on original alignment: -7781.529
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.983
NOTE: UFBoot does not converge, continue at least 100 more iterations
UFBoot trees printed to iqtree_gene_trees/COG1513.ufboot
Optimizing NNI: done in 8.94228 secs using 991.9% CPU
Optimizing NNI: done in 4.42626 secs using 995.6% CPU
Optimizing NNI: done in 4.30119 secs using 995.2% CPU
Optimizing NNI: done in 3.74225 secs using 994.8% CPU
Optimizing NNI: done in 7.35054 secs using 995.1% CPU
Optimizing NNI: done in 4.59517 secs using 994.8% CPU
Optimizing NNI: done in 4.78545 secs using 995.7% CPU
Optimizing NNI: done in 5.31878 secs using 995% CPU
Optimizing NNI: done in 5.60543 secs using 995% CPU
Optimizing NNI: done in 5.29901 secs using 995.9% CPU
Iteration 210 / LogL: -7740.902 / Time: 0h:21m:51s (0h:9m:24s left)
Optimizing NNI: done in 4.59276 secs using 995.6% CPU
Optimizing NNI: done in 5.26252 secs using 994.8% CPU
Optimizing NNI: done in 6.20582 secs using 996% CPU
Optimizing NNI: done in 5.33133 secs using 995.7% CPU
Optimizing NNI: done in 7.17075 secs using 995.6% CPU
Optimizing NNI: done in 5.77929 secs using 995% CPU
Optimizing NNI: done in 5.99639 secs using 995.2% CPU
Optimizing NNI: done in 5.82018 secs using 995.4% CPU
Optimizing NNI: done in 7.21903 secs using 995.4% CPU
Optimizing NNI: done in 5.19784 secs using 994.4% CPU
Iteration 220 / LogL: -7740.784 / Time: 0h:22m:50s (0h:8m:20s left)
Optimizing NNI: done in 5.83615 secs using 993.9% CPU
Optimizing NNI: done in 5.51718 secs using 995.6% CPU
Optimizing NNI: done in 4.99114 secs using 994.6% CPU
Optimizing NNI: done in 3.74329 secs using 994.2% CPU
Optimizing NNI: done in 5.3128 secs using 994.1% CPU
Optimizing NNI: done in 4.78645 secs using 994.3% CPU
Optimizing NNI: done in 7.97219 secs using 994.7% CPU
Optimizing NNI: done in 4.80214 secs using 994.6% CPU
Optimizing NNI: done in 6.02871 secs using 993.5% CPU
Optimizing NNI: done in 5.66626 secs using 994.7% CPU
Iteration 230 / LogL: -7740.903 / Time: 0h:23m:46s (0h:7m:15s left)
Optimizing NNI: done in 5.73285 secs using 995.4% CPU
Optimizing NNI: done in 5.73006 secs using 992.2% CPU
Estimate model parameters (epsilon = 0.100)
UPDATE BEST LOG-LIKELIHOOD: -7740.686
Optimizing NNI: done in 6.9421 secs using 994.1% CPU
Optimizing NNI: done in 4.82641 secs using 995.1% CPU
Optimizing NNI: done in 4.49185 secs using 995.7% CPU
Optimizing NNI: done in 4.45971 secs using 995.6% CPU
Optimizing NNI: done in 5.43494 secs using 992.3% CPU
Optimizing NNI: done in 4.81597 secs using 993.8% CPU
Optimizing NNI: done in 6.81422 secs using 989.6% CPU
Optimizing NNI: done in 6.01751 secs using 989.8% CPU
Iteration 240 / LogL: -7740.777 / Time: 0h:24m:43s (0h:6m:12s left)
Optimizing NNI: done in 8.16893 secs using 989.7% CPU
Optimizing NNI: done in 6.45863 secs using 990.5% CPU
Optimizing NNI: done in 5.32004 secs using 989.5% CPU
Optimizing NNI: done in 6.47754 secs using 990.3% CPU
Optimizing NNI: done in 4.56219 secs using 994.7% CPU
Optimizing NNI: done in 4.54043 secs using 995.8% CPU
Optimizing NNI: done in 3.93375 secs using 994.3% CPU
Optimizing NNI: done in 3.79638 secs using 995.4% CPU
Optimizing NNI: done in 5.38179 secs using 995.1% CPU
Optimizing NNI: done in 6.7588 secs using 993.5% CPU
Iteration 250 / LogL: -7740.885 / Time: 0h:25m:39s (0h:5m:9s left)
Log-likelihood cutoff on original alignment: -7781.529
UFBoot trees printed to iqtree_gene_trees/COG1513.ufboot
Optimizing NNI: done in 6.92523 secs using 992.6% CPU
Optimizing NNI: done in 4.78765 secs using 994.5% CPU
Optimizing NNI: done in 8.13952 secs using 993.7% CPU
Optimizing NNI: done in 4.21238 secs using 995.2% CPU
Optimizing NNI: done in 4.57184 secs using 995.2% CPU
Optimizing NNI: done in 3.75553 secs using 993.6% CPU
Optimizing NNI: done in 4.13773 secs using 994.4% CPU
Optimizing NNI: done in 5.20619 secs using 995.5% CPU
Optimizing NNI: done in 4.70445 secs using 995.3% CPU
Optimizing NNI: done in 5.95078 secs using 995.7% CPU
Iteration 260 / LogL: -7740.772 / Time: 0h:26m:32s (0h:4m:5s left)
Optimizing NNI: done in 4.71177 secs using 995.1% CPU
Optimizing NNI: done in 6.30305 secs using 994.3% CPU
Optimizing NNI: done in 5.25658 secs using 993.7% CPU
Optimizing NNI: done in 4.82098 secs using 995.4% CPU
Optimizing NNI: done in 3.10329 secs using 994.8% CPU
Optimizing NNI: done in 4.38433 secs using 995.5% CPU
Optimizing NNI: done in 5.57566 secs using 995.4% CPU
Optimizing NNI: done in 7.74816 secs using 995.7% CPU
Optimizing NNI: done in 5.96841 secs using 996.3% CPU
Optimizing NNI: done in 6.41563 secs using 988.1% CPU
Iteration 270 / LogL: -7741.241 / Time: 0h:27m:27s (0h:3m:3s left)
Optimizing NNI: done in 7.03767 secs using 988.9% CPU
Optimizing NNI: done in 4.89755 secs using 994.6% CPU
Optimizing NNI: done in 8.28877 secs using 987.7% CPU
Optimizing NNI: done in 3.78103 secs using 994.3% CPU
Optimizing NNI: done in 7.14509 secs using 993% CPU
Optimizing NNI: done in 4.9994 secs using 994.4% CPU
Optimizing NNI: done in 4.80654 secs using 992.8% CPU
Optimizing NNI: done in 6.15854 secs using 994.1% CPU
Optimizing NNI: done in 6.92303 secs using 990.5% CPU
Optimizing NNI: done in 6.85568 secs using 990% CPU
Iteration 280 / LogL: -7749.521 / Time: 0h:28m:29s (0h:2m:2s left)
Optimizing NNI: done in 5.94 secs using 990.5% CPU
Optimizing NNI: done in 2.95343 secs using 994% CPU
Optimizing NNI: done in 5.41591 secs using 986.8% CPU
Optimizing NNI: done in 10.5286 secs using 986.7% CPU
Optimizing NNI: done in 8.81249 secs using 990.1% CPU
Optimizing NNI: done in 4.95651 secs using 996.3% CPU
Optimizing NNI: done in 9.84914 secs using 995.4% CPU
Optimizing NNI: done in 5.1184 secs using 996.2% CPU
Optimizing NNI: done in 4.24075 secs using 994.1% CPU
Optimizing NNI: done in 6.08316 secs using 992.6% CPU
Iteration 290 / LogL: -7741.243 / Time: 0h:29m:34s (0h:1m:1s left)
Optimizing NNI: done in 4.08537 secs using 996.7% CPU
Optimizing NNI: done in 4.91991 secs using 995.5% CPU
Optimizing NNI: done in 7.7116 secs using 991.7% CPU
Optimizing NNI: done in 7.50142 secs using 985.7% CPU
Optimizing NNI: done in 8.38112 secs using 989.8% CPU
Optimizing NNI: done in 8.84971 secs using 991.8% CPU
Optimizing NNI: done in 6.38659 secs using 989% CPU
Optimizing NNI: done in 5.44445 secs using 986.3% CPU
Optimizing NNI: done in 3.74599 secs using 987.4% CPU
Optimizing NNI: done in 7.02222 secs using 992.4% CPU
Iteration 300 / LogL: -7740.931 / Time: 0h:30m:39s (0h:0m:0s left)
Log-likelihood cutoff on original alignment: -7781.529
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.995
UFBoot trees printed to iqtree_gene_trees/COG1513.ufboot
TREE SEARCH COMPLETED AFTER 300 ITERATIONS / Time: 0h:30m:39s

--------------------------------------------------------------------
|                    FINALIZING TREE SEARCH                        |
--------------------------------------------------------------------
Performs final model parameters optimization
Estimate model parameters (epsilon = 0.010)
1. Initial log-likelihood: -7740.686
Optimal log-likelihood: -7740.686
Mixture weights: 0.016 0.027 0.046 0.008 0.013 0.034 0.013 0.009 0.019 0.015 0.032 0.021 0.024 0.024 0.021 0.021 0.005 0.017 0.014 0.010 0.011 0.015 0.032 0.015 0.033 0.014 0.023 0.018 0.040 0.014 0.009 0.016 0.012 0.035 0.040 0.010 0.015 0.009 0.015 0.020 0.026 0.004 0.039 0.006 0.038 0.004 0.014 0.048 0.020 0.012
Gamma shape alpha: 1.008
Parameters optimization took 1 rounds (0.792 sec)
BEST SCORE FOUND : -7740.686
Creating bootstrap support values...
Split supports printed to NEXUS file iqtree_gene_trees/COG1513.splits.nex
Total tree length: 18.443

Total number of iterations: 300
CPU time used for tree search: 18147.509 sec (5h:2m:27s)
Wall-clock time used for tree search: 1835.860 sec (0h:30m:35s)
Total CPU time used: 18191.447 sec (5h:3m:11s)
Total wall-clock time used: 1840.641 sec (0h:30m:40s)
UFBoot trees printed to iqtree_gene_trees/COG1513.ufboot

Computing bootstrap consensus tree...
Reading input file iqtree_gene_trees/COG1513.splits.nex...
41 taxa and 488 splits.
Consensus tree written to iqtree_gene_trees/COG1513.contree
Reading input trees file iqtree_gene_trees/COG1513.contree
Log-likelihood of consensus tree: -7743.092

Analysis results written to: 
  IQ-TREE report:                iqtree_gene_trees/COG1513.iqtree
  Maximum-likelihood tree:       iqtree_gene_trees/COG1513.treefile
  Likelihood distances:          iqtree_gene_trees/COG1513.mldist

Ultrafast bootstrap approximation results written to:
  Split support values:          iqtree_gene_trees/COG1513.splits.nex
  Consensus tree:                iqtree_gene_trees/COG1513.contree
  UFBoot trees:                  iqtree_gene_trees/COG1513.ufboot
  Screen log file:               iqtree_gene_trees/COG1513.log

ALISIM COMMAND
--------------
Currently, we only support exporting AliSim commands from common models of DNA, Protein, Binary, and Morphological data. To simulate data from other models (mixture, lie-markov, etc), please refer to the User Manual of AliSim. Thanks!

Date and Time: Sun Apr  9 02:32:44 2023
