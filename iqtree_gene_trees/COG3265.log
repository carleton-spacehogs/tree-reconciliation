IQ-TREE multicore version 2.2.0.3 COVID-edition for Linux 64-bit built Aug  2 2022
Developed by Bui Quang Minh, James Barbetti, Nguyen Lam Tung,
Olga Chernomor, Heiko Schmidt, Dominik Schrempf, Michael Woodhams, Ly Trong Nhan.

Host:    baross.its.carleton.edu (AVX2, FMA3, 755 GB RAM)
Command: iqtree -s gene_alignments/trimv2_COG3265.afa -m MFP -bb 1000 -wbtl -ntmax 10 -nt AUTO -T 10 --prefix iqtree_gene_trees/COG3265 -madd C10,C20,C30,C40,C50,C60,EX2,EX3,EHO,UL2,UL3,EX_EHO,LG4M,LG4X,CF4,LG+C10,LG+C20,LG+C30,LG+C40,LG+C50,LG+C60 -mrate E,I,G,I+G,R
Seed:    601372 (Using SPRNG - Scalable Parallel Random Number Generator)
Time:    Thu Apr  6 23:41:45 2023
Kernel:  AVX+FMA - 10 threads (96 CPU cores detected)

Reading alignment file gene_alignments/trimv2_COG3265.afa ... Fasta format detected
Reading fasta file: done in 0.000711218 secs
Alignment most likely contains protein sequences
Constructing alignment: done in 0.00130914 secs using 721.1% CPU
Alignment has 52 sequences with 190 columns, 189 distinct patterns
172 parsimony-informative, 12 singleton sites, 6 constant sites
                                                                 Gap/Ambiguity  Composition  p-value
Analyzing sequences: done in 5.3148e-05 secs using 818.5% CPU
   1  GCF.000300295.4.Bacteria.Proteobacteria_WP_230389142.1            15.26%    failed      0.00%
   2  GCA.003167475.1.Bacteria.Goldbacteria_PMTB01000075.1_2            13.68%    failed      0.04%
   3  GCF.002940605.1.Bacteria.Proteobacteria_WP_185817238.1             1.58%    failed      0.01%
   4  GCF.000239355.1.Bacteria.Proteobacteria_WP_006985275.1            10.53%    passed     22.82%
   5  GCA.000188695.1.Eukaryota.Choanoflagellata_EGD73397.1              7.37%    passed      7.66%
   6  GCF.900066015.1.Bacteria.Chloroflexota_NZ_LN890655.1_876           8.95%    passed     51.45%
   7  GCF.001613805.1.Bacteria.Proteobacteria_NZ_LPVY01000021.1_509      3.16%    passed     99.85%
   8  GCF.001942305.1.Bacteria.Actinobacteriota_NZ_MKKE01000033.1_63     2.63%    passed     26.97%
   9  GCA.001775255.1.Bacteria.Desulfobacterota.D_MFCJ01000033.1_2      14.21%    passed      8.67%
  10  GCF.000316115.1.Bacteria.Cyanobacteria_NZ_JH993797.1_7112          5.79%    passed     89.98%
  11  GCA.003137095.1.Bacteria.Proteobacteria_PLET01000113.1_100        11.05%    passed     51.77%
  12  GCA.002746645.1.Bacteria.Proteobacteria_PDPU01000036.1_35          0.53%    passed     62.18%
  13  GCA.003152075.1.Bacteria.FCPU426_PLZG01000038.1_26                15.26%    passed     38.62%
  14  GCA.000002865.1.Eukaryota.Choanoflagellata_EDQ89941.1              4.74%    passed     31.27%
  15  GCA.002747435.1.Bacteria.Proteobacteria_PDPH01000024.1_19         17.37%    failed      4.92%
  16  GCA.003162395.1.Bacteria.Actinobacteriota_PMON01000058.1_38        8.95%    passed     23.78%
  17  GCF.000017845.1.Bacteria.Cyanobacteria_NC_010546.1_1903            9.47%    failed      0.04%
  18  GCA.003151665.1.Bacteria.Dormibacterota_PLYD01000285.1_8           5.26%    passed     98.38%
  19  GCF.900167455.1.Bacteria.Proteobacteria_NZ_FUWJ01000006.1_44      10.53%    passed     94.06%
  20  GCF.003612015.1.Bacteria.Proteobacteria_NZ_RARB01000007.1_128      6.84%    passed     35.01%
  21  GCA.002693325.1.Bacteria.Latescibacterota_NZPK01000128.1_17        8.42%    failed      2.41%
  22  GCF.003838225.1.Bacteria.Cyanobacteria_WP_124143786.1             16.32%    failed      0.00%
  23  GCF.001591405.1.Bacteria.Actinobacteria_NZ_BCUV01000007.1_676     13.16%    passed     44.64%
  24  GCA.002343185.1.Bacteria.Bdellovibrionota.C_DDRT01000005.1_62     15.26%    failed      0.67%
  25  GCA.003161515.1.Bacteria.Desulfobacterota.B_PMOH01000462.1_2      15.26%    passed     81.39%
  26  GCA.015473125.1.Eukaryota.Viridiplantae_GHP08379.1                 1.58%    passed     55.73%
  27  GCA.000209225.1.Eukaryota.Cnidaria_EDO34410.1                      6.84%    passed     14.77%
  28  GCA.000739515.1.Bacteria.Moduliflexota_DF820458.1_261             14.74%    passed     35.28%
  29  GCA.002323895.1.Bacteria.Verrucomicrobiota_DCQM01000074.1_3       18.95%    passed     76.72%
  30  GCF.900106035.1.Bacteria.Actinobacteriota_NZ_FNUC01000004.1_651    7.89%    passed      6.82%
  31  GCF.900102465.1.Bacteria.Proteobacteria_NZ_FNBW01000001.1_532      6.32%    passed     55.22%
  32  GCF.003047285.1.Bacteria.Actinobacteriota_NZ_PZYX01000018.1_16    16.84%    passed     47.91%
  33  GCF.000018105.1.Bacteria.Cyanobacteria_NC_009925.1_3803            7.37%    passed     22.12%
  34  GCF.003052605.1.Bacteria.Proteobacteria_NZ_QASO01000030.1_62       2.11%    passed     16.96%
  35  GCF.000374645.1.Bacteria.Proteobacteria_NZ_KB894805.1_23          15.26%    passed     86.69%
  36  GCA.002382525.1.Bacteria.Verrucomicrobiota_DFYA01000070.1_3        7.89%    passed     22.94%
  37  GCA.000004985.1.Eukaryota.Heterolobosea_EFC39279.1                 6.32%    failed      0.00%
  38  GCA.002405475.1.Bacteria.Proteobacteria_DHLX01000018.1_136         9.47%    passed     99.03%
  39  Fischerella.muscicola.CCMEE5323_WP_016866276.1                    15.26%    passed      9.72%
  40  GCA.003155415.1.Bacteria.Proteobacteria_PMCP01000056.1_1           5.26%    passed     22.50%
  41  GCF.000020025.1.Bacteria.Cyanobacteria_NC_010628.1_5597           15.26%    passed     28.52%
  42  GCF.003443735.1.Bacteria.Actinobacteriota_NZ_CP031969.1_6408      11.58%    passed     73.62%
  43  GCA.003280605.1.Bacteria.Proteobacteria_QCEM01000015.1_29          8.42%    passed     26.75%
  44  GCF.003258945.1.Bacteria.Proteobacteria_NZ_QLIX01000001.1_223     11.58%    passed     19.07%
  45  GCA.003221825.1.Bacteria.Gemmatimonadota_QHUE01000096.1_7         11.05%    passed     36.86%
  46  GCA.002699025.1.Bacteria.Myxococcota_PABA01000098.1_27            12.11%    failed      0.01%
  47  GCF.004348535.1.Bacteria.Actinobacteriota_NZ_SMJX01000138.1_1      4.21%    passed     20.88%
  48  GCF.003443735.1.Bacteria.Actinobacteriota_NZ_CP031969.1_4594      10.00%    passed     50.21%
  49  GCA.002704825.1.Bacteria.Planctomycetota_PAIY01000001.1_13        16.32%    passed     85.84%
  50  Nostoc.sp.PCC7120_WP_010997237.1                                  15.79%    failed      4.45%
  51  GCF.900066015.1.Bacteria.Chloroflexota_NZ_LN890655.1_1123         14.21%    failed      0.46%
  52  GCA.002710215.1.Bacteria.Chloroflexota_PAJQ01000016.1_6           18.95%    passed     93.83%
****  TOTAL                                                             10.25%  12 sequences failed composition chi2 test (p-value<5%; df=19)
Checking for duplicate sequences: done in 0.000605065 secs using 984.5% CPU


Create initial parsimony tree by phylogenetic likelihood library (PLL)... 0.022 seconds
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
Perform fast likelihood tree search using LG+I+G model...
Estimate model parameters (epsilon = 5.000)
Perform nearest neighbor interchange...
Optimizing NNI: done in 0.960097 secs using 992% CPU
Estimate model parameters (epsilon = 1.000)
1. Initial log-likelihood: -15658.576
Optimal log-likelihood: -15658.557
Proportion of invariable sites: 0.023
Gamma shape alpha: 0.837
Parameters optimization took 1 rounds (0.042 sec)
Time for fast ML tree search: 1.200 seconds

NOTE: ModelFinder requires 17 MB RAM!
ModelFinder will test up to 749 protein models (sample size: 190) ...
 No. Model         -LnL         df  AIC          AICc         BIC
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  1  LG            16693.673    101 33589.345    33823.482    33917.295
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  2  LG+I          16574.712    102 33353.424    33594.942    33684.621
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  3  LG+G4         15661.964    102 31527.928    31769.445    31859.124
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  4  LG+I+G4       15658.558    103 31523.116    31772.232    31857.560
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  5  LG+R2         15858.306    103 31922.612    32171.728    32257.055
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  6  LG+R3         15695.494    105 31600.988    31865.988    31941.926
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  7  LG+R4         15656.283    107 31526.566    31808.419    31873.997
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  8  LG+R5         15646.501    109 31511.003    31810.753    31864.928
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  9  LG+R6         15644.991    111 31511.982    31830.752    31872.402
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 14  LG+F          16561.890    120 33363.781    33784.650    33753.424
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 15  LG+F+I        16449.089    121 33140.177    33574.354    33533.067
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 16  LG+F+G4       15525.309    121 31292.617    31726.794    31685.507
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 17  LG+F+I+G4     15522.482    122 31288.964    31736.904    31685.101
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 18  LG+F+R2       15731.032    122 31706.063    32154.004    32102.200
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 19  LG+F+R3       15566.761    124 31381.522    31858.445    31784.153
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 20  LG+F+R4       15521.363    126 31294.726    31802.726    31703.851
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 21  LG+F+R5       15508.933    128 31273.865    31815.242    31689.484
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 22  LG+F+R6       15507.542    130 31275.083    31852.371    31697.196
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 27  WAG           16557.388    101 33316.775    33550.912    33644.725
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 28  WAG+I         16434.485    102 33072.970    33314.487    33404.166
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 29  WAG+G4        15699.998    102 31603.997    31845.514    31935.193
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 30  WAG+I+G4      15693.467    103 31592.934    31842.050    31927.377
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 31  WAG+R2        15848.954    103 31903.907    32153.024    32238.351
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 32  WAG+R3        15709.544    105 31629.089    31894.089    31970.026
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 33  WAG+R4        15681.054    107 31576.108    31857.962    31923.540
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 34  WAG+R5        15674.784    109 31567.568    31867.318    31921.494
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 35  WAG+R6        15673.312    111 31568.624    31887.393    31929.044
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 40  WAG+F         16440.842    120 33121.683    33542.553    33511.326
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 41  WAG+F+I       16321.763    121 32885.527    33319.703    33278.417
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 42  WAG+F+G4      15557.102    121 31356.205    31790.381    31749.095
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 43  WAG+F+I+G4    15552.290    122 31348.580    31796.521    31744.717
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 44  WAG+F+R2      15712.099    122 31668.199    32116.139    32064.336
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 45  WAG+F+R3      15569.555    124 31387.111    31864.034    31789.742
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 46  WAG+F+R4      15540.223    126 31332.446    31840.446    31741.571
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 47  WAG+F+R5      15528.648    128 31313.295    31854.672    31728.914
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 48  WAG+F+R6      15529.014    130 31318.028    31895.316    31740.141
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 53  JTT           16779.785    101 33761.569    33995.705    34089.518
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 54  JTT+I         16646.198    102 33496.396    33737.913    33827.593
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 55  JTT+G4        15833.226    102 31870.452    32111.970    32201.649
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 56  JTT+I+G4      15826.089    103 31858.179    32107.295    32192.622
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 57  JTT+R2        16032.113    103 32270.226    32519.342    32604.669
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 58  JTT+R3        15864.719    105 31939.437    32204.437    32280.375
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 59  JTT+R4        15821.521    107 31857.043    32138.896    32204.474
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 60  JTT+R5        15805.669    109 31829.338    32129.088    32183.263
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 61  JTT+R6        15804.240    111 31830.480    32149.249    32190.900
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 66  JTT+F         16672.586    120 33585.172    34006.042    33974.815
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 67  JTT+F+I       16542.312    121 33326.624    33760.801    33719.514
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 68  JTT+F+G4      15686.833    121 31615.666    32049.843    32008.556
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 69  JTT+F+I+G4    15679.622    122 31603.245    32051.185    31999.382
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 70  JTT+F+R2      15899.340    122 32042.680    32490.620    32438.817
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 71  JTT+F+R3      15728.385    124 31704.770    32181.693    32107.401
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 72  JTT+F+R4      15677.728    126 31607.455    32115.455    32016.580
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 73  JTT+F+R5      15665.079    128 31586.157    32127.534    32001.776
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 74  JTT+F+R6      15663.291    130 31586.582    32163.870    32008.695
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 79  Q.pfam        16622.562    101 33447.124    33681.261    33775.074
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 80  Q.pfam+I      16512.874    102 33229.748    33471.265    33560.944
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 81  Q.pfam+G4     15617.312    102 31438.624    31680.141    31769.820
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 82  Q.pfam+I+G4   15614.933    103 31435.867    31684.983    31770.310
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 83  Q.pfam+R2     15807.128    103 31820.257    32069.373    32154.700
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 84  Q.pfam+R3     15641.319    105 31492.639    31757.639    31833.576
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 85  Q.pfam+R4     15604.667    107 31423.334    31705.188    31770.766
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 86  Q.pfam+R5     15594.657    109 31407.315    31707.065    31761.240
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 87  Q.pfam+R6     15593.211    111 31408.422    31727.191    31768.841
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 92  Q.pfam+F      16548.579    120 33337.159    33758.028    33726.801
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 93  Q.pfam+F+I    16443.734    121 33129.468    33563.644    33522.358
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 94  Q.pfam+F+G4   15528.335    121 31298.671    31732.847    31691.561
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 95  Q.pfam+F+I+G4 15525.424    122 31294.848    31742.788    31690.985
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 96  Q.pfam+F+R2   15723.896    122 31691.791    32139.732    32087.928
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 97  Q.pfam+F+R3   15552.628    124 31353.255    31830.178    31755.886
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 98  Q.pfam+F+R4   15517.034    126 31286.068    31794.068    31695.193
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 99  Q.pfam+F+R5   15504.182    128 31264.364    31805.741    31679.983
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
100  Q.pfam+F+R6   15503.472    130 31266.943    31844.231    31689.056
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
105  Q.bird        17363.078    101 34928.156    35162.292    35256.105
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
106  Q.bird+I      17208.428    102 34620.856    34862.373    34952.052
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
107  Q.bird+G4     16132.015    102 32468.029    32709.546    32799.226
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
108  Q.bird+I+G4   16123.389    103 32452.779    32701.895    32787.222
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
109  Q.bird+R2     16401.116    103 33008.232    33257.349    33342.676
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
110  Q.bird+R3     16202.874    105 32615.748    32880.748    32956.685
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
111  Q.bird+R4     16130.629    107 32475.258    32757.112    32822.690
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
112  Q.bird+R5     16104.925    109 32427.850    32727.600    32781.775
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
113  Q.bird+R6     16102.847    111 32427.693    32746.463    32788.113
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
118  Q.bird+F      17291.935    120 34823.871    35244.740    35213.514
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
119  Q.bird+F+I    17143.891    121 34529.782    34963.958    34922.672
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
120  Q.bird+F+G4   15967.769    121 32177.537    32611.714    32570.427
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
121  Q.bird+F+I+G4 15960.494    122 32164.987    32612.928    32561.124
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
122  Q.bird+F+R2   16215.732    122 32675.464    33123.405    33071.601
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
123  Q.bird+F+R3   16043.969    124 32335.937    32812.861    32738.568
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
124  Q.bird+F+R4   15958.633    126 32169.267    32677.267    32578.392
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
125  Q.bird+F+R5   15938.841    128 32133.682    32675.060    32549.302
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
126  Q.bird+F+R6   15938.036    130 32136.072    32713.360    32558.185
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
131  Q.mammal      17188.744    101 34579.488    34813.624    34907.437
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
132  Q.mammal+I    17043.759    102 34291.518    34533.035    34622.715
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
133  Q.mammal+G4   16035.990    102 32275.980    32517.498    32607.177
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
134  Q.mammal+I+G4 16027.707    103 32261.414    32510.531    32595.858
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
135  Q.mammal+R2   16291.403    103 32788.807    33037.923    33123.250
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
136  Q.mammal+R3   16090.414    105 32390.828    32655.828    32731.766
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
137  Q.mammal+R4   16031.265    107 32276.530    32558.384    32623.961
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
138  Q.mammal+R5   16013.612    109 32245.224    32544.974    32599.150
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
139  Q.mammal+R6   16013.393    111 32248.786    32567.556    32609.206
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
144  Q.mammal+F    17112.911    120 34465.822    34886.692    34855.465
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
145  Q.mammal+F+I  16974.678    121 34191.355    34625.532    34584.245
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
146  Q.mammal+F+G4 15874.611    121 31991.222    32425.399    32384.112
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
147  Q.mammal+F+I+G4 15868.167    122 31980.334    32428.275    32376.471
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
148  Q.mammal+F+R2 16108.621    122 32461.241    32909.181    32857.378
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
149  Q.mammal+F+R3 15947.039    124 32142.078    32619.001    32544.709
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
150  Q.mammal+F+R4 15865.243    126 31982.487    32490.487    32391.612
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
151  Q.mammal+F+R5 15851.018    128 31958.035    32499.412    32373.654
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
152  Q.mammal+F+R6 15850.035    130 31960.070    32537.359    32382.184
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
157  Q.insect      16923.679    101 34049.358    34283.494    34377.308
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
158  Q.insect+I    16795.053    102 33794.107    34035.624    34125.303
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
159  Q.insect+G4   15865.610    102 31935.220    32176.737    32266.417
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
160  Q.insect+I+G4 15859.665    103 31925.330    32174.446    32259.773
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
161  Q.insect+R2   16082.110    103 32370.220    32619.336    32704.663
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
162  Q.insect+R3   15907.568    105 32025.136    32290.136    32366.074
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
163  Q.insect+R4   15856.906    107 31927.813    32209.666    32275.244
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
164  Q.insect+R5   15839.023    109 31896.046    32195.796    32249.971
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
165  Q.insect+R6   15838.100    111 31898.199    32216.969    32258.619
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
170  Q.insect+F    16707.048    120 33654.097    34074.967    34043.740
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
171  Q.insect+F+I  16587.594    121 33417.188    33851.364    33810.078
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
172  Q.insect+F+G4 15617.493    121 31476.986    31911.163    31869.876
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
173  Q.insect+F+I+G4 15614.041    122 31472.082    31920.022    31868.219
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
174  Q.insect+F+R2 15850.226    122 31944.451    32392.392    32340.588
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
175  Q.insect+F+R3 15670.766    124 31589.533    32066.456    31992.163
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
176  Q.insect+F+R4 15611.921    126 31475.842    31983.842    31884.967
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
177  Q.insect+F+R5 15599.624    128 31455.249    31996.626    31870.868
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
178  Q.insect+F+R6 15596.840    130 31453.679    32030.967    31875.792
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
183  Q.plant       17146.938    101 34495.876    34730.012    34823.825
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
184  Q.plant+I     17011.599    102 34227.198    34468.716    34558.395
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
185  Q.plant+G4    15903.485    102 32010.970    32252.487    32342.166
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
186  Q.plant+I+G4  15899.347    103 32004.694    32253.810    32339.137
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
187  Q.plant+R2    16161.092    103 32528.183    32777.299    32862.627
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
188  Q.plant+R3    15976.885    105 32163.770    32428.770    32504.707
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
189  Q.plant+R4    15896.064    107 32006.127    32287.981    32353.559
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
190  Q.plant+R5    15878.428    109 31974.855    32274.605    32328.781
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
191  Q.plant+R6    15874.106    111 31970.213    32288.982    32330.632
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
196  Q.plant+F     16984.161    120 34208.322    34629.192    34597.965
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
197  Q.plant+F+I   16854.220    121 33950.440    34384.617    34343.330
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
198  Q.plant+F+G4  15721.782    121 31685.565    32119.741    32078.455
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
199  Q.plant+F+I+G4 15717.217    122 31678.434    32126.374    32074.571
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
200  Q.plant+F+R2  15981.518    122 32207.036    32654.976    32603.173
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
201  Q.plant+F+R3  15794.672    124 31837.345    32314.268    32239.976
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
202  Q.plant+F+R4  15715.609    126 31683.218    32191.218    32092.343
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
203  Q.plant+F+R5  15697.588    128 31651.177    32192.554    32066.796
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
204  Q.plant+F+R6  15694.217    130 31648.433    32225.722    32070.547
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
209  Q.yeast       16951.971    101 34105.942    34340.079    34433.892
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
210  Q.yeast+I     16826.864    102 33857.727    34099.244    34188.924
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
211  Q.yeast+G4    15911.687    102 32027.373    32268.890    32358.570
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
212  Q.yeast+I+G4  15910.184    103 32026.368    32275.484    32360.811
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
213  Q.yeast+R2    16126.438    103 32458.876    32707.993    32793.320
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
214  Q.yeast+R3    15944.813    105 32099.625    32364.625    32440.563
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
215  Q.yeast+R4    15910.035    107 32034.070    32315.924    32381.502
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
216  Q.yeast+R5    15882.312    109 31982.624    32282.374    32336.549
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
217  Q.yeast+R6    15880.578    111 31983.156    32301.925    32343.575
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
222  Q.yeast+F     16657.252    120 33554.504    33975.373    33944.147
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
223  Q.yeast+F+I   16540.854    121 33323.708    33757.885    33716.598
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
224  Q.yeast+F+G4  15587.072    121 31416.145    31850.321    31809.035
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
225  Q.yeast+F+I+G4 15583.755    122 31411.509    31859.450    31807.646
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
226  Q.yeast+F+R2  15814.566    122 31873.133    32321.073    32269.270
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
227  Q.yeast+F+R3  15624.932    124 31497.863    31974.786    31900.494
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
228  Q.yeast+F+R4  15580.021    126 31412.042    31920.042    31821.167
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
229  Q.yeast+F+R5  15561.368    128 31378.736    31920.113    31794.355
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
230  Q.yeast+F+R6  15558.168    130 31376.336    31953.624    31798.449
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
235  JTTDCMut      16779.103    101 33760.206    33994.342    34088.155
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
236  JTTDCMut+I    16646.002    102 33496.005    33737.522    33827.201
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
237  JTTDCMut+G4   15834.215    102 31872.431    32113.948    32203.627
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
238  JTTDCMut+I+G4 15826.937    103 31859.873    32108.989    32194.317
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
239  JTTDCMut+R2   16033.796    103 32273.592    32522.708    32608.035
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
240  JTTDCMut+R3   15864.762    105 31939.524    32204.524    32280.461
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
241  JTTDCMut+R4   15822.467    107 31858.935    32140.788    32206.366
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
242  JTTDCMut+R5   15806.068    109 31830.137    32129.887    32184.062
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
243  JTTDCMut+R6   15804.583    111 31831.166    32149.935    32191.585
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
248  JTTDCMut+F    16669.016    120 33578.033    33998.902    33967.676
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
249  JTTDCMut+F+I  16539.760    121 33321.519    33755.695    33714.409
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
250  JTTDCMut+F+G4 15684.284    121 31610.567    32044.744    32003.457
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
251  JTTDCMut+F+I+G4 15677.173    122 31598.347    32046.287    31994.484
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
252  JTTDCMut+F+R2 15896.796    122 32037.592    32485.533    32433.729
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
253  JTTDCMut+F+R3 15725.658    124 31699.315    32176.238    32101.946
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
254  JTTDCMut+F+R4 15675.257    126 31602.515    32110.515    32011.640
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
255  JTTDCMut+F+R5 15662.731    128 31581.463    32122.840    31997.082
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
256  JTTDCMut+F+R6 15660.934    130 31581.867    32159.155    32003.980
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
261  DCMut         16829.113    101 33860.226    34094.362    34188.175
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
262  DCMut+I       16699.898    102 33603.797    33845.314    33934.993
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
263  DCMut+G4      15897.186    102 31998.371    32239.888    32329.568
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
264  DCMut+I+G4    15889.298    103 31984.596    32233.712    32319.039
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
265  DCMut+R2      16114.146    103 32434.292    32683.408    32768.735
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
266  DCMut+R3      15936.999    105 32083.999    32348.999    32424.937
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
267  DCMut+R4      15886.095    107 31986.191    32268.044    32333.622
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
268  DCMut+R5      15859.399    109 31936.799    32236.549    32290.724
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
269  DCMut+R6      15851.970    111 31925.941    32244.710    32286.361
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
270  DCMut+R7      15851.584    113 31929.169    32268.169    32296.083
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
274  DCMut+F       16682.519    120 33605.038    34025.907    33994.681
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
275  DCMut+F+I     16562.545    121 33367.089    33801.266    33759.979
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
276  DCMut+F+G4    15699.108    121 31640.216    32074.392    32033.106
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
277  DCMut+F+I+G4  15693.505    122 31631.009    32078.949    32027.146
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
278  DCMut+F+R2    15929.094    122 32102.189    32550.129    32498.326
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
279  DCMut+F+R3    15755.847    124 31759.693    32236.616    32162.324
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
280  DCMut+F+R4    15692.340    126 31636.679    32144.679    32045.805
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
281  DCMut+F+R5    15671.842    128 31599.684    32141.062    32015.304
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
282  DCMut+F+R6    15671.242    130 31602.483    32179.772    32024.597
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
287  VT            16582.364    101 33366.728    33600.864    33694.677
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
288  VT+I          16462.483    102 33128.966    33370.484    33460.163
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
289  VT+G4         15750.030    102 31704.060    31945.578    32035.257
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
290  VT+I+G4       15743.323    103 31692.646    31941.763    32027.090
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
291  VT+R2         15894.699    103 31995.398    32244.514    32329.841
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
292  VT+R3         15757.293    105 31724.587    31989.587    32065.524
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
293  VT+R4         15731.757    107 31677.514    31959.367    32024.945
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
294  VT+R5         15724.633    109 31667.266    31967.016    32021.191
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
295  VT+R6         15724.409    111 31670.817    31989.587    32031.237
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
300  VT+F          16450.087    120 33140.174    33561.043    33529.816
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
301  VT+F+I        16333.159    121 32908.317    33342.494    33301.207
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
302  VT+F+G4       15602.272    121 31446.545    31880.721    31839.435
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
303  VT+F+I+G4     15595.111    122 31434.222    31882.162    31830.359
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
304  VT+F+R2       15756.224    122 31756.447    32204.387    32152.584
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
305  VT+F+R3       15611.150    124 31470.300    31947.223    31872.931
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
306  VT+F+R4       15585.353    126 31422.707    31930.707    31831.832
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
307  VT+F+R5       15575.073    128 31406.147    31947.524    31821.766
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
308  VT+F+R6       15575.089    130 31410.178    31987.466    31832.291
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
313  PMB           16674.447    101 33550.894    33785.030    33878.843
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
314  PMB+I         16562.845    102 33329.690    33571.207    33660.886
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
315  PMB+G4        15841.735    102 31887.470    32128.988    32218.667
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
316  PMB+I+G4      15835.687    103 31877.373    32126.490    32211.817
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
317  PMB+R2        15975.997    103 32157.993    32407.109    32492.437
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
318  PMB+R3        15847.326    105 31904.652    32169.652    32245.590
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
319  PMB+R4        15822.503    107 31859.006    32140.860    32206.438
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
320  PMB+R5        15817.664    109 31853.328    32153.078    32207.254
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
326  PMB+F         16530.145    120 33300.290    33721.160    33689.933
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
327  PMB+F+I       16416.639    121 33075.278    33509.454    33468.167
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
328  PMB+F+G4      15677.137    121 31596.273    32030.450    31989.163
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
329  PMB+F+I+G4    15673.380    122 31590.760    32038.700    31986.897
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
330  PMB+F+R2      15822.892    122 31889.785    32337.725    32285.922
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
331  PMB+F+R3      15684.729    124 31617.458    32094.381    32020.089
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
332  PMB+F+R4      15661.413    126 31574.825    32082.825    31983.950
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
333  PMB+F+R5      15650.866    128 31557.732    32099.109    31973.351
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
334  PMB+F+R6      15650.862    130 31561.724    32139.012    31983.837
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
339  Blosum62      16672.496    101 33546.991    33781.128    33874.941
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
340  Blosum62+I    16561.846    102 33327.693    33569.210    33658.889
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
341  Blosum62+G4   15827.906    102 31859.812    32101.330    32191.009
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
342  Blosum62+I+G4 15822.704    103 31851.409    32100.525    32185.852
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
343  Blosum62+R2   15968.973    103 32143.946    32393.062    32478.389
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
344  Blosum62+R3   15834.602    105 31879.204    32144.204    32220.141
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
345  Blosum62+R4   15809.458    107 31832.915    32114.769    32180.347
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
346  Blosum62+R5   15806.193    109 31830.386    32130.136    32184.311
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
352  Blosum62+F    16508.535    120 33257.069    33677.939    33646.712
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
353  Blosum62+F+I  16394.892    121 33031.784    33465.961    33424.674
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
354  Blosum62+F+G4 15647.692    121 31537.383    31971.560    31930.273
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
355  Blosum62+F+I+G4 15642.469    122 31528.939    31976.879    31925.076
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
356  Blosum62+F+R2 15800.340    122 31844.681    32292.621    32240.818
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
357  Blosum62+F+R3 15656.061    124 31560.121    32037.045    31962.752
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
358  Blosum62+F+R4 15630.876    126 31513.751    32021.751    31922.876
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
359  Blosum62+F+R5 15624.141    128 31504.282    32045.659    31919.901
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
360  Blosum62+F+R6 15624.425    130 31508.851    32086.139    31930.964
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
365  Dayhoff       16829.705    101 33861.410    34095.547    34189.360
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
366  Dayhoff+I     16700.405    102 33604.811    33846.328    33936.007
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
367  Dayhoff+G4    15896.729    102 31997.458    32238.975    32328.655
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
368  Dayhoff+I+G4  15888.858    103 31983.717    32232.833    32318.160
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
369  Dayhoff+R2    16113.865    103 32433.730    32682.846    32768.173
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
370  Dayhoff+R3    15936.462    105 32082.923    32347.923    32423.861
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
371  Dayhoff+R4    15885.627    107 31985.254    32267.107    32332.685
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
372  Dayhoff+R5    15858.802    109 31935.603    32235.353    32289.529
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
373  Dayhoff+R6    15851.464    111 31924.927    32243.696    32285.347
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
374  Dayhoff+R7    15851.086    113 31928.172    32267.172    32295.086
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
378  Dayhoff+F     16683.455    120 33606.910    34027.780    33996.553
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
379  Dayhoff+F+I   16563.419    121 33368.839    33803.015    33761.729
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
380  Dayhoff+F+G4  15698.924    121 31639.848    32074.025    32032.738
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
381  Dayhoff+F+I+G4 15693.327    122 31630.654    32078.595    32026.791
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
382  Dayhoff+F+R2  15929.122    122 32102.244    32550.185    32498.381
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
383  Dayhoff+F+R3  15756.060    124 31760.119    32237.042    32162.750
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
384  Dayhoff+F+R4  15692.144    126 31636.289    32144.289    32045.414
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
385  Dayhoff+F+R5  15671.580    128 31599.161    32140.538    32014.780
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
386  Dayhoff+F+R6  15671.042    130 31602.083    32179.371    32024.196
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
391  mtREV         18423.044    101 37048.088    37282.224    37376.037
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
392  mtREV+I       18357.079    102 36918.158    37159.675    37249.354
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
393  mtREV+G4      16907.952    102 34019.904    34261.421    34351.100
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
394  mtREV+I+G4    16907.092    103 34020.184    34269.300    34354.627
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
395  mtREV+R2      17135.179    103 34476.358    34725.475    34810.802
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
396  mtREV+R3      16977.768    105 34165.535    34430.535    34506.473
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
397  mtREV+R4      16892.993    107 33999.986    34281.840    34347.418
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
398  mtREV+R5      16863.930    109 33945.860    34245.610    34299.785
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
399  mtREV+R6      16861.331    111 33944.662    34263.432    34305.082
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
404  mtREV+F       17210.337    120 34660.673    35081.543    35050.316
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
405  mtREV+F+I     17126.089    121 34494.178    34928.354    34887.068
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
406  mtREV+F+G4    15892.322    121 32026.644    32460.820    32419.534
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
407  mtREV+F+I+G4  15891.206    122 32026.411    32474.352    32422.548
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
408  mtREV+F+R2    16138.739    122 32521.478    32969.418    32917.615
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
409  mtREV+F+R3    15981.571    124 32211.142    32688.065    32613.773
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
410  mtREV+F+R4    15885.788    126 32023.577    32531.577    32432.702
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
411  mtREV+F+R5    15865.110    128 31986.221    32527.598    32401.840
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
412  mtREV+F+R6    15862.361    130 31984.723    32562.011    32406.836
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
417  mtART         19330.908    101 38863.816    39097.952    39191.765
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
418  mtART+I       19255.072    102 38714.144    38955.661    39045.340
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
419  mtART+G4      17182.219    102 34568.439    34809.956    34899.635
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
420  mtART+I+G4    17182.269    103 34570.537    34819.654    34904.981
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
421  mtART+R2      17440.738    103 35087.476    35336.592    35421.920
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
422  mtART+R3      17254.923    105 34719.847    34984.847    35060.784
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
423  mtART+R4      17227.002    107 34668.003    34949.857    35015.435
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
424  mtART+R5      17150.297    109 34518.594    34818.344    34872.520
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
425  mtART+R6      17125.936    111 34473.872    34792.641    34834.291
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
426  mtART+R7      17122.406    113 34470.813    34809.813    34837.727
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
430  mtART+F       17871.793    120 35983.586    36404.456    36373.229
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
431  mtART+F+I     17781.760    121 35805.520    36239.697    36198.410
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
432  mtART+F+G4    16064.734    121 32371.467    32805.644    32764.357
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
433  mtART+F+I+G4  16064.734    122 32373.468    32821.408    32769.605
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
434  mtART+F+R2    16342.994    122 32929.988    33377.928    33326.125
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
435  mtART+F+R3    16146.140    124 32540.280    33017.203    32942.910
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
436  mtART+F+R4    16121.602    126 32495.204    33003.204    32904.329
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
437  mtART+F+R5    16037.696    128 32331.393    32872.770    32747.012
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
438  mtART+F+R6    16010.794    130 32281.587    32858.875    32703.700
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
439  mtART+F+R7    16005.394    132 32274.788    32890.788    32703.395
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
WARNING: Log-likelihood -16020.9 of mtART+F+R8 worse than mtART+F+R7 -16005.4
440  mtART+F+R8    16020.909    134 32309.818    32967.636    32744.919
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
443  mtZOA         18465.396    101 37132.792    37366.928    37460.741
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
444  mtZOA+I       18389.731    102 36983.462    37224.979    37314.658
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
445  mtZOA+G4      16660.522    102 33525.045    33766.562    33856.241
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
446  mtZOA+I+G4    16660.563    103 33527.126    33776.242    33861.570
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
447  mtZOA+R2      16871.123    103 33948.246    34197.362    34282.689
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
448  mtZOA+R3      16711.635    105 33633.269    33898.269    33974.207
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
449  mtZOA+R4      16680.645    107 33575.289    33857.143    33922.721
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
450  mtZOA+R5      16625.910    109 33469.819    33769.569    33823.745
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
451  mtZOA+R6      16623.975    111 33469.949    33788.718    33830.369
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
456  mtZOA+F       17430.704    120 35101.408    35522.277    35491.050
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
457  mtZOA+F+I     17329.111    121 34900.221    35334.398    35293.111
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
458  mtZOA+F+G4    15902.796    121 32047.591    32481.768    32440.481
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
459  mtZOA+F+I+G4  15902.916    122 32049.832    32497.772    32445.969
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
460  mtZOA+F+R2    16171.577    122 32587.153    33035.094    32983.290
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
461  mtZOA+F+R3    16002.081    124 32252.162    32729.085    32654.793
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
462  mtZOA+F+R4    15932.959    126 32117.918    32625.918    32527.043
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
463  mtZOA+F+R5    15877.650    128 32011.300    32552.677    32426.919
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
464  mtZOA+F+R6    15862.893    130 31985.786    32563.074    32407.899
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
WARNING: Log-likelihood -15864.2 of mtZOA+F+R7 worse than mtZOA+F+R6 -15862.9
465  mtZOA+F+R7    15864.154    132 31992.307    32608.307    32420.914
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
469  mtMet         18745.191    101 37692.382    37926.519    38020.332
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
470  mtMet+I       18665.559    102 37535.118    37776.635    37866.314
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
471  mtMet+G4      17196.968    102 34597.936    34839.454    34929.133
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
472  mtMet+I+G4    17197.126    103 34600.252    34849.368    34934.695
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
473  mtMet+R2      17418.408    103 35042.815    35291.932    35377.259
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
474  mtMet+R3      17239.893    105 34689.785    34954.785    35030.723
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
475  mtMet+R4      17186.759    107 34587.519    34869.373    34934.950
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
476  mtMet+R5      17174.470    109 34566.939    34866.689    34920.865
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
477  mtMet+R6      17163.999    111 34549.997    34868.767    34910.417
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
478  mtMet+R7      17163.541    113 34553.083    34892.083    34919.996
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
482  mtMet+F       17309.534    120 34859.069    35279.938    35248.712
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
483  mtMet+F+I     17206.145    121 34654.289    35088.466    35047.179
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
484  mtMet+F+G4    15919.779    121 32081.557    32515.734    32474.447
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
485  mtMet+F+I+G4  15919.397    122 32082.794    32530.735    32478.931
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
486  mtMet+F+R2    16164.002    122 32572.005    33019.945    32968.142
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
487  mtMet+F+R3    15990.729    124 32229.457    32706.381    32632.088
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
488  mtMet+F+R4    15911.234    126 32074.467    32582.467    32483.592
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
489  mtMet+F+R5    15895.533    128 32047.066    32588.443    32462.685
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
490  mtMet+F+R6    15887.995    130 32035.989    32613.278    32458.103
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
491  mtMet+F+R7    15887.997    132 32039.995    32655.995    32468.602
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
495  mtVer         18801.578    101 37805.155    38039.292    38133.105
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
496  mtVer+I       18715.698    102 37635.397    37876.914    37966.593
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
497  mtVer+G4      17056.477    102 34316.954    34558.471    34648.150
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
498  mtVer+I+G4    17053.903    103 34313.806    34562.923    34648.250
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
499  mtVer+R2      17269.880    103 34745.759    34994.875    35080.203
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
500  mtVer+R3      17102.702    105 34415.405    34680.405    34756.342
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
501  mtVer+R4      17061.485    107 34336.969    34618.823    34684.401
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
502  mtVer+R5      17006.772    109 34231.544    34531.294    34585.470
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
503  mtVer+R6      16997.596    111 34217.193    34535.962    34577.613
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
504  mtVer+R7      16997.570    113 34221.140    34560.140    34588.054
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
508  mtVer+F       17550.384    120 35340.768    35761.637    35730.411
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
509  mtVer+F+I     17439.356    121 35120.712    35554.888    35513.602
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
510  mtVer+F+G4    16057.532    121 32357.064    32791.241    32749.954
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
511  mtVer+F+I+G4  16056.646    122 32357.291    32805.232    32753.428
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
512  mtVer+F+R2    16316.638    122 32877.276    33325.216    33273.412
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
513  mtVer+F+R3    16149.585    124 32547.170    33024.093    32949.801
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
514  mtVer+F+R4    16050.237    126 32352.475    32860.475    32761.600
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
515  mtVer+F+R5    16027.787    128 32311.575    32852.952    32727.194
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
516  mtVer+F+R6    16020.482    130 32300.964    32878.253    32723.078
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
517  mtVer+F+R7    16020.434    132 32304.869    32920.869    32733.476
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
521  mtInv         18756.440    101 37714.880    37949.017    38042.830
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
522  mtInv+I       18671.322    102 37546.645    37788.162    37877.841
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
523  mtInv+G4      17388.113    102 34980.226    35221.743    35311.423
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
524  mtInv+I+G4    17387.743    103 34981.487    35230.603    35315.930
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
525  mtInv+R2      17607.368    103 35420.736    35669.852    35755.179
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
526  mtInv+R3      17447.285    105 35104.569    35369.569    35445.507
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
527  mtInv+R4      17380.872    107 34975.744    35257.598    35323.176
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
528  mtInv+R5      17367.559    109 34953.119    35252.869    35307.044
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
529  mtInv+R6      17362.851    111 34947.702    35266.471    35308.122
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
534  mtInv+F       17073.630    120 34387.261    34808.130    34776.904
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
535  mtInv+F+I     16965.151    121 34172.303    34606.479    34565.193
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
536  mtInv+F+G4    15814.699    121 31871.397    32305.574    32264.287
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
537  mtInv+F+I+G4  15813.294    122 31870.587    32318.528    32266.724
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
538  mtInv+F+R2    16064.063    122 32372.127    32820.067    32768.264
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
539  mtInv+F+R3    15872.638    124 31993.276    32470.199    32395.907
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
540  mtInv+F+R4    15806.913    126 31865.826    32373.826    32274.951
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
541  mtInv+F+R5    15792.812    128 31841.625    32383.002    32257.244
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
542  mtInv+F+R6    15785.079    130 31830.158    32407.446    32252.271
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
543  mtInv+F+R7    15785.076    132 31834.151    32450.151    32262.758
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
547  mtMAM         19339.062    101 38880.124    39114.261    39208.074
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
548  mtMAM+I       19275.973    102 38755.947    38997.464    39087.143
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
549  mtMAM+G4      17182.587    102 34569.174    34810.691    34900.371
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
550  mtMAM+I+G4    17182.600    103 34571.199    34820.316    34905.643
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
551  mtMAM+R2      17480.796    103 35167.593    35416.709    35502.036
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
552  mtMAM+R3      17251.160    105 34712.320    34977.320    35053.257
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
553  mtMAM+R4      17163.762    107 34541.525    34823.378    34888.956
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
554  mtMAM+R5      17139.631    109 34497.262    34797.012    34851.187
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
555  mtMAM+R6      17112.648    111 34447.297    34766.066    34807.716
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
556  mtMAM+R7      17112.928    113 34451.856    34790.856    34818.769
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
560  mtMAM+F       17909.522    120 36059.044    36479.914    36448.687
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
561  mtMAM+F+I     17830.623    121 35903.246    36337.423    36296.136
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
562  mtMAM+F+G4    16168.199    121 32578.398    33012.575    32971.288
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
563  mtMAM+F+I+G4  16168.230    122 32580.460    33028.400    32976.597
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
564  mtMAM+F+R2    16454.453    122 33152.906    33600.846    33549.043
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
565  mtMAM+F+R3    16322.860    124 32893.719    33370.642    33296.350
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
566  mtMAM+F+R4    16212.827    126 32677.654    33185.654    33086.779
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
567  mtMAM+F+R5    16137.863    128 32531.726    33073.103    32947.345
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
568  mtMAM+F+R6    16117.831    130 32495.662    33072.950    32917.775
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
569  mtMAM+F+R7    16113.235    132 32490.471    33106.471    32919.078
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
573  FLAVI         18131.337    101 36464.673    36698.810    36792.623
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
574  FLAVI+I       17956.718    102 36117.436    36358.953    36448.632
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
575  FLAVI+G4      16552.639    102 33309.279    33550.796    33640.475
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
576  FLAVI+I+G4    16545.553    103 33297.105    33546.221    33631.549
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
577  FLAVI+R2      16852.337    103 33910.674    34159.790    34245.117
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
578  FLAVI+R3      16686.652    105 33583.304    33848.304    33924.241
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
579  FLAVI+R4      16573.112    107 33360.224    33642.078    33707.656
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
580  FLAVI+R5      16524.144    109 33266.288    33566.038    33620.214
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
581  FLAVI+R6      16517.304    111 33256.607    33575.377    33617.027
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
582  FLAVI+R7      16515.976    113 33257.951    33596.951    33624.865
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
586  FLAVI+F       17800.162    120 35840.324    36261.193    36229.967
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
587  FLAVI+F+I     17629.560    121 35501.120    35935.296    35894.010
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
588  FLAVI+F+G4    16221.638    121 32685.277    33119.453    33078.167
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
589  FLAVI+F+I+G4  16216.178    122 32676.355    33124.296    33072.492
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
590  FLAVI+F+R2    16545.078    122 33334.157    33782.097    33730.293
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
591  FLAVI+F+R3    16356.816    124 32961.631    33438.554    33364.262
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
592  FLAVI+F+R4    16260.755    126 32773.509    33281.509    33182.634
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
593  FLAVI+F+R5    16202.562    128 32661.124    33202.501    33076.744
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
594  FLAVI+F+R6    16202.312    130 32664.624    33241.913    33086.738
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
599  HIVb          17411.597    101 35025.194    35259.331    35353.144
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
600  HIVb+I        17220.934    102 34645.868    34887.386    34977.065
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
601  HIVb+G4       16160.606    102 32525.211    32766.729    32856.408
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
602  HIVb+I+G4     16147.752    103 32501.503    32750.620    32835.947
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
603  HIVb+R2       16412.114    103 33030.228    33279.345    33364.672
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
604  HIVb+R3       16217.427    105 32644.854    32909.854    32985.791
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
605  HIVb+R4       16147.829    107 32509.658    32791.512    32857.089
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
606  HIVb+R5       16128.066    109 32474.133    32773.883    32828.059
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
607  HIVb+R6       16122.222    111 32466.444    32785.213    32826.864
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
608  HIVb+R7       16121.831    113 32469.662    32808.662    32836.576
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
612  HIVb+F        17220.007    120 34680.015    35100.884    35069.658
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
613  HIVb+F+I      17042.853    121 34327.706    34761.883    34720.596
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
614  HIVb+F+G4     15932.252    121 32106.504    32540.680    32499.394
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
615  HIVb+F+I+G4   15919.169    122 32082.338    32530.279    32478.475
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
616  HIVb+F+R2     16196.550    122 32637.101    33085.041    33033.238
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
617  HIVb+F+R3     15990.473    124 32228.947    32705.870    32631.578
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
618  HIVb+F+R4     15925.443    126 32102.887    32610.887    32512.012
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
619  HIVb+F+R5     15908.531    128 32073.063    32614.440    32488.682
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
620  HIVb+F+R6     15899.837    130 32059.673    32636.961    32481.786
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
621  HIVb+F+R7     15898.878    132 32061.756    32677.756    32490.363
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
625  HIVw          18332.310    101 36866.620    37100.756    37194.569
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
626  HIVw+I        18111.632    102 36427.263    36668.781    36758.460
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
627  HIVw+G4       17053.366    102 34310.731    34552.249    34641.928
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
628  HIVw+I+G4     17038.906    103 34283.812    34532.928    34618.255
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
629  HIVw+R2       17330.988    103 34867.975    35117.091    35202.419
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
630  HIVw+R3       17138.548    105 34487.097    34752.097    34828.034
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
631  HIVw+R4       17051.460    107 34316.920    34598.774    34664.352
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
632  HIVw+R5       17021.989    109 34261.978    34561.728    34615.904
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
633  HIVw+R6       17018.980    111 34259.960    34578.729    34620.380
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
638  HIVw+F        17661.320    120 35562.639    35983.509    35952.282
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
639  HIVw+F+I      17454.420    121 35150.840    35585.017    35543.730
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
640  HIVw+F+G4     16348.235    121 32938.470    33372.646    33331.360
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
641  HIVw+F+I+G4   16333.167    122 32910.334    33358.275    33306.471
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
642  HIVw+F+R2     16634.218    122 33512.436    33960.377    33908.573
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
643  HIVw+F+R3     16423.405    124 33094.810    33571.733    33497.441
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
644  HIVw+F+R4     16356.176    126 32964.352    33472.352    33373.477
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
645  HIVw+F+R5     16313.885    128 32883.770    33425.147    33299.389
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
646  HIVw+F+R6     16309.402    130 32878.805    33456.093    33300.918
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
651  FLU           17507.210    101 35216.419    35450.556    35544.369
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
652  FLU+I         17328.957    102 34861.915    35103.432    35193.111
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
653  FLU+G4        16327.581    102 32859.163    33100.680    33190.359
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
654  FLU+I+G4      16317.527    103 32841.054    33090.170    33175.497
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
655  FLU+R2        16565.026    103 33336.053    33585.169    33670.496
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
656  FLU+R3        16397.216    105 33004.431    33269.431    33345.369
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
657  FLU+R4        16315.224    107 32844.449    33126.302    33191.880
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
658  FLU+R5        16303.523    109 32825.045    33124.795    33178.971
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
659  FLU+R6        16300.571    111 32823.141    33141.911    33183.561
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
664  FLU+F         17112.985    120 34465.970    34886.839    34855.613
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
665  FLU+F+I       16944.129    121 34130.258    34564.434    34523.148
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
666  FLU+F+G4      15857.314    121 31956.627    32390.804    32349.517
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
667  FLU+F+I+G4    15848.970    122 31941.940    32389.880    32338.077
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
668  FLU+F+R2      16101.818    122 32447.636    32895.576    32843.772
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
669  FLU+F+R3      15940.471    124 32128.941    32605.865    32531.572
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
670  FLU+F+R4      15844.323    126 31940.647    32448.647    32349.772
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
671  FLU+F+R5      15836.286    128 31928.573    32469.950    32344.192
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
672  FLU+F+R6      15834.207    130 31928.415    32505.703    32350.528
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
677  rtREV         16922.957    101 34047.914    34282.050    34375.863
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
678  rtREV+I       16810.242    102 33824.484    34066.001    34155.681
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
679  rtREV+G4      15881.067    102 31966.134    32207.651    32297.330
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
680  rtREV+I+G4    15878.555    103 31963.109    32212.225    32297.553
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
681  rtREV+R2      16077.829    103 32361.658    32610.774    32696.101
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
682  rtREV+R3      15918.064    105 32046.127    32311.127    32387.065
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
683  rtREV+R4      15873.653    107 31961.305    32243.159    32308.737
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
684  rtREV+R5      15857.901    109 31933.802    32233.552    32287.727
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
685  rtREV+R6      15854.363    111 31930.727    32249.496    32291.146
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
690  rtREV+F       16668.445    120 33576.890    33997.760    33966.533
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
691  rtREV+F+I     16564.026    121 33370.052    33804.228    33762.942
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
692  rtREV+F+G4    15605.418    121 31452.837    31887.013    31845.727
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
693  rtREV+F+I+G4  15603.128    122 31450.257    31898.197    31846.394
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
694  rtREV+F+R2    15816.211    122 31876.422    32324.362    32272.559
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
695  rtREV+F+R3    15636.113    124 31520.225    31997.148    31922.856
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
696  rtREV+F+R4    15595.961    126 31443.921    31951.921    31853.046
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
697  rtREV+F+R5    15584.906    128 31425.812    31967.189    31841.431
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
698  rtREV+F+R6    15581.611    130 31423.222    32000.510    31845.335
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
703  cpREV         16880.293    101 33962.586    34196.723    34290.536
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
704  cpREV+I       16739.143    102 33682.286    33923.803    34013.482
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
705  cpREV+G4      15884.719    102 31973.438    32214.955    32304.634
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
706  cpREV+I+G4    15876.820    103 31959.641    32208.757    32294.084
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
707  cpREV+R2      16073.099    103 32352.198    32601.314    32686.641
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
708  cpREV+R3      15909.804    105 32029.608    32294.608    32370.546
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
709  cpREV+R4      15868.705    107 31951.411    32233.265    32298.842
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
710  cpREV+R5      15846.040    109 31910.080    32209.830    32264.006
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
711  cpREV+R6      15841.072    111 31904.145    32222.914    32264.565
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
716  cpREV+F       16633.939    120 33507.878    33928.747    33897.520
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
717  cpREV+F+I     16494.592    121 33231.183    33665.359    33624.073
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
718  cpREV+F+G4    15652.660    121 31547.321    31981.497    31940.211
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
719  cpREV+F+I+G4  15645.186    122 31534.372    31982.312    31930.508
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
720  cpREV+F+R2    15869.754    122 31983.508    32431.448    32379.645
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
721  cpREV+F+R3    15690.149    124 31628.298    32105.222    32030.929
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
722  cpREV+F+R4    15644.927    126 31541.855    32049.855    31950.980
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
723  cpREV+F+R5    15620.806    128 31497.612    32038.989    31913.231
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
724  cpREV+F+R6    15615.886    130 31491.773    32069.061    31913.886
Model C10 is alias for POISSON+G+FMIX{C10pi1:1:0.1191344178,C10pi2:1:0.0874372456,C10pi3:1:0.1037105070,C10pi4:1:0.0922584809,C10pi5:1:0.1070492801,C10pi6:1:0.1329945166,C10pi7:1:0.0538028458,C10pi8:1:0.0691986212,C10pi9:1:0.1319937434,C10pi10:1:0.1024203429}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
729  C10           15571.900    102 31347.801    31589.318    31678.997
Model C20 is alias for POISSON+G+FMIX{C20pi1:1:0.0559910600,C20pi2:1:0.0514824870,C20pi3:1:0.0812922124,C20pi4:1:0.0721976867,C20pi5:1:0.0556718858,C20pi6:1:0.0331003080,C20pi7:1:0.0589501763,C20pi8:1:0.0263756889,C20pi9:1:0.0307584220,C20pi10:1:0.0376701125,C20pi11:1:0.0303058290,C20pi12:1:0.0808775576,C20pi13:1:0.0263349134,C20pi14:1:0.0579101455,C20pi15:1:0.0371248064,C20pi16:1:0.0586867766,C20pi17:1:0.0561479138,C20pi18:1:0.0349810886,C20pi19:1:0.0544937394,C20pi20:1:0.0596471901}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
730  C20           15310.939    102 30825.879    31067.396    31157.075
Model C30 is alias for POISSON+G+FMIX{C30pi1:1:0.0095783264,C30pi2:1:0.0248476365,C30pi3:1:0.0636309366,C30pi4:1:0.0537939225,C30pi5:1:0.0295885587,C30pi6:1:0.0117587936,C30pi7:1:0.0132013428,C30pi8:1:0.0236868805,C30pi9:1:0.0261687659,C30pi10:1:0.0239821974,C30pi11:1:0.0257100906,C30pi12:1:0.0465072425,C30pi13:1:0.0546794546,C30pi14:1:0.0536085131,C30pi15:1:0.0270622670,C30pi16:1:0.0403913593,C30pi17:1:0.0474212700,C30pi18:1:0.0458816478,C30pi19:1:0.0214036510,C30pi20:1:0.0290385981,C30pi21:1:0.0123391793,C30pi22:1:0.0569350229,C30pi23:1:0.0419687568,C30pi24:1:0.0339027062,C30pi25:1:0.0388777376,C30pi26:1:0.0196343766,C30pi27:1:0.0233086174,C30pi28:1:0.0622722654,C30pi29:1:0.0184803385,C30pi30:1:0.0203395454}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
731  C30           15277.731    102 30759.463    31000.980    31090.659
Model C40 is alias for POISSON+G+FMIX{C40pi1:1:0.0223853788,C40pi2:1:0.0338891820,C40pi3:1:0.0577169375,C40pi4:1:0.0252416233,C40pi5:1:0.0108607921,C40pi6:1:0.0462373793,C40pi7:1:0.0102293175,C40pi8:1:0.0147523625,C40pi9:1:0.0143161352,C40pi10:1:0.0182302541,C40pi11:1:0.0204025079,C40pi12:1:0.0425505156,C40pi13:1:0.0248627269,C40pi14:1:0.0105892988,C40pi15:1:0.0188238725,C40pi16:1:0.0086663445,C40pi17:1:0.0148496147,C40pi18:1:0.0343037402,C40pi19:1:0.0225335203,C40pi20:1:0.0174068578,C40pi21:1:0.0112207827,C40pi22:1:0.0443532245,C40pi23:1:0.0392573370,C40pi24:1:0.0196756555,C40pi25:1:0.0287690328,C40pi26:1:0.0114441177,C40pi27:1:0.0112338740,C40pi28:1:0.0582694099,C40pi29:1:0.0444272279,C40pi30:1:0.0112010942,C40pi31:1:0.0145176111,C40pi32:1:0.0114629026,C40pi33:1:0.0239628061,C40pi34:1:0.0266266492,C40pi35:1:0.0481201159,C40pi36:1:0.0371147423,C40pi37:1:0.0160476688,C40pi38:1:0.0237249267,C40pi39:1:0.0235226203,C40pi40:1:0.0261998398}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
732  C40           15276.661    102 30757.322    30998.839    31088.519
Model C50 is alias for POISSON+G+FMIX{C50pi1:1:0.0164297003,C50pi2:1:0.0273175755,C50pi3:1:0.0460247610,C50pi4:1:0.0084864734,C50pi5:1:0.0125389252,C50pi6:1:0.0343549036,C50pi7:1:0.0130241102,C50pi8:1:0.0094755681,C50pi9:1:0.0190040551,C50pi10:1:0.0151902354,C50pi11:1:0.0320534760,C50pi12:1:0.0210059850,C50pi13:1:0.0237408547,C50pi14:1:0.0239841203,C50pi15:1:0.0213748021,C50pi16:1:0.0210717705,C50pi17:1:0.0050241805,C50pi18:1:0.0166262276,C50pi19:1:0.0143945956,C50pi20:1:0.0104391130,C50pi21:1:0.0107628277,C50pi22:1:0.0148818171,C50pi23:1:0.0321480239,C50pi24:1:0.0145477978,C50pi25:1:0.0332355807,C50pi26:1:0.0143190281,C50pi27:1:0.0234478734,C50pi28:1:0.0183044983,C50pi29:1:0.0403269452,C50pi30:1:0.0135629530,C50pi31:1:0.0091880799,C50pi32:1:0.0158270022,C50pi33:1:0.0121019379,C50pi34:1:0.0353560982,C50pi35:1:0.0404495617,C50pi36:1:0.0104569232,C50pi37:1:0.0146187792,C50pi38:1:0.0093984095,C50pi39:1:0.0146773809,C50pi40:1:0.0201635562,C50pi41:1:0.0255640273,C50pi42:1:0.0039486842,C50pi43:1:0.0393652608,C50pi44:1:0.0056415419,C50pi45:1:0.0382833580,C50pi46:1:0.0039735086,C50pi47:1:0.0140269355,C50pi48:1:0.0476703673,C50pi49:1:0.0204062788,C50pi50:1:0.0117835304}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
733  C50           15231.003    102 30666.007    30907.524    30997.203
Model C60 is alias for POISSON+G+FMIX{C60pi1:1:0.0169698865,C60pi2:1:0.0211683374,C60pi3:1:0.0276589079,C60pi4:1:0.0065675964,C60pi5:1:0.0141221416,C60pi6:1:0.0068774834,C60pi7:1:0.0146909701,C60pi8:1:0.0067225777,C60pi9:1:0.0018396660,C60pi10:1:0.0102547197,C60pi11:1:0.0230896163,C60pi12:1:0.0057941033,C60pi13:1:0.0125394534,C60pi14:1:0.0204526478,C60pi15:1:0.0070629602,C60pi16:1:0.0117982741,C60pi17:1:0.0068334668,C60pi18:1:0.0433775839,C60pi19:1:0.0318278731,C60pi20:1:0.0222546108,C60pi21:1:0.0102264969,C60pi22:1:0.0150545891,C60pi23:1:0.0134159878,C60pi24:1:0.0148552065,C60pi25:1:0.0239111516,C60pi26:1:0.0128776278,C60pi27:1:0.0222318842,C60pi28:1:0.0247444742,C60pi29:1:0.0214274810,C60pi30:1:0.0115001882,C60pi31:1:0.0076017389,C60pi32:1:0.0130258568,C60pi33:1:0.0093701965,C60pi34:1:0.0467194264,C60pi35:1:0.0441940314,C60pi36:1:0.0322263154,C60pi37:1:0.0402999891,C60pi38:1:0.0150234227,C60pi39:1:0.0104589903,C60pi40:1:0.0214742395,C60pi41:1:0.0154957836,C60pi42:1:0.0101789953,C60pi43:1:0.0227980379,C60pi44:1:0.0123204539,C60pi45:1:0.0066777583,C60pi46:1:0.0004150083,C60pi47:1:0.0344385130,C60pi48:1:0.0113663379,C60pi49:1:0.0127143049,C60pi50:1:0.0124323741,C60pi51:1:0.0262124415,C60pi52:1:0.0064994957,C60pi53:1:0.0103203293,C60pi54:1:0.0142463512,C60pi55:1:0.0215600067,C60pi56:1:0.0199150700,C60pi57:1:0.0038964200,C60pi58:1:0.0113448855,C60pi59:1:0.0128595846,C60pi60:1:0.0117656776}
WARNING: Your input class weight 0.000415008 is very small and may cause numerical issues
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
734  C60           15229.027    102 30662.054    30903.571    30993.250
Model EX2 is alias for MIX{BurEX2:0.672020808818762,ExpEX2:1.6413466609931}
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
735  EX2           15867.964    102 31939.928    32181.446    32271.125
Model EX3 is alias for MIX{BurEX3:0.427672756793791,IntEX3:0.837595938019774,HExEX3:1.51863631431518}
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
736  EX3           15772.365    103 31750.731    31999.847    32085.174
Model EHO is alias for MIX{ExtEHO:0.720274356,HelEHO:0.976798797,OthEHO:0.783109376}
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
737  EHO           16324.807    103 32855.615    33104.731    33190.058
Model UL2 is alias for MIX{M1_UL2:0.581348617,M2_UL2:1.465482789}
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
738  UL2           15812.278    102 31828.555    32070.073    32159.752
Model UL3 is alias for MIX{Q1_UL3:0.484340397,Q2_UL3:0.492780514,Q3_UL3:1.15597274}
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
739  UL3           16397.092    103 33000.184    33249.301    33334.628
Model EX_EHO is alias for MIX{BUR_EXT:0.761816796788931,BUR_HEL:0.744425646802117,BUR_OTH:0.532457759429489,EXP_EXT:1.5639387472863,EXP_HEL:2.06403411829438,EXP_OTH:1.43336795177594}
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
740  EX_EHO        15622.373    106 31456.746    31730.047    31800.930
Model LG4M is alias for MIX{LG4M1,LG4M2,LG4M3,LG4M4}*G4
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
741  LG4M          15472.284    102 31148.568    31390.085    31479.764
Model LG4X is alias for MIX{LG4X1,LG4X2,LG4X3,LG4X4}*R4
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
742  LG4X          15461.244    107 31136.487    31418.341    31483.919
Model CF4 is alias for POISSON+FMIX{Fclass1,Fclass2,Fclass3,Fclass4}+F+G
WARNING: Normalizing State frequencies so that sum of them equals to 1
WARNING: Normalizing State frequencies so that sum of them equals to 1
WARNING: Normalizing State frequencies so that sum of them equals to 1
WARNING: Normalizing State frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
743  CF4           15999.428    125 32248.857    32741.044    32654.735
Model LG+C10 is alias for LG+POISSON+G+FMIX{C10pi1:1:0.1191344178,C10pi2:1:0.0874372456,C10pi3:1:0.1037105070,C10pi4:1:0.0922584809,C10pi5:1:0.1070492801,C10pi6:1:0.1329945166,C10pi7:1:0.0538028458,C10pi8:1:0.0691986212,C10pi9:1:0.1319937434,C10pi10:1:0.1024203429}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
744  LG+C10        15568.463    102 31340.926    31582.443    31672.122
Model LG+C20 is alias for LG+POISSON+G+FMIX{C20pi1:1:0.0559910600,C20pi2:1:0.0514824870,C20pi3:1:0.0812922124,C20pi4:1:0.0721976867,C20pi5:1:0.0556718858,C20pi6:1:0.0331003080,C20pi7:1:0.0589501763,C20pi8:1:0.0263756889,C20pi9:1:0.0307584220,C20pi10:1:0.0376701125,C20pi11:1:0.0303058290,C20pi12:1:0.0808775576,C20pi13:1:0.0263349134,C20pi14:1:0.0579101455,C20pi15:1:0.0371248064,C20pi16:1:0.0586867766,C20pi17:1:0.0561479138,C20pi18:1:0.0349810886,C20pi19:1:0.0544937394,C20pi20:1:0.0596471901}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
745  LG+C20        15362.527    102 30929.053    31170.571    31260.250
Model LG+C30 is alias for LG+POISSON+G+FMIX{C30pi1:1:0.0095783264,C30pi2:1:0.0248476365,C30pi3:1:0.0636309366,C30pi4:1:0.0537939225,C30pi5:1:0.0295885587,C30pi6:1:0.0117587936,C30pi7:1:0.0132013428,C30pi8:1:0.0236868805,C30pi9:1:0.0261687659,C30pi10:1:0.0239821974,C30pi11:1:0.0257100906,C30pi12:1:0.0465072425,C30pi13:1:0.0546794546,C30pi14:1:0.0536085131,C30pi15:1:0.0270622670,C30pi16:1:0.0403913593,C30pi17:1:0.0474212700,C30pi18:1:0.0458816478,C30pi19:1:0.0214036510,C30pi20:1:0.0290385981,C30pi21:1:0.0123391793,C30pi22:1:0.0569350229,C30pi23:1:0.0419687568,C30pi24:1:0.0339027062,C30pi25:1:0.0388777376,C30pi26:1:0.0196343766,C30pi27:1:0.0233086174,C30pi28:1:0.0622722654,C30pi29:1:0.0184803385,C30pi30:1:0.0203395454}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
746  LG+C30        15294.080    102 30792.160    31033.677    31123.356
Model LG+C40 is alias for LG+POISSON+G+FMIX{C40pi1:1:0.0223853788,C40pi2:1:0.0338891820,C40pi3:1:0.0577169375,C40pi4:1:0.0252416233,C40pi5:1:0.0108607921,C40pi6:1:0.0462373793,C40pi7:1:0.0102293175,C40pi8:1:0.0147523625,C40pi9:1:0.0143161352,C40pi10:1:0.0182302541,C40pi11:1:0.0204025079,C40pi12:1:0.0425505156,C40pi13:1:0.0248627269,C40pi14:1:0.0105892988,C40pi15:1:0.0188238725,C40pi16:1:0.0086663445,C40pi17:1:0.0148496147,C40pi18:1:0.0343037402,C40pi19:1:0.0225335203,C40pi20:1:0.0174068578,C40pi21:1:0.0112207827,C40pi22:1:0.0443532245,C40pi23:1:0.0392573370,C40pi24:1:0.0196756555,C40pi25:1:0.0287690328,C40pi26:1:0.0114441177,C40pi27:1:0.0112338740,C40pi28:1:0.0582694099,C40pi29:1:0.0444272279,C40pi30:1:0.0112010942,C40pi31:1:0.0145176111,C40pi32:1:0.0114629026,C40pi33:1:0.0239628061,C40pi34:1:0.0266266492,C40pi35:1:0.0481201159,C40pi36:1:0.0371147423,C40pi37:1:0.0160476688,C40pi38:1:0.0237249267,C40pi39:1:0.0235226203,C40pi40:1:0.0261998398}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
747  LG+C40        15294.974    102 30793.947    31035.464    31125.144
Model LG+C50 is alias for LG+POISSON+G+FMIX{C50pi1:1:0.0164297003,C50pi2:1:0.0273175755,C50pi3:1:0.0460247610,C50pi4:1:0.0084864734,C50pi5:1:0.0125389252,C50pi6:1:0.0343549036,C50pi7:1:0.0130241102,C50pi8:1:0.0094755681,C50pi9:1:0.0190040551,C50pi10:1:0.0151902354,C50pi11:1:0.0320534760,C50pi12:1:0.0210059850,C50pi13:1:0.0237408547,C50pi14:1:0.0239841203,C50pi15:1:0.0213748021,C50pi16:1:0.0210717705,C50pi17:1:0.0050241805,C50pi18:1:0.0166262276,C50pi19:1:0.0143945956,C50pi20:1:0.0104391130,C50pi21:1:0.0107628277,C50pi22:1:0.0148818171,C50pi23:1:0.0321480239,C50pi24:1:0.0145477978,C50pi25:1:0.0332355807,C50pi26:1:0.0143190281,C50pi27:1:0.0234478734,C50pi28:1:0.0183044983,C50pi29:1:0.0403269452,C50pi30:1:0.0135629530,C50pi31:1:0.0091880799,C50pi32:1:0.0158270022,C50pi33:1:0.0121019379,C50pi34:1:0.0353560982,C50pi35:1:0.0404495617,C50pi36:1:0.0104569232,C50pi37:1:0.0146187792,C50pi38:1:0.0093984095,C50pi39:1:0.0146773809,C50pi40:1:0.0201635562,C50pi41:1:0.0255640273,C50pi42:1:0.0039486842,C50pi43:1:0.0393652608,C50pi44:1:0.0056415419,C50pi45:1:0.0382833580,C50pi46:1:0.0039735086,C50pi47:1:0.0140269355,C50pi48:1:0.0476703673,C50pi49:1:0.0204062788,C50pi50:1:0.0117835304}
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
748  LG+C50        15260.000    102 30724.000    30965.517    31055.196
Model LG+C60 is alias for LG+POISSON+G+FMIX{C60pi1:1:0.0169698865,C60pi2:1:0.0211683374,C60pi3:1:0.0276589079,C60pi4:1:0.0065675964,C60pi5:1:0.0141221416,C60pi6:1:0.0068774834,C60pi7:1:0.0146909701,C60pi8:1:0.0067225777,C60pi9:1:0.0018396660,C60pi10:1:0.0102547197,C60pi11:1:0.0230896163,C60pi12:1:0.0057941033,C60pi13:1:0.0125394534,C60pi14:1:0.0204526478,C60pi15:1:0.0070629602,C60pi16:1:0.0117982741,C60pi17:1:0.0068334668,C60pi18:1:0.0433775839,C60pi19:1:0.0318278731,C60pi20:1:0.0222546108,C60pi21:1:0.0102264969,C60pi22:1:0.0150545891,C60pi23:1:0.0134159878,C60pi24:1:0.0148552065,C60pi25:1:0.0239111516,C60pi26:1:0.0128776278,C60pi27:1:0.0222318842,C60pi28:1:0.0247444742,C60pi29:1:0.0214274810,C60pi30:1:0.0115001882,C60pi31:1:0.0076017389,C60pi32:1:0.0130258568,C60pi33:1:0.0093701965,C60pi34:1:0.0467194264,C60pi35:1:0.0441940314,C60pi36:1:0.0322263154,C60pi37:1:0.0402999891,C60pi38:1:0.0150234227,C60pi39:1:0.0104589903,C60pi40:1:0.0214742395,C60pi41:1:0.0154957836,C60pi42:1:0.0101789953,C60pi43:1:0.0227980379,C60pi44:1:0.0123204539,C60pi45:1:0.0066777583,C60pi46:1:0.0004150083,C60pi47:1:0.0344385130,C60pi48:1:0.0113663379,C60pi49:1:0.0127143049,C60pi50:1:0.0124323741,C60pi51:1:0.0262124415,C60pi52:1:0.0064994957,C60pi53:1:0.0103203293,C60pi54:1:0.0142463512,C60pi55:1:0.0215600067,C60pi56:1:0.0199150700,C60pi57:1:0.0038964200,C60pi58:1:0.0113448855,C60pi59:1:0.0128595846,C60pi60:1:0.0117656776}
WARNING: Your input class weight 0.000415008 is very small and may cause numerical issues
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
749  LG+C60        15266.057    102 30736.114    30977.631    31067.310
Akaike Information Criterion:           C60
Corrected Akaike Information Criterion: C60
Bayesian Information Criterion:         C60
Best-fit model: C60 chosen according to BIC

All model information printed to iqtree_gene_trees/COG3265.model.gz
CPU time for ModelFinder: 4237.603 seconds (1h:10m:37s)
Wall-clock time for ModelFinder: 429.855 seconds (0h:7m:9s)
Generating 1000 samples for ultrafast bootstrap (seed: 601372)...
Model C60 is alias for POISSON+G+FMIX{C60pi1:1:0.0169698865,C60pi2:1:0.0211683374,C60pi3:1:0.0276589079,C60pi4:1:0.0065675964,C60pi5:1:0.0141221416,C60pi6:1:0.0068774834,C60pi7:1:0.0146909701,C60pi8:1:0.0067225777,C60pi9:1:0.0018396660,C60pi10:1:0.0102547197,C60pi11:1:0.0230896163,C60pi12:1:0.0057941033,C60pi13:1:0.0125394534,C60pi14:1:0.0204526478,C60pi15:1:0.0070629602,C60pi16:1:0.0117982741,C60pi17:1:0.0068334668,C60pi18:1:0.0433775839,C60pi19:1:0.0318278731,C60pi20:1:0.0222546108,C60pi21:1:0.0102264969,C60pi22:1:0.0150545891,C60pi23:1:0.0134159878,C60pi24:1:0.0148552065,C60pi25:1:0.0239111516,C60pi26:1:0.0128776278,C60pi27:1:0.0222318842,C60pi28:1:0.0247444742,C60pi29:1:0.0214274810,C60pi30:1:0.0115001882,C60pi31:1:0.0076017389,C60pi32:1:0.0130258568,C60pi33:1:0.0093701965,C60pi34:1:0.0467194264,C60pi35:1:0.0441940314,C60pi36:1:0.0322263154,C60pi37:1:0.0402999891,C60pi38:1:0.0150234227,C60pi39:1:0.0104589903,C60pi40:1:0.0214742395,C60pi41:1:0.0154957836,C60pi42:1:0.0101789953,C60pi43:1:0.0227980379,C60pi44:1:0.0123204539,C60pi45:1:0.0066777583,C60pi46:1:0.0004150083,C60pi47:1:0.0344385130,C60pi48:1:0.0113663379,C60pi49:1:0.0127143049,C60pi50:1:0.0124323741,C60pi51:1:0.0262124415,C60pi52:1:0.0064994957,C60pi53:1:0.0103203293,C60pi54:1:0.0142463512,C60pi55:1:0.0215600067,C60pi56:1:0.0199150700,C60pi57:1:0.0038964200,C60pi58:1:0.0113448855,C60pi59:1:0.0128595846,C60pi60:1:0.0117656776}
WARNING: Your input class weight 0.000415008 is very small and may cause numerical issues

NOTE: 410 MB RAM (0 GB) is required!
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
Estimate model parameters (epsilon = 0.100)
1. Initial log-likelihood: -15229.027
Optimal log-likelihood: -15228.944
Mixture weights: 0.017 0.021 0.028 0.007 0.014 0.007 0.015 0.007 0.002 0.010 0.023 0.006 0.013 0.020 0.007 0.012 0.007 0.043 0.032 0.022 0.010 0.015 0.013 0.015 0.024 0.013 0.022 0.025 0.021 0.012 0.008 0.013 0.009 0.047 0.044 0.032 0.040 0.015 0.010 0.021 0.015 0.010 0.023 0.012 0.007 0.000 0.034 0.011 0.013 0.012 0.026 0.006 0.010 0.014 0.022 0.020 0.004 0.011 0.013 0.012
Gamma shape alpha: 0.767
Parameters optimization took 1 rounds (2.044 sec)
Wrote distance file to... 
Computing ML distances based on estimated model parameters...
Calculating distance matrix: done in 0.0629959 secs using 999.7% CPU
Computing ML distances took 0.063199 sec (of wall-clock time) 0.631411 sec (of CPU time)
WARNING: Some pairwise ML distances are too long (saturated)
Setting up auxiliary I and S matrices: done in 0.00183566 secs using 77.63% CPU
Constructing RapidNJ tree: done in 0.0661488 secs using 327.9% CPU
Computing RapidNJ tree took 0.068381 sec (of wall-clock time) 0.218668 sec (of CPU time)
Log-likelihood of RapidNJ tree: -15268.272
--------------------------------------------------------------------
|             INITIALIZING CANDIDATE TREE SET                      |
--------------------------------------------------------------------
Generating 98 parsimony trees... 1.375 second
Computing log-likelihood of 98 initial trees ... 73.475 seconds
Current best score: -15228.944

Do NNI search on 20 best initial trees
Optimizing NNI: done in 20.9559 secs using 976.7% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 1: -15192.887
Optimizing NNI: done in 31.5563 secs using 977.5% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 2: -15180.119
Optimizing NNI: done in 62.1675 secs using 976.3% CPU
Optimizing NNI: done in 28.8235 secs using 974.1% CPU
Optimizing NNI: done in 37.9082 secs using 978% CPU
Optimizing NNI: done in 35.7373 secs using 986.9% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 6: -15165.784
Optimizing NNI: done in 38.0942 secs using 977.9% CPU
Optimizing NNI: done in 33.4892 secs using 966.6% CPU
Optimizing NNI: done in 30.8934 secs using 967.7% CPU
Optimizing NNI: done in 46.929 secs using 975.2% CPU
Iteration 10 / LogL: -15187.298 / Time: 0h:7m:39s
Optimizing NNI: done in 33.1601 secs using 970.6% CPU
Optimizing NNI: done in 34.8421 secs using 973% CPU
Optimizing NNI: done in 41.8051 secs using 975.9% CPU
Optimizing NNI: done in 35.0889 secs using 965.8% CPU
Optimizing NNI: done in 37.0331 secs using 964.3% CPU
Optimizing NNI: done in 54.9284 secs using 964.6% CPU
Optimizing NNI: done in 36.3887 secs using 972.8% CPU
Optimizing NNI: done in 21.2959 secs using 977.1% CPU
Optimizing NNI: done in 48.192 secs using 908.3% CPU
Optimizing NNI: done in 35.7755 secs using 972.5% CPU
Iteration 20 / LogL: -15201.526 / Time: 0h:13m:59s
Finish initializing candidate tree set (20)
Current best tree score: -15165.784 / CPU time: 832.661
Number of iterations: 20
--------------------------------------------------------------------
|               OPTIMIZING CANDIDATE TREE SET                      |
--------------------------------------------------------------------
Optimizing NNI: done in 32.8654 secs using 973.3% CPU
Optimizing NNI: done in 76.2987 secs using 974.6% CPU
Optimizing NNI: done in 21.478 secs using 973.9% CPU
Optimizing NNI: done in 36.0185 secs using 976.8% CPU
Optimizing NNI: done in 24.7191 secs using 979.5% CPU
Optimizing NNI: done in 25.1162 secs using 982.1% CPU
Optimizing NNI: done in 20.8145 secs using 983% CPU
Optimizing NNI: done in 18.998 secs using 984.4% CPU
Optimizing NNI: done in 35.9085 secs using 984.9% CPU
Optimizing NNI: done in 26.169 secs using 986.5% CPU
Iteration 30 / LogL: -15170.659 / Time: 0h:19m:19s (0h:50m:38s left)
Optimizing NNI: done in 28.9612 secs using 987.1% CPU
Optimizing NNI: done in 28.5263 secs using 984% CPU
Optimizing NNI: done in 28.2413 secs using 984.8% CPU
Optimizing NNI: done in 22.9699 secs using 984.7% CPU
Optimizing NNI: done in 31.6921 secs using 987.2% CPU
Optimizing NNI: done in 26.4594 secs using 979.6% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 36: -15164.946
Optimizing NNI: done in 22.3453 secs using 984.4% CPU
Optimizing NNI: done in 31.8277 secs using 986.1% CPU
Optimizing NNI: done in 28.2276 secs using 986% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 39: -15160.138
Optimizing NNI: done in 30.7809 secs using 986.4% CPU
Iteration 40 / LogL: -15166.662 / Time: 0h:24m:5s (1h:1m:8s left)
Optimizing NNI: done in 18.344 secs using 978.1% CPU
Optimizing NNI: done in 20.5463 secs using 963.6% CPU
Optimizing NNI: done in 25.5272 secs using 961.5% CPU
Optimizing NNI: done in 20.1575 secs using 963.2% CPU
Optimizing NNI: done in 21.461 secs using 969.3% CPU
Optimizing NNI: done in 45.5335 secs using 975.7% CPU
Optimizing NNI: done in 25.8382 secs using 984.4% CPU
Optimizing NNI: done in 27.8812 secs using 987% CPU
Optimizing NNI: done in 31.4759 secs using 985.6% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 49: -15159.626
Optimizing NNI: done in 31.3417 secs using 986.2% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 50: -15158.583
Iteration 50 / LogL: -15158.583 / Time: 0h:28m:38s (0h:58m:27s left)
Log-likelihood cutoff on original alignment: -15238.418
UFBoot trees printed to iqtree_gene_trees/COG3265.ufboot
Optimizing NNI: done in 23.9427 secs using 984.5% CPU
Optimizing NNI: done in 25.4324 secs using 983.1% CPU
Optimizing NNI: done in 22.1954 secs using 984.7% CPU
Optimizing NNI: done in 27.9373 secs using 985.9% CPU
Optimizing NNI: done in 19.7752 secs using 986.6% CPU
Optimizing NNI: done in 26.5107 secs using 986.7% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 56: -15155.462
Optimizing NNI: done in 36.6233 secs using 987% CPU
Optimizing NNI: done in 35.2554 secs using 987.7% CPU
Optimizing NNI: done in 21.7439 secs using 986.6% CPU
Optimizing NNI: done in 22.96 secs using 985.5% CPU
Iteration 60 / LogL: -15155.995 / Time: 0h:33m:4s (0h:53m:49s left)
Optimizing NNI: done in 23.0634 secs using 985.8% CPU
Optimizing NNI: done in 24.3764 secs using 983.1% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 62: -15155.154
Optimizing NNI: done in 17.7955 secs using 983.9% CPU
Optimizing NNI: done in 20.5322 secs using 985.7% CPU
Optimizing NNI: done in 25.797 secs using 983.8% CPU
Optimizing NNI: done in 23.8803 secs using 983.3% CPU
Optimizing NNI: done in 24.476 secs using 982.1% CPU
Optimizing NNI: done in 19.8608 secs using 985.3% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 68: -15154.909
Optimizing NNI: done in 18.4518 secs using 986.1% CPU
Optimizing NNI: done in 24.6743 secs using 986.4% CPU
Iteration 70 / LogL: -15155.541 / Time: 0h:36m:53s (0h:52m:23s left)
Optimizing NNI: done in 30.5546 secs using 987.3% CPU
Optimizing NNI: done in 18.2751 secs using 976.3% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 72: -15154.865
Optimizing NNI: done in 21.3427 secs using 986.6% CPU
Optimizing NNI: done in 23.2066 secs using 986.6% CPU
Optimizing NNI: done in 17.3773 secs using 984.4% CPU
Optimizing NNI: done in 22.7288 secs using 986.3% CPU
BETTER TREE FOUND at iteration 76: -15154.864
Optimizing NNI: done in 22.7307 secs using 986.8% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 77: -15153.344
Optimizing NNI: done in 21.2847 secs using 983.9% CPU
Estimate model parameters (epsilon = 0.100)
UPDATE BEST LOG-LIKELIHOOD: -15153.229
Optimizing NNI: done in 16.7503 secs using 984.7% CPU
Optimizing NNI: done in 19.1859 secs using 983.9% CPU
Iteration 80 / LogL: -15154.245 / Time: 0h:40m:33s (0h:49m:48s left)
Optimizing NNI: done in 16.8669 secs using 981.9% CPU
Optimizing NNI: done in 14.105 secs using 985.8% CPU
Optimizing NNI: done in 24.6522 secs using 983% CPU
Optimizing NNI: done in 23.3409 secs using 982.9% CPU
Optimizing NNI: done in 19.4063 secs using 983.5% CPU
Optimizing NNI: done in 19.2286 secs using 982.8% CPU
Optimizing NNI: done in 20.4237 secs using 984.5% CPU
Optimizing NNI: done in 15.5948 secs using 984.7% CPU
Optimizing NNI: done in 20.3545 secs using 984.6% CPU
Optimizing NNI: done in 26.5787 secs using 983.9% CPU
Iteration 90 / LogL: -15153.754 / Time: 0h:43m:55s (0h:42m:56s left)
Optimizing NNI: done in 16.1292 secs using 982.9% CPU
Optimizing NNI: done in 25.6729 secs using 983.5% CPU
Optimizing NNI: done in 14.8163 secs using 984.8% CPU
Optimizing NNI: done in 18.8808 secs using 982.3% CPU
Optimizing NNI: done in 19.6254 secs using 985.4% CPU
Optimizing NNI: done in 14.5292 secs using 987% CPU
Optimizing NNI: done in 18.4956 secs using 985% CPU
Optimizing NNI: done in 18.6951 secs using 986.6% CPU
Optimizing NNI: done in 15.7279 secs using 986.7% CPU
Optimizing NNI: done in 22.3224 secs using 980% CPU
Iteration 100 / LogL: -15155.194 / Time: 0h:47m:2s (0h:36m:35s left)
Log-likelihood cutoff on original alignment: -15220.251
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.919
NOTE: UFBoot does not converge, continue at least 100 more iterations
UFBoot trees printed to iqtree_gene_trees/COG3265.ufboot
Optimizing NNI: done in 17.6561 secs using 975.7% CPU
Optimizing NNI: done in 18.1897 secs using 974.2% CPU
Optimizing NNI: done in 20.5505 secs using 983.1% CPU
Optimizing NNI: done in 18.0162 secs using 984.5% CPU
Optimizing NNI: done in 20.3728 secs using 985.3% CPU
Optimizing NNI: done in 18.4299 secs using 986.7% CPU
Optimizing NNI: done in 24.7384 secs using 985.3% CPU
Optimizing NNI: done in 18.1104 secs using 986% CPU
Optimizing NNI: done in 28.4919 secs using 984.4% CPU
Optimizing NNI: done in 22.3191 secs using 982.6% CPU
Iteration 110 / LogL: -15154.011 / Time: 0h:50m:31s (0h:41m:42s left)
Optimizing NNI: done in 28.0453 secs using 984.7% CPU
Optimizing NNI: done in 25.8114 secs using 983.2% CPU
Optimizing NNI: done in 23.4161 secs using 986.8% CPU
Optimizing NNI: done in 18.9145 secs using 986.8% CPU
Optimizing NNI: done in 26.0874 secs using 987.5% CPU
Optimizing NNI: done in 19.5 secs using 987.1% CPU
Optimizing NNI: done in 19.3857 secs using 985.6% CPU
Optimizing NNI: done in 19.9823 secs using 986.2% CPU
Optimizing NNI: done in 14.3679 secs using 986% CPU
Optimizing NNI: done in 20.5431 secs using 985.8% CPU
Iteration 120 / LogL: -15153.397 / Time: 0h:54m:9s (0h:36m:24s left)
Optimizing NNI: done in 17.9353 secs using 985% CPU
Optimizing NNI: done in 20.8296 secs using 985% CPU
Optimizing NNI: done in 17.4261 secs using 985.8% CPU
Optimizing NNI: done in 13.2375 secs using 983.6% CPU
Optimizing NNI: done in 19.3769 secs using 981.3% CPU
Optimizing NNI: done in 17.1884 secs using 983.3% CPU
Optimizing NNI: done in 29.4672 secs using 984.2% CPU
Optimizing NNI: done in 18.0875 secs using 983.3% CPU
Optimizing NNI: done in 25.759 secs using 986.3% CPU
Optimizing NNI: done in 17.391 secs using 987.2% CPU
Iteration 130 / LogL: -15154.742 / Time: 0h:57m:27s (0h:31m:10s left)
Optimizing NNI: done in 20.5106 secs using 982.8% CPU
Optimizing NNI: done in 15.9823 secs using 981.5% CPU
Optimizing NNI: done in 20.3714 secs using 980.8% CPU
Optimizing NNI: done in 19.3485 secs using 985.6% CPU
Optimizing NNI: done in 17.2571 secs using 984.7% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 135: -15152.624
Optimizing NNI: done in 16.0622 secs using 985.2% CPU
Optimizing NNI: done in 17.3548 secs using 983.3% CPU
Optimizing NNI: done in 17.49 secs using 981.6% CPU
Optimizing NNI: done in 18.8252 secs using 976.8% CPU
Optimizing NNI: done in 20.8316 secs using 980.5% CPU
Iteration 140 / LogL: -15153.901 / Time: 1h:0m:34s (0h:41m:24s left)
Optimizing NNI: done in 25.2774 secs using 978.2% CPU
Optimizing NNI: done in 17.9516 secs using 979.1% CPU
Optimizing NNI: done in 21.4879 secs using 979.3% CPU
Optimizing NNI: done in 17.2521 secs using 978% CPU
Optimizing NNI: done in 17.9512 secs using 979.4% CPU
Optimizing NNI: done in 22.8024 secs using 980.7% CPU
Optimizing NNI: done in 17.8242 secs using 982.4% CPU
Optimizing NNI: done in 18.0422 secs using 983.8% CPU
Optimizing NNI: done in 15.254 secs using 980.5% CPU
Optimizing NNI: done in 16.8554 secs using 981.1% CPU
Iteration 150 / LogL: -15155.141 / Time: 1h:3m:47s (0h:36m:23s left)
Log-likelihood cutoff on original alignment: -15220.251
UFBoot trees printed to iqtree_gene_trees/COG3265.ufboot
Optimizing NNI: done in 14.043 secs using 980.8% CPU
Optimizing NNI: done in 20.8382 secs using 981.7% CPU
Optimizing NNI: done in 22.6077 secs using 981.2% CPU
Optimizing NNI: done in 23.4575 secs using 981.2% CPU
Optimizing NNI: done in 22.7872 secs using 979.3% CPU
Optimizing NNI: done in 20.0761 secs using 980% CPU
Optimizing NNI: done in 19.2224 secs using 981.8% CPU
Optimizing NNI: done in 15.9572 secs using 979.9% CPU
Optimizing NNI: done in 16.0523 secs using 982.4% CPU
Optimizing NNI: done in 21.646 secs using 983.8% CPU
Iteration 160 / LogL: -15153.813 / Time: 1h:7m:6s (0h:31m:39s left)
Optimizing NNI: done in 16.6019 secs using 983.5% CPU
Optimizing NNI: done in 16.9958 secs using 980% CPU
Optimizing NNI: done in 19.4796 secs using 979.9% CPU
Optimizing NNI: done in 16.3787 secs using 979.4% CPU
Optimizing NNI: done in 17.4818 secs using 979.7% CPU
Optimizing NNI: done in 19.1542 secs using 978.6% CPU
Optimizing NNI: done in 18.2356 secs using 980.2% CPU
Optimizing NNI: done in 20.4065 secs using 981.7% CPU
Optimizing NNI: done in 20.62 secs using 979.6% CPU
Optimizing NNI: done in 25.6693 secs using 982.7% CPU
Iteration 170 / LogL: -15152.793 / Time: 1h:10m:18s (0h:27m:2s left)
Optimizing NNI: done in 16.7638 secs using 981.7% CPU
Optimizing NNI: done in 27.4952 secs using 983.1% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 172: -15152.501
Optimizing NNI: done in 19.3126 secs using 979.1% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 173: -15152.228
Optimizing NNI: done in 21.5197 secs using 982.1% CPU
Optimizing NNI: done in 17.4244 secs using 978.5% CPU
Optimizing NNI: done in 23.3035 secs using 980.9% CPU
Optimizing NNI: done in 28.5528 secs using 981.8% CPU
Optimizing NNI: done in 22.3804 secs using 979.1% CPU
Optimizing NNI: done in 25.2238 secs using 978.3% CPU
Optimizing NNI: done in 20.3103 secs using 982.5% CPU
Iteration 180 / LogL: -15153.966 / Time: 1h:14m:6s (0h:38m:30s left)
Optimizing NNI: done in 16.2535 secs using 982.5% CPU
UPDATE BEST LOG-LIKELIHOOD: -15152.226
Optimizing NNI: done in 22.7302 secs using 982.4% CPU
Optimizing NNI: done in 21.389 secs using 980.9% CPU
Optimizing NNI: done in 20.9776 secs using 985% CPU
Optimizing NNI: done in 22.7548 secs using 983% CPU
Optimizing NNI: done in 19.1049 secs using 982.1% CPU
Optimizing NNI: done in 20.9795 secs using 980.1% CPU
Optimizing NNI: done in 27.0534 secs using 981.2% CPU
Optimizing NNI: done in 28.4706 secs using 978.8% CPU
Optimizing NNI: done in 26.0553 secs using 981.7% CPU
Iteration 190 / LogL: -15152.500 / Time: 1h:17m:53s (0h:34m:12s left)
Optimizing NNI: done in 25.4148 secs using 980.8% CPU
Optimizing NNI: done in 24.3019 secs using 982.8% CPU
Optimizing NNI: done in 21.8215 secs using 983% CPU
Optimizing NNI: done in 19.6825 secs using 982.9% CPU
Optimizing NNI: done in 24.4652 secs using 982.2% CPU
Optimizing NNI: done in 26.8709 secs using 980.6% CPU
Optimizing NNI: done in 15.8779 secs using 980.7% CPU
Optimizing NNI: done in 22.8436 secs using 982.2% CPU
Optimizing NNI: done in 28.852 secs using 980.5% CPU
Optimizing NNI: done in 25.2789 secs using 980.8% CPU
UPDATE BEST LOG-LIKELIHOOD: -15152.225
Iteration 200 / LogL: -15152.225 / Time: 1h:21m:51s (0h:30m:1s left)
Log-likelihood cutoff on original alignment: -15220.251
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.979
NOTE: UFBoot does not converge, continue at least 100 more iterations
UFBoot trees printed to iqtree_gene_trees/COG3265.ufboot
Optimizing NNI: done in 26.1038 secs using 980.1% CPU
Optimizing NNI: done in 18.6422 secs using 981.5% CPU
Optimizing NNI: done in 18.2098 secs using 984% CPU
Optimizing NNI: done in 17.8407 secs using 983.7% CPU
Optimizing NNI: done in 21.3571 secs using 982.7% CPU
Optimizing NNI: done in 17.2523 secs using 982.3% CPU
Optimizing NNI: done in 23.4118 secs using 979.8% CPU
Optimizing NNI: done in 22.2352 secs using 980% CPU
Optimizing NNI: done in 16.9923 secs using 982% CPU
Optimizing NNI: done in 23.0719 secs using 979.2% CPU
Iteration 210 / LogL: -15152.331 / Time: 1h:25m:18s (0h:36m:44s left)
Optimizing NNI: done in 22.0949 secs using 979.2% CPU
Optimizing NNI: done in 18.1451 secs using 979% CPU
Optimizing NNI: done in 16.7113 secs using 981.7% CPU
Optimizing NNI: done in 19.9434 secs using 982.5% CPU
Optimizing NNI: done in 21.3287 secs using 981.3% CPU
Optimizing NNI: done in 25.2167 secs using 980.7% CPU
Optimizing NNI: done in 22.9573 secs using 983.4% CPU
Optimizing NNI: done in 17.03 secs using 982% CPU
Optimizing NNI: done in 20.5531 secs using 982.6% CPU
Optimizing NNI: done in 18.3044 secs using 982.7% CPU
Iteration 220 / LogL: -15152.648 / Time: 1h:28m:42s (0h:32m:24s left)
Optimizing NNI: done in 24.323 secs using 984.7% CPU
Optimizing NNI: done in 23.8334 secs using 982.1% CPU
Optimizing NNI: done in 15.3973 secs using 982.9% CPU
Optimizing NNI: done in 23.5447 secs using 983.1% CPU
Optimizing NNI: done in 21.8375 secs using 981.1% CPU
Optimizing NNI: done in 21.7004 secs using 981.4% CPU
Optimizing NNI: done in 18.5514 secs using 981.5% CPU
Optimizing NNI: done in 23.501 secs using 982% CPU
Optimizing NNI: done in 20.5709 secs using 977.8% CPU
Optimizing NNI: done in 22.635 secs using 980.9% CPU
Iteration 230 / LogL: -15171.452 / Time: 1h:32m:20s (0h:28m:13s left)
Optimizing NNI: done in 22.1806 secs using 981.9% CPU
Optimizing NNI: done in 19.8178 secs using 981.6% CPU
Optimizing NNI: done in 19.1516 secs using 979.1% CPU
Optimizing NNI: done in 22.2384 secs using 980% CPU
Optimizing NNI: done in 27.4763 secs using 981.5% CPU
Optimizing NNI: done in 21.4585 secs using 980.7% CPU
Optimizing NNI: done in 22.3701 secs using 979% CPU
Optimizing NNI: done in 25.3 secs using 982.6% CPU
Optimizing NNI: done in 17.7719 secs using 982.3% CPU
Optimizing NNI: done in 29.0241 secs using 982.6% CPU
Iteration 240 / LogL: -15152.562 / Time: 1h:36m:9s (0h:24m:8s left)
Optimizing NNI: done in 19.282 secs using 981% CPU
Optimizing NNI: done in 16.6591 secs using 981.5% CPU
Optimizing NNI: done in 19.9749 secs using 981.2% CPU
Optimizing NNI: done in 21.2264 secs using 980.8% CPU
Optimizing NNI: done in 23.8954 secs using 983.8% CPU
Optimizing NNI: done in 24.0212 secs using 984.6% CPU
Optimizing NNI: done in 22.5837 secs using 983.4% CPU
Optimizing NNI: done in 17.6454 secs using 981.6% CPU
Optimizing NNI: done in 19.7674 secs using 981.8% CPU
Optimizing NNI: done in 16.3288 secs using 982.2% CPU
Iteration 250 / LogL: -15152.245 / Time: 1h:39m:32s (0h:19m:59s left)
Log-likelihood cutoff on original alignment: -15220.251
UFBoot trees printed to iqtree_gene_trees/COG3265.ufboot
Optimizing NNI: done in 19.0576 secs using 982.8% CPU
Optimizing NNI: done in 27.7291 secs using 981.8% CPU
UPDATE BEST LOG-LIKELIHOOD: -15152.225
Optimizing NNI: done in 18.0638 secs using 982.2% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 253: -15151.849
Optimizing NNI: done in 22.4423 secs using 982.9% CPU
Optimizing NNI: done in 20.8423 secs using 981.7% CPU
Optimizing NNI: done in 13.6565 secs using 983.5% CPU
Optimizing NNI: done in 25.557 secs using 981.8% CPU
Optimizing NNI: done in 21.1452 secs using 979.9% CPU
Optimizing NNI: done in 17.6225 secs using 982.2% CPU
Estimate model parameters (epsilon = 0.100)
UPDATE BEST LOG-LIKELIHOOD: -15151.776
Optimizing NNI: done in 21.8118 secs using 981.9% CPU
Iteration 260 / LogL: -15153.165 / Time: 1h:43m:6s (0h:37m:1s left)
Optimizing NNI: done in 31.4087 secs using 979.5% CPU
Optimizing NNI: done in 19.6007 secs using 980.1% CPU
Optimizing NNI: done in 21.2415 secs using 981.1% CPU
Optimizing NNI: done in 23.7033 secs using 979.6% CPU
Optimizing NNI: done in 20.4552 secs using 978.7% CPU
Optimizing NNI: done in 19.3558 secs using 980.1% CPU
Optimizing NNI: done in 23.1245 secs using 980.3% CPU
Optimizing NNI: done in 31.3906 secs using 983% CPU
Optimizing NNI: done in 23.2693 secs using 983% CPU
Optimizing NNI: done in 20.9516 secs using 981.1% CPU
Iteration 270 / LogL: -15152.233 / Time: 1h:47m:2s (0h:33m:1s left)
Optimizing NNI: done in 24.85 secs using 982.8% CPU
Optimizing NNI: done in 24.2442 secs using 982.1% CPU
Optimizing NNI: done in 21.2957 secs using 982.2% CPU
Optimizing NNI: done in 20.0458 secs using 978.5% CPU
Optimizing NNI: done in 23.407 secs using 981.9% CPU
Optimizing NNI: done in 21.1067 secs using 982.1% CPU
Optimizing NNI: done in 17.8704 secs using 981.9% CPU
Optimizing NNI: done in 25.7758 secs using 983% CPU
Optimizing NNI: done in 17.8243 secs using 983.3% CPU
Optimizing NNI: done in 25.0935 secs using 980.1% CPU
Iteration 280 / LogL: -15153.094 / Time: 1h:50m:46s (0h:28m:58s left)
Optimizing NNI: done in 24.43 secs using 980.4% CPU
Optimizing NNI: done in 17.8706 secs using 980.8% CPU
Optimizing NNI: done in 20.8472 secs using 981.7% CPU
Optimizing NNI: done in 23.8001 secs using 980.6% CPU
Optimizing NNI: done in 23.3646 secs using 981.6% CPU
Optimizing NNI: done in 23.2976 secs using 980.8% CPU
Optimizing NNI: done in 19.0157 secs using 984.1% CPU
Optimizing NNI: done in 19.3785 secs using 980.1% CPU
Optimizing NNI: done in 17.5686 secs using 981.3% CPU
Optimizing NNI: done in 21.309 secs using 980.9% CPU
Iteration 290 / LogL: -15153.783 / Time: 1h:54m:18s (0h:24m:55s left)
Optimizing NNI: done in 20.0098 secs using 981.3% CPU
Optimizing NNI: done in 19.2738 secs using 980% CPU
Optimizing NNI: done in 23.2864 secs using 982.9% CPU
Optimizing NNI: done in 20.6594 secs using 981.2% CPU
Optimizing NNI: done in 20.0526 secs using 983.2% CPU
Optimizing NNI: done in 21.5091 secs using 982.6% CPU
Optimizing NNI: done in 25.6168 secs using 981.7% CPU
Optimizing NNI: done in 24.8854 secs using 980.1% CPU
Optimizing NNI: done in 20.4414 secs using 983.5% CPU
Optimizing NNI: done in 26.6025 secs using 980% CPU
Iteration 300 / LogL: -15151.851 / Time: 1h:58m:3s (0h:20m:55s left)
Log-likelihood cutoff on original alignment: -15220.251
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.982
NOTE: UFBoot does not converge, continue at least 100 more iterations
UFBoot trees printed to iqtree_gene_trees/COG3265.ufboot
Optimizing NNI: done in 24.8794 secs using 979.1% CPU
Optimizing NNI: done in 20.5374 secs using 982.4% CPU
Optimizing NNI: done in 13.7691 secs using 982.4% CPU
Optimizing NNI: done in 18.9711 secs using 979.9% CPU
Optimizing NNI: done in 18.0932 secs using 981.2% CPU
Optimizing NNI: done in 20.0964 secs using 981.7% CPU
Optimizing NNI: done in 21.6358 secs using 981.8% CPU
Optimizing NNI: done in 13.909 secs using 982.1% CPU
Optimizing NNI: done in 29.9232 secs using 983.2% CPU
Optimizing NNI: done in 21.6904 secs using 982.2% CPU
Iteration 310 / LogL: -15154.852 / Time: 2h:1m:29s (0h:35m:23s left)
Optimizing NNI: done in 27.4385 secs using 982.7% CPU
Optimizing NNI: done in 23.5758 secs using 984.4% CPU
Optimizing NNI: done in 17.8722 secs using 984.1% CPU
Optimizing NNI: done in 20.7626 secs using 982.8% CPU
Optimizing NNI: done in 17.3802 secs using 982.2% CPU
Optimizing NNI: done in 15.3039 secs using 979.9% CPU
Optimizing NNI: done in 25.8839 secs using 979.4% CPU
Optimizing NNI: done in 22.0264 secs using 982% CPU
Optimizing NNI: done in 23.2829 secs using 982.4% CPU
Optimizing NNI: done in 20.898 secs using 982.2% CPU
Iteration 320 / LogL: -15151.776 / Time: 2h:5m:5s (0h:31m:22s left)
Optimizing NNI: done in 27.681 secs using 982.1% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 321: -15150.772
Optimizing NNI: done in 21.8366 secs using 982.7% CPU
Optimizing NNI: done in 18.8994 secs using 983% CPU
Optimizing NNI: done in 24.1472 secs using 982.5% CPU
Optimizing NNI: done in 17.6362 secs using 979.8% CPU
Optimizing NNI: done in 15.9775 secs using 982.4% CPU
Optimizing NNI: done in 16.7706 secs using 982.8% CPU
Optimizing NNI: done in 17.8646 secs using 983.6% CPU
Optimizing NNI: done in 14.9184 secs using 984.1% CPU
Optimizing NNI: done in 21.8913 secs using 981.9% CPU
Iteration 330 / LogL: -15151.778 / Time: 2h:8m:26s (0h:35m:31s left)
Optimizing NNI: done in 21.2192 secs using 979.7% CPU
Optimizing NNI: done in 25.803 secs using 980.1% CPU
Optimizing NNI: done in 17.5683 secs using 981.1% CPU
Optimizing NNI: done in 27.8482 secs using 980.1% CPU
Optimizing NNI: done in 19.5522 secs using 979.7% CPU
Optimizing NNI: done in 26.0094 secs using 980.7% CPU
Optimizing NNI: done in 18.1621 secs using 981.4% CPU
Optimizing NNI: done in 20.0056 secs using 982.7% CPU
Optimizing NNI: done in 17.8936 secs using 981.3% CPU
Optimizing NNI: done in 17.7459 secs using 983.4% CPU
Iteration 340 / LogL: -15167.375 / Time: 2h:12m:0s (0h:31m:32s left)
Optimizing NNI: done in 22.9391 secs using 983.4% CPU
Optimizing NNI: done in 24.6483 secs using 983.4% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 342: -15150.659
Optimizing NNI: done in 19.6295 secs using 980.5% CPU
Optimizing NNI: done in 24.228 secs using 979.6% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 344: -15150.598
Optimizing NNI: done in 21.0819 secs using 979.9% CPU
Optimizing NNI: done in 18.7 secs using 980.6% CPU
Optimizing NNI: done in 24.9246 secs using 981.1% CPU
Optimizing NNI: done in 22.4028 secs using 981.1% CPU
Optimizing NNI: done in 23.4053 secs using 982.6% CPU
Optimizing NNI: done in 17.9531 secs using 981.2% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 350: -15150.577
Iteration 350 / LogL: -15150.577 / Time: 2h:15m:47s (0h:38m:54s left)
Log-likelihood cutoff on original alignment: -15220.251
UFBoot trees printed to iqtree_gene_trees/COG3265.ufboot
Optimizing NNI: done in 19.7398 secs using 983% CPU
Estimate model parameters (epsilon = 0.100)
UPDATE BEST LOG-LIKELIHOOD: -15150.540
Optimizing NNI: done in 21.9426 secs using 983.2% CPU
Optimizing NNI: done in 22.156 secs using 984.7% CPU
Optimizing NNI: done in 22.0475 secs using 983.2% CPU
Optimizing NNI: done in 21.4768 secs using 981.7% CPU
Optimizing NNI: done in 17.4824 secs using 983.4% CPU
Optimizing NNI: done in 21.8443 secs using 982.2% CPU
Optimizing NNI: done in 24.5999 secs using 982.5% CPU
Optimizing NNI: done in 16.6637 secs using 981.9% CPU
Optimizing NNI: done in 23.8948 secs using 982% CPU
Iteration 360 / LogL: -15150.604 / Time: 2h:19m:23s (0h:34m:56s left)
Optimizing NNI: done in 23.5931 secs using 983.6% CPU
Optimizing NNI: done in 20.415 secs using 984.2% CPU
Optimizing NNI: done in 24.6492 secs using 981.9% CPU
Optimizing NNI: done in 20.5378 secs using 981.4% CPU
Optimizing NNI: done in 17.904 secs using 981.2% CPU
Optimizing NNI: done in 21.4614 secs using 983.2% CPU
Optimizing NNI: done in 22.7699 secs using 980.1% CPU
Optimizing NNI: done in 19.9665 secs using 983.7% CPU
Optimizing NNI: done in 29.0007 secs using 983.8% CPU
Optimizing NNI: done in 26.0016 secs using 979.1% CPU
Iteration 370 / LogL: -15150.598 / Time: 2h:23m:12s (0h:31m:2s left)
Optimizing NNI: done in 22.0993 secs using 980.5% CPU
Optimizing NNI: done in 21.8367 secs using 979.7% CPU
Optimizing NNI: done in 20.9595 secs using 980.2% CPU
Optimizing NNI: done in 21.9785 secs using 982.5% CPU
Optimizing NNI: done in 20.0364 secs using 983.4% CPU
Optimizing NNI: done in 17.4373 secs using 983.8% CPU
Optimizing NNI: done in 20.0685 secs using 983.7% CPU
Optimizing NNI: done in 15.9058 secs using 980.1% CPU
Optimizing NNI: done in 18.9678 secs using 980.6% CPU
Optimizing NNI: done in 17.6963 secs using 982.7% CPU
Iteration 380 / LogL: -15150.943 / Time: 2h:26m:31s (0h:27m:3s left)
Optimizing NNI: done in 18.9453 secs using 983.1% CPU
Optimizing NNI: done in 19.8613 secs using 983.7% CPU
Optimizing NNI: done in 13.3514 secs using 982.2% CPU
Optimizing NNI: done in 21.8616 secs using 983.2% CPU
Optimizing NNI: done in 18.0668 secs using 982.9% CPU
Optimizing NNI: done in 20.5513 secs using 983.4% CPU
Optimizing NNI: done in 19.327 secs using 983% CPU
Optimizing NNI: done in 19.2605 secs using 982.7% CPU
Optimizing NNI: done in 26.1873 secs using 974.2% CPU
Optimizing NNI: done in 23.3979 secs using 971.4% CPU
Iteration 390 / LogL: -15150.599 / Time: 2h:29m:53s (0h:23m:7s left)
Optimizing NNI: done in 18.7624 secs using 984.1% CPU
Optimizing NNI: done in 24.6553 secs using 984.3% CPU
Optimizing NNI: done in 18.6888 secs using 983.9% CPU
Optimizing NNI: done in 14.5942 secs using 983.4% CPU
Optimizing NNI: done in 22.2966 secs using 984.4% CPU
Optimizing NNI: done in 20.0084 secs using 982.4% CPU
Optimizing NNI: done in 24.6464 secs using 980.4% CPU
UPDATE BEST LOG-LIKELIHOOD: -15150.540
Optimizing NNI: done in 25.5667 secs using 981.3% CPU
Optimizing NNI: done in 16.2535 secs using 978.9% CPU
Optimizing NNI: done in 25.0639 secs using 979.9% CPU
Iteration 400 / LogL: -15150.649 / Time: 2h:33m:26s (0h:19m:13s left)
Log-likelihood cutoff on original alignment: -15220.251
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.982
NOTE: UFBoot does not converge, continue at least 100 more iterations
UFBoot trees printed to iqtree_gene_trees/COG3265.ufboot
Optimizing NNI: done in 21.1205 secs using 979.1% CPU
Optimizing NNI: done in 22.6199 secs using 981.2% CPU
Optimizing NNI: done in 25.6086 secs using 982.1% CPU
Optimizing NNI: done in 21.2869 secs using 983.6% CPU
Optimizing NNI: done in 15.7878 secs using 982.8% CPU
Optimizing NNI: done in 22.7387 secs using 982.2% CPU
Optimizing NNI: done in 19.2659 secs using 978.3% CPU
Optimizing NNI: done in 22.2112 secs using 975.3% CPU
Optimizing NNI: done in 21.6486 secs using 974.8% CPU
Optimizing NNI: done in 21.7053 secs using 974.8% CPU
Iteration 410 / LogL: -15150.580 / Time: 2h:37m:3s (0h:34m:33s left)
Optimizing NNI: done in 24.8437 secs using 977.1% CPU
Optimizing NNI: done in 21.0834 secs using 979.6% CPU
Optimizing NNI: done in 26.1019 secs using 979.3% CPU
Optimizing NNI: done in 17.2386 secs using 978.9% CPU
Optimizing NNI: done in 17.9352 secs using 979% CPU
Optimizing NNI: done in 19.8443 secs using 979.2% CPU
Optimizing NNI: done in 24.1605 secs using 979.9% CPU
Optimizing NNI: done in 22.3911 secs using 978.5% CPU
Optimizing NNI: done in 17.3557 secs using 980.1% CPU
Optimizing NNI: done in 22.4886 secs using 979.1% CPU
Iteration 420 / LogL: -15150.668 / Time: 2h:40m:38s (0h:30m:40s left)
Optimizing NNI: done in 16.4832 secs using 978.5% CPU
Optimizing NNI: done in 25.2308 secs using 979.6% CPU
Optimizing NNI: done in 24.3516 secs using 980.4% CPU
Optimizing NNI: done in 22.2802 secs using 978.3% CPU
Optimizing NNI: done in 22.9483 secs using 976.4% CPU
Optimizing NNI: done in 16.6196 secs using 976.9% CPU
Optimizing NNI: done in 21.4676 secs using 976% CPU
Optimizing NNI: done in 17.0239 secs using 979.6% CPU
Optimizing NNI: done in 19.3242 secs using 977.4% CPU
Optimizing NNI: done in 17.9215 secs using 979.8% CPU
Iteration 430 / LogL: -15150.540 / Time: 2h:44m:4s (0h:26m:46s left)
Optimizing NNI: done in 20.1922 secs using 976.1% CPU
Optimizing NNI: done in 17.9241 secs using 975.5% CPU
Optimizing NNI: done in 24.8271 secs using 976.6% CPU
Optimizing NNI: done in 22.5322 secs using 973.6% CPU
Optimizing NNI: done in 20.1606 secs using 975.6% CPU
Optimizing NNI: done in 19.3018 secs using 975.2% CPU
Optimizing NNI: done in 26.0739 secs using 973.7% CPU
Optimizing NNI: done in 18.0962 secs using 975.5% CPU
Optimizing NNI: done in 17.7112 secs using 974.7% CPU
Optimizing NNI: done in 20.0077 secs using 975.8% CPU
Iteration 440 / LogL: -15153.859 / Time: 2h:47m:33s (0h:22m:53s left)
Optimizing NNI: done in 21.4784 secs using 976.3% CPU
Optimizing NNI: done in 22.7136 secs using 974.9% CPU
Optimizing NNI: done in 18.1901 secs using 973.7% CPU
Optimizing NNI: done in 27.1369 secs using 979.8% CPU
Optimizing NNI: done in 20.824 secs using 977.2% CPU
Optimizing NNI: done in 17.1189 secs using 977% CPU
Optimizing NNI: done in 16.4736 secs using 975.5% CPU
Optimizing NNI: done in 18.5914 secs using 974.2% CPU
Optimizing NNI: done in 25.2521 secs using 975.5% CPU
Optimizing NNI: done in 19.9831 secs using 978.1% CPU
Iteration 450 / LogL: -15151.714 / Time: 2h:51m:2s (0h:19m:2s left)
Log-likelihood cutoff on original alignment: -15220.251
UFBoot trees printed to iqtree_gene_trees/COG3265.ufboot
Optimizing NNI: done in 15.7692 secs using 977.1% CPU
Optimizing NNI: done in 18.4053 secs using 977.9% CPU
Optimizing NNI: done in 24.8215 secs using 975.5% CPU
Optimizing NNI: done in 21.9232 secs using 977.4% CPU
Optimizing NNI: done in 22.6255 secs using 976.7% CPU
Optimizing NNI: done in 18.7754 secs using 978.7% CPU
Optimizing NNI: done in 18.4743 secs using 978.7% CPU
Optimizing NNI: done in 20.0452 secs using 978.4% CPU
Optimizing NNI: done in 19.2139 secs using 978.3% CPU
Optimizing NNI: done in 20.2224 secs using 976.8% CPU
Iteration 460 / LogL: -15150.540 / Time: 2h:54m:25s (0h:15m:12s left)
Optimizing NNI: done in 17.2328 secs using 974.8% CPU
Optimizing NNI: done in 23.0848 secs using 976.6% CPU
Optimizing NNI: done in 21.4649 secs using 975.3% CPU
Optimizing NNI: done in 19.9993 secs using 974.6% CPU
Optimizing NNI: done in 20.0507 secs using 975.8% CPU
Optimizing NNI: done in 19.3064 secs using 975.7% CPU
Optimizing NNI: done in 22.991 secs using 976.2% CPU
Optimizing NNI: done in 18.7697 secs using 973% CPU
Optimizing NNI: done in 17.7663 secs using 975.4% CPU
Optimizing NNI: done in 22.4216 secs using 975.8% CPU
Iteration 470 / LogL: -15150.601 / Time: 2h:57m:50s (0h:11m:22s left)
Optimizing NNI: done in 27.0274 secs using 976.8% CPU
UPDATE BEST LOG-LIKELIHOOD: -15150.540
Optimizing NNI: done in 16.5894 secs using 973% CPU
Optimizing NNI: done in 19.7138 secs using 976.3% CPU
Optimizing NNI: done in 17.5823 secs using 974.5% CPU
Optimizing NNI: done in 18.9901 secs using 976.4% CPU
Optimizing NNI: done in 15.6074 secs using 973.6% CPU
Optimizing NNI: done in 23.4208 secs using 975.7% CPU
Optimizing NNI: done in 23.0843 secs using 974.2% CPU
Optimizing NNI: done in 19.5019 secs using 975.9% CPU
Optimizing NNI: done in 18.9667 secs using 973.5% CPU
Iteration 480 / LogL: -15150.540 / Time: 3h:1m:13s (0h:7m:34s left)
Optimizing NNI: done in 23.5105 secs using 974.2% CPU
Optimizing NNI: done in 22.9946 secs using 975% CPU
Optimizing NNI: done in 19.3859 secs using 976.6% CPU
Optimizing NNI: done in 17.195 secs using 978.2% CPU
Optimizing NNI: done in 19.2516 secs using 977.4% CPU
Optimizing NNI: done in 20.9207 secs using 978.4% CPU
Optimizing NNI: done in 21.2239 secs using 979.3% CPU
Optimizing NNI: done in 21.6258 secs using 977.7% CPU
Optimizing NNI: done in 22.8583 secs using 977% CPU
Optimizing NNI: done in 22.1498 secs using 976.4% CPU
Iteration 490 / LogL: -15151.813 / Time: 3h:4m:46s (0h:3m:46s left)
Optimizing NNI: done in 19.5682 secs using 978.5% CPU
Optimizing NNI: done in 17.5056 secs using 978.6% CPU
Optimizing NNI: done in 25.5883 secs using 976.5% CPU
Optimizing NNI: done in 22.3708 secs using 974.9% CPU
Optimizing NNI: done in 20.1865 secs using 977.1% CPU
Optimizing NNI: done in 18.2107 secs using 979.2% CPU
Optimizing NNI: done in 20.5618 secs using 978.3% CPU
Optimizing NNI: done in 19.0164 secs using 978.8% CPU
Optimizing NNI: done in 22.2091 secs using 979% CPU
Optimizing NNI: done in 19.082 secs using 978.3% CPU
Iteration 500 / LogL: -15150.709 / Time: 3h:8m:13s (0h:0m:0s left)
Log-likelihood cutoff on original alignment: -15220.251
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.978
NOTE: UFBoot does not converge, continue at least 100 more iterations
UFBoot trees printed to iqtree_gene_trees/COG3265.ufboot
Optimizing NNI: done in 21.8241 secs using 979.5% CPU
Optimizing NNI: done in 21.2186 secs using 978.8% CPU
Optimizing NNI: done in 15.5106 secs using 978% CPU
Optimizing NNI: done in 26.4047 secs using 979.4% CPU
Optimizing NNI: done in 25.9814 secs using 978.6% CPU
Optimizing NNI: done in 23.7394 secs using 979.5% CPU
Optimizing NNI: done in 20.219 secs using 978.1% CPU
Optimizing NNI: done in 26.54 secs using 977.7% CPU
Optimizing NNI: done in 26.0893 secs using 972.5% CPU
Optimizing NNI: done in 23.1499 secs using 973.4% CPU
Iteration 510 / LogL: -15152.817 / Time: 3h:12m:6s (0h:33m:58s left)
Optimizing NNI: done in 21.6389 secs using 976.5% CPU
Optimizing NNI: done in 24.6585 secs using 974.6% CPU
Optimizing NNI: done in 25.2922 secs using 979.8% CPU
Optimizing NNI: done in 29.9714 secs using 980.4% CPU
Optimizing NNI: done in 19.8323 secs using 981.1% CPU
Optimizing NNI: done in 19.2138 secs using 981.9% CPU
Optimizing NNI: done in 17.3555 secs using 981% CPU
Optimizing NNI: done in 23.3438 secs using 983.8% CPU
Optimizing NNI: done in 18.7788 secs using 983.5% CPU
Optimizing NNI: done in 21.6038 secs using 983.7% CPU
Iteration 520 / LogL: -15150.709 / Time: 3h:15m:50s (0h:30m:11s left)
Optimizing NNI: done in 23.6702 secs using 981.7% CPU
Optimizing NNI: done in 16.6563 secs using 979.1% CPU
Optimizing NNI: done in 19.7456 secs using 974.5% CPU
Optimizing NNI: done in 23.6086 secs using 975% CPU
Optimizing NNI: done in 27.5204 secs using 974.9% CPU
Optimizing NNI: done in 19.9996 secs using 976.8% CPU
Optimizing NNI: done in 24.7235 secs using 974.9% CPU
Optimizing NNI: done in 24.5944 secs using 975.8% CPU
Optimizing NNI: done in 17.9142 secs using 975.3% CPU
Optimizing NNI: done in 21.3797 secs using 975.9% CPU
Iteration 530 / LogL: -15150.599 / Time: 3h:19m:32s (0h:26m:24s left)
Optimizing NNI: done in 22.6753 secs using 974.1% CPU
Optimizing NNI: done in 17.4471 secs using 976.2% CPU
Optimizing NNI: done in 20.0769 secs using 976.1% CPU
Optimizing NNI: done in 19.2165 secs using 975.6% CPU
Optimizing NNI: done in 17.8658 secs using 976.4% CPU
Optimizing NNI: done in 23.986 secs using 973.5% CPU
Optimizing NNI: done in 20.725 secs using 974.1% CPU
Optimizing NNI: done in 23.1608 secs using 978.4% CPU
Optimizing NNI: done in 17.0556 secs using 977.8% CPU
Optimizing NNI: done in 20.6639 secs using 979.4% CPU
Iteration 540 / LogL: -15150.599 / Time: 3h:22m:57s (0h:22m:35s left)
Optimizing NNI: done in 28.4776 secs using 978.4% CPU
Optimizing NNI: done in 14.618 secs using 977.3% CPU
Optimizing NNI: done in 24.7762 secs using 979.8% CPU
Optimizing NNI: done in 23.5495 secs using 977.6% CPU
Optimizing NNI: done in 25.9133 secs using 979.6% CPU
Optimizing NNI: done in 21.4623 secs using 978.8% CPU
Optimizing NNI: done in 26.0765 secs using 979.2% CPU
Optimizing NNI: done in 16.721 secs using 978.8% CPU
Optimizing NNI: done in 25.4972 secs using 979% CPU
Optimizing NNI: done in 22.5982 secs using 979.3% CPU
Iteration 550 / LogL: -15150.938 / Time: 3h:26m:49s (0h:18m:50s left)
Log-likelihood cutoff on original alignment: -15220.251
UFBoot trees printed to iqtree_gene_trees/COG3265.ufboot
Optimizing NNI: done in 20.4342 secs using 979.8% CPU
Optimizing NNI: done in 21.2129 secs using 979.2% CPU
Optimizing NNI: done in 19.7661 secs using 978.4% CPU
Optimizing NNI: done in 22.2427 secs using 978.8% CPU
Optimizing NNI: done in 16.7126 secs using 979.1% CPU
Optimizing NNI: done in 20.259 secs using 977.1% CPU
Optimizing NNI: done in 24.7752 secs using 978% CPU
Optimizing NNI: done in 14.9025 secs using 979% CPU
Optimizing NNI: done in 21.9337 secs using 980.3% CPU
Optimizing NNI: done in 20.1025 secs using 977.6% CPU
Iteration 560 / LogL: -15150.540 / Time: 3h:30m:14s (0h:15m:2s left)
Optimizing NNI: done in 22.8055 secs using 978.7% CPU
Optimizing NNI: done in 18.7728 secs using 978.6% CPU
Optimizing NNI: done in 23.1867 secs using 978.9% CPU
Optimizing NNI: done in 28.1171 secs using 980.3% CPU
Optimizing NNI: done in 20.5022 secs using 978% CPU
Optimizing NNI: done in 20.079 secs using 979.4% CPU
Optimizing NNI: done in 21.5437 secs using 981.2% CPU
Optimizing NNI: done in 16.9642 secs using 979.8% CPU
Optimizing NNI: done in 23.8878 secs using 980.1% CPU
Optimizing NNI: done in 22.0088 secs using 978.4% CPU
Iteration 570 / LogL: -15150.540 / Time: 3h:33m:54s (0h:11m:16s left)
Optimizing NNI: done in 25.5253 secs using 977.8% CPU
Optimizing NNI: done in 16.5543 secs using 978% CPU
Optimizing NNI: done in 17.7796 secs using 977% CPU
Optimizing NNI: done in 24.8497 secs using 977.6% CPU
Optimizing NNI: done in 24.6852 secs using 977.6% CPU
Optimizing NNI: done in 21.8425 secs using 977% CPU
Optimizing NNI: done in 18.0661 secs using 975.8% CPU
Optimizing NNI: done in 25.631 secs using 978.9% CPU
Optimizing NNI: done in 22.2984 secs using 977.1% CPU
Optimizing NNI: done in 20.0706 secs using 976.1% CPU
Iteration 580 / LogL: -15150.542 / Time: 3h:37m:34s (0h:7m:30s left)
Optimizing NNI: done in 20.9169 secs using 979.3% CPU
Optimizing NNI: done in 15.7479 secs using 976.2% CPU
Optimizing NNI: done in 23.3279 secs using 978.1% CPU
Optimizing NNI: done in 26.3737 secs using 977.2% CPU
Optimizing NNI: done in 17.2283 secs using 976.2% CPU
Optimizing NNI: done in 18.7094 secs using 980.2% CPU
Optimizing NNI: done in 20.616 secs using 979.6% CPU
Optimizing NNI: done in 22.879 secs using 978% CPU
Optimizing NNI: done in 19.9715 secs using 979% CPU
Optimizing NNI: done in 21.4619 secs using 976.6% CPU
Iteration 590 / LogL: -15150.706 / Time: 3h:41m:3s (0h:3m:45s left)
Optimizing NNI: done in 28.6593 secs using 974.6% CPU
Optimizing NNI: done in 23.7619 secs using 977.3% CPU
Optimizing NNI: done in 18.4472 secs using 975.9% CPU
Optimizing NNI: done in 19.7743 secs using 978.5% CPU
Optimizing NNI: done in 22.9235 secs using 978.4% CPU
Optimizing NNI: done in 22.1001 secs using 975.4% CPU
Optimizing NNI: done in 17.8089 secs using 974.5% CPU
Optimizing NNI: done in 25.1791 secs using 977% CPU
Optimizing NNI: done in 22.2576 secs using 975.2% CPU
Optimizing NNI: done in 21.2861 secs using 977.1% CPU
Iteration 600 / LogL: -15150.540 / Time: 3h:44m:48s (0h:0m:0s left)
Log-likelihood cutoff on original alignment: -15220.251
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.974
NOTE: UFBoot does not converge, continue at least 100 more iterations
UFBoot trees printed to iqtree_gene_trees/COG3265.ufboot
Optimizing NNI: done in 17.7396 secs using 979.8% CPU
Optimizing NNI: done in 21.2781 secs using 979.4% CPU
Optimizing NNI: done in 19.0547 secs using 979.7% CPU
Optimizing NNI: done in 23.681 secs using 978.6% CPU
Optimizing NNI: done in 17.8181 secs using 979.8% CPU
Optimizing NNI: done in 25.1446 secs using 978.7% CPU
Optimizing NNI: done in 20.2364 secs using 977.4% CPU
Optimizing NNI: done in 22.9019 secs using 978.6% CPU
Optimizing NNI: done in 17.8132 secs using 980.1% CPU
Optimizing NNI: done in 21.1915 secs using 980% CPU
Iteration 610 / LogL: -15150.733 / Time: 3h:48m:18s (0h:33m:44s left)
Optimizing NNI: done in 18.7716 secs using 978.4% CPU
Optimizing NNI: done in 21.0096 secs using 978.4% CPU
Optimizing NNI: done in 19.4377 secs using 979% CPU
Optimizing NNI: done in 23.2535 secs using 979.9% CPU
Optimizing NNI: done in 21.8738 secs using 979.1% CPU
Optimizing NNI: done in 20.9877 secs using 977.1% CPU
Optimizing NNI: done in 25.2249 secs using 978.2% CPU
Optimizing NNI: done in 23.2592 secs using 978% CPU
Optimizing NNI: done in 20.6561 secs using 980.2% CPU
Optimizing NNI: done in 27.9799 secs using 980.2% CPU
Iteration 620 / LogL: -15159.495 / Time: 3h:52m:2s (0h:29m:59s left)
Optimizing NNI: done in 19.8268 secs using 980.4% CPU
Optimizing NNI: done in 20.1981 secs using 980.8% CPU
Optimizing NNI: done in 21.1857 secs using 980.3% CPU
Optimizing NNI: done in 21.1916 secs using 979.4% CPU
Optimizing NNI: done in 18.2329 secs using 980.5% CPU
Optimizing NNI: done in 21.1572 secs using 978.6% CPU
Optimizing NNI: done in 24.1009 secs using 976.9% CPU
Optimizing NNI: done in 23.5238 secs using 973.2% CPU
Optimizing NNI: done in 16.7903 secs using 975.6% CPU
Optimizing NNI: done in 21.3086 secs using 976.1% CPU
Iteration 630 / LogL: -15150.577 / Time: 3h:55m:32s (0h:26m:12s left)
Optimizing NNI: done in 21.4583 secs using 976.2% CPU
Optimizing NNI: done in 19.6916 secs using 976.7% CPU
Optimizing NNI: done in 28.8419 secs using 973.6% CPU
Optimizing NNI: done in 20.507 secs using 972.2% CPU
Optimizing NNI: done in 22.2677 secs using 974.7% CPU
Optimizing NNI: done in 17.3488 secs using 975.4% CPU
Optimizing NNI: done in 22.6939 secs using 975.5% CPU
Optimizing NNI: done in 18.0101 secs using 975.8% CPU
Optimizing NNI: done in 16.7131 secs using 974.1% CPU
Optimizing NNI: done in 23.2593 secs using 979.7% CPU
Iteration 640 / LogL: -15150.689 / Time: 3h:59m:5s (0h:22m:27s left)
Optimizing NNI: done in 24.4705 secs using 978.7% CPU
Optimizing NNI: done in 19.7398 secs using 979.7% CPU
Optimizing NNI: done in 18.3675 secs using 980.2% CPU
Optimizing NNI: done in 18.3475 secs using 981% CPU
Optimizing NNI: done in 19.9412 secs using 979.1% CPU
Optimizing NNI: done in 20.2732 secs using 980% CPU
Optimizing NNI: done in 16.2908 secs using 979.9% CPU
Optimizing NNI: done in 22.2979 secs using 979.6% CPU
Optimizing NNI: done in 20.4705 secs using 979.8% CPU
Optimizing NNI: done in 28.5603 secs using 979.5% CPU
Iteration 650 / LogL: -15151.990 / Time: 4h:2m:36s (0h:18m:41s left)
Log-likelihood cutoff on original alignment: -15220.251
UFBoot trees printed to iqtree_gene_trees/COG3265.ufboot
Optimizing NNI: done in 20.1517 secs using 980.4% CPU
Optimizing NNI: done in 27.7782 secs using 981% CPU
Optimizing NNI: done in 24.3156 secs using 980.6% CPU
Optimizing NNI: done in 22.1957 secs using 980% CPU
Optimizing NNI: done in 31.5453 secs using 980.5% CPU
Optimizing NNI: done in 19.6317 secs using 980.1% CPU
Optimizing NNI: done in 26.2044 secs using 979.7% CPU
Optimizing NNI: done in 23.8724 secs using 980.8% CPU
Optimizing NNI: done in 23.9949 secs using 979.6% CPU
Optimizing NNI: done in 23.5366 secs using 979.8% CPU
Iteration 660 / LogL: -15150.896 / Time: 4h:6m:42s (0h:14m:58s left)
Optimizing NNI: done in 19.9224 secs using 980.1% CPU
Optimizing NNI: done in 27.5082 secs using 978.8% CPU
Optimizing NNI: done in 20.55 secs using 976.3% CPU
Optimizing NNI: done in 25.035 secs using 978.6% CPU
Optimizing NNI: done in 24.7413 secs using 980.1% CPU
Optimizing NNI: done in 21.6221 secs using 980.4% CPU
Optimizing NNI: done in 19.2729 secs using 980.9% CPU
Optimizing NNI: done in 22.3966 secs using 981.2% CPU
Optimizing NNI: done in 20.4677 secs using 981.5% CPU
Optimizing NNI: done in 19.1026 secs using 980% CPU
Iteration 670 / LogL: -15150.577 / Time: 4h:10m:25s (0h:11m:13s left)
Optimizing NNI: done in 19.2477 secs using 977% CPU
Optimizing NNI: done in 18.3531 secs using 978.6% CPU
Optimizing NNI: done in 27.415 secs using 978.2% CPU
Optimizing NNI: done in 26.5491 secs using 977.1% CPU
Optimizing NNI: done in 29.6032 secs using 976.4% CPU
Optimizing NNI: done in 24.0196 secs using 974.6% CPU
Optimizing NNI: done in 21.9011 secs using 977.5% CPU
Optimizing NNI: done in 18.8455 secs using 979.3% CPU
Optimizing NNI: done in 21.6119 secs using 977.2% CPU
Optimizing NNI: done in 22.1665 secs using 980% CPU
Iteration 680 / LogL: -15151.950 / Time: 4h:14m:18s (0h:7m:29s left)
Optimizing NNI: done in 22.1996 secs using 978.7% CPU
Optimizing NNI: done in 24.8623 secs using 978.7% CPU
Optimizing NNI: done in 20.823 secs using 978.5% CPU
Optimizing NNI: done in 15.6876 secs using 978.9% CPU
Optimizing NNI: done in 17.8498 secs using 977.5% CPU
Optimizing NNI: done in 16.839 secs using 977.2% CPU
Optimizing NNI: done in 18.8782 secs using 978.3% CPU
Optimizing NNI: done in 20.1758 secs using 973.7% CPU
Optimizing NNI: done in 18.6409 secs using 977.4% CPU
Optimizing NNI: done in 22.602 secs using 978.5% CPU
Iteration 690 / LogL: -15153.852 / Time: 4h:17m:38s (0h:3m:44s left)
Optimizing NNI: done in 20.6899 secs using 979.1% CPU
Optimizing NNI: done in 20.1161 secs using 980.3% CPU
Optimizing NNI: done in 25.3617 secs using 978.8% CPU
Optimizing NNI: done in 19.3729 secs using 980.3% CPU
Optimizing NNI: done in 21.9363 secs using 980.7% CPU
Optimizing NNI: done in 21.6858 secs using 978.9% CPU
Optimizing NNI: done in 15.3039 secs using 980.5% CPU
Optimizing NNI: done in 19.4463 secs using 979.8% CPU
Optimizing NNI: done in 19.8157 secs using 978.8% CPU
Optimizing NNI: done in 25.075 secs using 975.8% CPU
Iteration 700 / LogL: -15151.324 / Time: 4h:21m:10s (0h:0m:0s left)
Log-likelihood cutoff on original alignment: -15220.251
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.982
NOTE: UFBoot does not converge, continue at least 100 more iterations
UFBoot trees printed to iqtree_gene_trees/COG3265.ufboot
Optimizing NNI: done in 27.7087 secs using 979.6% CPU
Optimizing NNI: done in 24.5605 secs using 979.5% CPU
Optimizing NNI: done in 21.976 secs using 979% CPU
Optimizing NNI: done in 23.8453 secs using 980.3% CPU
Optimizing NNI: done in 21.2136 secs using 979.1% CPU
Optimizing NNI: done in 18.2508 secs using 978.3% CPU
Optimizing NNI: done in 22.1432 secs using 979.5% CPU
Optimizing NNI: done in 17.95 secs using 978% CPU
Optimizing NNI: done in 23.8002 secs using 979.9% CPU
Optimizing NNI: done in 21.3226 secs using 979.7% CPU
Iteration 710 / LogL: -15152.553 / Time: 4h:24m:55s (0h:33m:37s left)
Optimizing NNI: done in 22.6925 secs using 978.5% CPU
Optimizing NNI: done in 19.8527 secs using 977.2% CPU
Optimizing NNI: done in 19.6298 secs using 979.2% CPU
Optimizing NNI: done in 22.3644 secs using 980.4% CPU
Optimizing NNI: done in 29.4294 secs using 980.8% CPU
Optimizing NNI: done in 17.3121 secs using 979.8% CPU
Optimizing NNI: done in 22.2448 secs using 980.7% CPU
Optimizing NNI: done in 20.3778 secs using 979.4% CPU
Optimizing NNI: done in 19.6976 secs using 980.3% CPU
Optimizing NNI: done in 22.2312 secs using 979.4% CPU
Iteration 720 / LogL: -15150.541 / Time: 4h:28m:34s (0h:29m:52s left)
Optimizing NNI: done in 18.2552 secs using 978.2% CPU
Optimizing NNI: done in 19.2231 secs using 978.5% CPU
Optimizing NNI: done in 23.0114 secs using 980.3% CPU
Optimizing NNI: done in 19.1994 secs using 980.2% CPU
Optimizing NNI: done in 18.3219 secs using 979.3% CPU
Optimizing NNI: done in 18.5119 secs using 979.3% CPU
Optimizing NNI: done in 15.1514 secs using 980.6% CPU
Optimizing NNI: done in 22.986 secs using 980.8% CPU
Optimizing NNI: done in 14.2135 secs using 978.1% CPU
Optimizing NNI: done in 20.3618 secs using 978.4% CPU
Iteration 730 / LogL: -15151.825 / Time: 4h:31m:45s (0h:26m:5s left)
Optimizing NNI: done in 23.2842 secs using 976.2% CPU
Optimizing NNI: done in 25.3398 secs using 978.7% CPU
Optimizing NNI: done in 21.6567 secs using 978.3% CPU
Optimizing NNI: done in 21.6082 secs using 979.9% CPU
Optimizing NNI: done in 17.9743 secs using 979.5% CPU
Optimizing NNI: done in 16.7886 secs using 979.1% CPU
Optimizing NNI: done in 19.7299 secs using 971.8% CPU
Optimizing NNI: done in 21.9517 secs using 971.7% CPU
Optimizing NNI: done in 20.3 secs using 978% CPU
Optimizing NNI: done in 25.1191 secs using 979.6% CPU
Iteration 740 / LogL: -15153.991 / Time: 4h:35m:22s (0h:22m:21s left)
Optimizing NNI: done in 22.8487 secs using 979% CPU
Optimizing NNI: done in 26.958 secs using 978.9% CPU
Optimizing NNI: done in 24.6446 secs using 979.1% CPU
Optimizing NNI: done in 19.5959 secs using 981.7% CPU
Optimizing NNI: done in 13.3537 secs using 978.9% CPU
Optimizing NNI: done in 20.3449 secs using 980.9% CPU
Optimizing NNI: done in 30.4002 secs using 981.7% CPU
Optimizing NNI: done in 22.4823 secs using 975.7% CPU
Optimizing NNI: done in 19.0374 secs using 977.1% CPU
Optimizing NNI: done in 19.6589 secs using 981.9% CPU
Iteration 750 / LogL: -15150.540 / Time: 4h:39m:3s (0h:18m:37s left)
Log-likelihood cutoff on original alignment: -15220.251
UFBoot trees printed to iqtree_gene_trees/COG3265.ufboot
Optimizing NNI: done in 21.5677 secs using 981.6% CPU
Optimizing NNI: done in 16.9623 secs using 982.9% CPU
Optimizing NNI: done in 20.6696 secs using 983.3% CPU
Optimizing NNI: done in 13.7284 secs using 980.8% CPU
Optimizing NNI: done in 22.132 secs using 983.6% CPU
Optimizing NNI: done in 22.2455 secs using 984.2% CPU
Optimizing NNI: done in 22.3745 secs using 983% CPU
Optimizing NNI: done in 20.851 secs using 981.7% CPU
Optimizing NNI: done in 28.0017 secs using 981.7% CPU
Optimizing NNI: done in 20.5938 secs using 982.4% CPU
Iteration 760 / LogL: -15150.606 / Time: 4h:42m:36s (0h:14m:53s left)
Optimizing NNI: done in 14.8713 secs using 983.7% CPU
Optimizing NNI: done in 22.2641 secs using 983.9% CPU
Optimizing NNI: done in 22.9388 secs using 983.6% CPU
Optimizing NNI: done in 20.7885 secs using 983.5% CPU
Optimizing NNI: done in 21.4488 secs using 983.1% CPU
Optimizing NNI: done in 17.2247 secs using 982.4% CPU
Optimizing NNI: done in 19.4433 secs using 983.1% CPU
Optimizing NNI: done in 18.9957 secs using 981.7% CPU
Optimizing NNI: done in 23.3083 secs using 983% CPU
Optimizing NNI: done in 18.112 secs using 981.9% CPU
Iteration 770 / LogL: -15150.658 / Time: 4h:45m:58s (0h:11m:9s left)
Optimizing NNI: done in 19.3766 secs using 982.1% CPU
Optimizing NNI: done in 29.9051 secs using 983.8% CPU
Optimizing NNI: done in 17.4217 secs using 983.3% CPU
Optimizing NNI: done in 23.6914 secs using 982% CPU
Optimizing NNI: done in 17.9056 secs using 983.6% CPU
Optimizing NNI: done in 27.5783 secs using 983.3% CPU
Optimizing NNI: done in 18.6778 secs using 983.8% CPU
Optimizing NNI: done in 19.2907 secs using 983.3% CPU
Optimizing NNI: done in 20.1771 secs using 983.9% CPU
Optimizing NNI: done in 20.7712 secs using 983.9% CPU
Iteration 780 / LogL: -15150.547 / Time: 4h:49m:35s (0h:7m:26s left)
Optimizing NNI: done in 21.0781 secs using 980% CPU
Optimizing NNI: done in 19.938 secs using 983.6% CPU
Optimizing NNI: done in 23.3928 secs using 982.6% CPU
Optimizing NNI: done in 18.2521 secs using 983.1% CPU
Optimizing NNI: done in 20.2322 secs using 983.7% CPU
Optimizing NNI: done in 14.9743 secs using 984.6% CPU
Optimizing NNI: done in 23.2297 secs using 983.7% CPU
Optimizing NNI: done in 19.2909 secs using 984.3% CPU
Optimizing NNI: done in 27.412 secs using 983.8% CPU
Optimizing NNI: done in 19.3633 secs using 983.3% CPU
Iteration 790 / LogL: -15151.007 / Time: 4h:53m:5s (0h:3m:42s left)
Optimizing NNI: done in 23.2377 secs using 982.9% CPU
Optimizing NNI: done in 22.9501 secs using 982.9% CPU
Optimizing NNI: done in 26.2004 secs using 982.6% CPU
Optimizing NNI: done in 22.9695 secs using 985.1% CPU
Optimizing NNI: done in 19.8272 secs using 983.7% CPU
Optimizing NNI: done in 15.8195 secs using 982.4% CPU
Optimizing NNI: done in 18.2652 secs using 980.7% CPU
Optimizing NNI: done in 23.0068 secs using 984.1% CPU
Optimizing NNI: done in 19.4041 secs using 983.8% CPU
Optimizing NNI: done in 23.3515 secs using 983.4% CPU
Iteration 800 / LogL: -15151.825 / Time: 4h:56m:42s (0h:0m:0s left)
Log-likelihood cutoff on original alignment: -15220.251
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.993
UFBoot trees printed to iqtree_gene_trees/COG3265.ufboot
TREE SEARCH COMPLETED AFTER 800 ITERATIONS / Time: 4h:56m:43s

--------------------------------------------------------------------
|                    FINALIZING TREE SEARCH                        |
--------------------------------------------------------------------
Performs final model parameters optimization
Estimate model parameters (epsilon = 0.010)
1. Initial log-likelihood: -15150.540
Optimal log-likelihood: -15150.540
Mixture weights: 0.017 0.021 0.028 0.007 0.014 0.007 0.015 0.007 0.002 0.010 0.023 0.006 0.013 0.020 0.007 0.012 0.007 0.043 0.032 0.022 0.010 0.015 0.013 0.015 0.024 0.013 0.022 0.025 0.021 0.012 0.008 0.013 0.009 0.047 0.044 0.032 0.040 0.015 0.010 0.021 0.015 0.010 0.023 0.012 0.007 0.000 0.034 0.011 0.013 0.012 0.026 0.006 0.010 0.014 0.022 0.020 0.004 0.011 0.013 0.012
Gamma shape alpha: 0.665
Parameters optimization took 1 rounds (1.869 sec)
BEST SCORE FOUND : -15150.540
Creating bootstrap support values...
Split supports printed to NEXUS file iqtree_gene_trees/COG3265.splits.nex
Total tree length: 59.049

Total number of iterations: 800
CPU time used for tree search: 173623.656 sec (48h:13m:43s)
Wall-clock time used for tree search: 17796.381 sec (4h:56m:36s)
Total CPU time used: 173707.502 sec (48h:15m:7s)
Total wall-clock time used: 17805.604 sec (4h:56m:45s)
UFBoot trees printed to iqtree_gene_trees/COG3265.ufboot

Computing bootstrap consensus tree...
Reading input file iqtree_gene_trees/COG3265.splits.nex...
52 taxa and 1498 splits.
Consensus tree written to iqtree_gene_trees/COG3265.contree
Reading input trees file iqtree_gene_trees/COG3265.contree
Log-likelihood of consensus tree: -15152.390

Analysis results written to: 
  IQ-TREE report:                iqtree_gene_trees/COG3265.iqtree
  Maximum-likelihood tree:       iqtree_gene_trees/COG3265.treefile
  Likelihood distances:          iqtree_gene_trees/COG3265.mldist

Ultrafast bootstrap approximation results written to:
  Split support values:          iqtree_gene_trees/COG3265.splits.nex
  Consensus tree:                iqtree_gene_trees/COG3265.contree
  UFBoot trees:                  iqtree_gene_trees/COG3265.ufboot
  Screen log file:               iqtree_gene_trees/COG3265.log

ALISIM COMMAND
--------------
Currently, we only support exporting AliSim commands from common models of DNA, Protein, Binary, and Morphological data. To simulate data from other models (mixture, lie-markov, etc), please refer to the User Manual of AliSim. Thanks!

Date and Time: Fri Apr  7 04:45:51 2023
